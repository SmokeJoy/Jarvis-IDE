orted using 'import type'.

23   const resetThinkingBudget = useCallback(async () => {
                                 ~~~~~~~~~~~

  src/hooks/useJarvisIdeThinkingBudget.ts:1:15
    1 import type { useCallback, useState } from 'react';
                    ~~~~~~~~~~~
    'useCallback' was imported here.

src/hooks/useJarvisIdeThinkingBudget.ts:27:13 - error TS2304: Cannot find name 'vscode'.

27       await vscode.postMessage({
               ~~~~~~

src/hooks/useJarvisIdeUsage.ts:4:29 - error TS1361: 'useState' cannot be used as a value because it was imported using 'import type'.

4   const [usage, setUsage] = useState<{
                              ~~~~~~~~

  src/hooks/useJarvisIdeUsage.ts:1:28
    1 import type { useCallback, useState } from 'react';
                                 ~~~~~~~~
    'useState' was imported here.

src/hooks/useJarvisIdeUsage.ts:14:23 - error TS1361: 'useCallback' cannot be used as a value because it was imported using 'import type'.

14   const updateUsage = useCallback(async (newUsage: {
                         ~~~~~~~~~~~

  src/hooks/useJarvisIdeUsage.ts:1:15
    1 import type { useCallback, useState } from 'react';
                    ~~~~~~~~~~~
    'useCallback' was imported here.

src/hooks/useJarvisIdeUsage.ts:21:13 - error TS2304: Cannot find name 'vscode'.

21       await vscode.postMessage({
               ~~~~~~

src/hooks/useJarvisIdeUsage.ts:35:22 - error TS1361: 'useCallback' cannot be used as a value because it was imported using 'import type'.

35   const resetUsage = useCallback(async () => {
                        ~~~~~~~~~~~

  src/hooks/useJarvisIdeUsage.ts:1:15
    1 import type { useCallback, useState } from 'react';
                    ~~~~~~~~~~~
    'useCallback' was imported here.

src/hooks/useJarvisIdeUsage.ts:43:13 - error TS2304: Cannot find name 'vscode'.

43       await vscode.postMessage({
               ~~~~~~

src/integrations/checkpoints/CheckpointExclusions.ts:319:20 - error TS2532: Object is possibly 'undefined'.

319     .map((line) => line.split(" ")[0].trim())
                       ~~~~~~~~~~~~~~~~~~

src/integrations/checkpoints/CheckpointGitOperations.ts:4:21 - error TS1484: 'SimpleGit' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.

4 import simpleGit, { SimpleGit } from "simple-git"
                      ~~~~~~~~~

src/integrations/checkpoints/CheckpointGitOperations.ts:62:16 - error TS2349: This expression is not callable.
  Type 'typeof import("E:/cline-main/node_modules/simple-git/dist/typings/index")' has no call signatures.

62    const git = simpleGit(path.dirname(gitPath))
                  ~~~~~~~~~

src/integrations/checkpoints/CheckpointGitOperations.ts:80:15 - error TS2349: This expression is not callable.
  Type 'typeof import("E:/cline-main/node_modules/simple-git/dist/typings/index")' has no call signatures.

80   const git = simpleGit(checkpointsDir)
                 ~~~~~~~~~

src/integrations/checkpoints/CheckpointGitOperations.ts:117:16 - error TS2349: This expression is not callable.
  Type 'typeof import("E:/cline-main/node_modules/simple-git/dist/typings/index")' has no call signatures.

117    const git = simpleGit(path.dirname(gitPath))
                   ~~~~~~~~~

src/integrations/checkpoints/CheckpointMigration.ts:45:37 - error TS18048: 'mostRecentFolder' is possibly 'undefined'.

45    const checkpointsDir = path.join(mostRecentFolder.path, "checkpoints")
                                       ~~~~~~~~~~~~~~~~

src/integrations/checkpoints/CheckpointTracker.ts:101:11 - error TS2349: This expression is not callable.
  Type 'typeof import("E:/cline-main/node_modules/simple-git/dist/typings/index")' has no call signatures.

101     await simpleGit().version()
              ~~~~~~~~~

src/integrations/checkpoints/CheckpointTracker.ts:156:16 - error TS2349: This expression is not callable.
  Type 'typeof import("E:/cline-main/node_modules/simple-git/dist/typings/index")' has no call signatures.

156    const git = simpleGit(path.dirname(gitPath))
                   ~~~~~~~~~

src/integrations/checkpoints/CheckpointTracker.ts:214:4 - error TS2412: Type 'string | undefined' is not assignable to type 'string' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.
  Type 'undefined' is not assignable to type 'string'.

214    this.lastRetrievedShadowGitConfigWorkTree = await this.gitOperations.getShadowGitConfigWorkTree(gitPath)
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/integrations/checkpoints/CheckpointTracker.ts:243:15 - error TS2349: This expression is not callable.
  Type 'typeof import("E:/cline-main/node_modules/simple-git/dist/typings/index")' has no call signatures.

243   const git = simpleGit(path.dirname(gitPath))
                  ~~~~~~~~~

src/integrations/checkpoints/CheckpointTracker.ts:279:15 - error TS2349: This expression is not callable.
  Type 'typeof import("E:/cline-main/node_modules/simple-git/dist/typings/index")' has no call signatures.

279   const git = simpleGit(path.dirname(gitPath))
                  ~~~~~~~~~

src/integrations/checkpoints/CheckpointTracker.ts:343:15 - error TS2349: This expression is not callable.
  Type 'typeof import("E:/cline-main/node_modules/simple-git/dist/typings/index")' has no call signatures.

343   const git = simpleGit(path.dirname(gitPath))
                  ~~~~~~~~~

src/integrations/checkpoints/CheckpointUtils.ts:21:67 - error TS6133: 'taskId' is declared but its value is never read.

21 export async function getShadowGitPath(globalStoragePath: string, taskId: string, cwdHash: string): Promise<string> {
                                                                     ~~~~~~

src/integrations/diagnostics/index.ts:14:86 - error TS2349: This expression is not callable.
  Type '{ default: (a: any, b: any) => boolean; }' has no call signatures.

14   const newProblemsForUri = newDiags.filter((newDiag) => !oldDiags.some((oldDiag) => deepEqual(oldDiag, newDiag)))
                                                                                        ~~~~~~~~~

  src/integrations/diagnostics/index.ts:3:1
    3 import * as deepEqual from "fast-deep-equal"
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.

src/integrations/editor/DiffViewProvider.ts:6:1 - error TS6133: 'formatResponse' is declared but its value is never read.

6 import { formatResponse } from "../../core/prompts/responses.js"
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/integrations/editor/DiffViewProvider.ts:8:23 - error TS7016: Could not find a declaration file for module 'diff'. 'E:/cline-main/node_modules/diff/lib/index.js' implicitly has an 'any' type.
  Try `npm i --save-dev @types/diff` if it exists or add a new declaration (.d.ts) file containing `declare module 'diff';`

8 import * as diff from "diff"
                        ~~~~~~

src/integrations/editor/DiffViewProvider.ts:9:64 - error TS2307: Cannot find module '../diagnostics.js' or its corresponding type declarations.

9 import { diagnosticsToProblemsString, getNewDiagnostics } from "../diagnostics.js"
                                                                 ~~~~~~~~~~~~~~~~~~~

src/integrations/editor/DiffViewProvider.ts:276:20 - error TS2345: Argument of type 'string | undefined' is not assignable to parameter of type 'PathLike'.
  Type 'undefined' is not assignable to type 'PathLike'.

276     await fs.rmdir(this.createdDirs[i])
                       ~~~~~~~~~~~~~~~~~~~

src/integrations/editor/DiffViewProvider.ts:323:9 - error TS6133: 'directoryName' is declared but its value is never read.

323   const directoryName = path.dirname(this.relPath)
            ~~~~~~~~~~~~~

src/integrations/editor/DiffViewProvider.ts:384:3 - error TS2412: Type 'undefined' is not assignable to type '"create" | "modify"' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.

384   this.editType = undefined
      ~~~~~~~~~~~~~

src/integrations/editor/DiffViewProvider.ts:389:3 - error TS2412: Type 'undefined' is not assignable to type 'TextEditor' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.

389   this.activeDiffEditor = undefined
      ~~~~~~~~~~~~~~~~~~~~~

src/integrations/editor/DiffViewProvider.ts:390:3 - error TS2412: Type 'undefined' is not assignable to type 'DecorationController' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.

390   this.fadedOverlayController = undefined
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/integrations/editor/DiffViewProvider.ts:391:3 - error TS2412: Type 'undefined' is not assignable to type 'DecorationController' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.

391   this.activeLineController = undefined
      ~~~~~~~~~~~~~~~~~~~~~~~~~

src/integrations/misc/export-markdown.ts:4:29 - error TS6196: 'ContentType' is declared but never used.

4 import type { ContentBlock, ContentType, isImageBlock, isTextBlock, isToolUseBlock, isToolResultBlock } from "../../types/chat.types.js"
                              ~~~~~~~~~~~

src/integrations/misc/export-markdown.ts:52:6 - error TS1361: 'isTextBlock' cannot be used as a value because it was imported using 'import type'.

52  if (isTextBlock(block)) {
        ~~~~~~~~~~~

  src/integrations/misc/export-markdown.ts:4:56
    4 import type { ContentBlock, ContentType, isImageBlock, isTextBlock, isToolUseBlock, isToolResultBlock } from "../../types/chat.types.js"
                                                             ~~~~~~~~~~~
    'isTextBlock' was imported here.

src/integrations/misc/export-markdown.ts:54:13 - error TS1361: 'isImageBlock' cannot be used as a value because it was imported using 'import type'.

54  } else if (isImageBlock(block)) {
               ~~~~~~~~~~~~

  src/integrations/misc/export-markdown.ts:4:42
    4 import type { ContentBlock, ContentType, isImageBlock, isTextBlock, isToolUseBlock, isToolResultBlock } from "../../types/chat.types.js"
                                               ~~~~~~~~~~~~
    'isImageBlock' was imported here.

src/integrations/misc/export-markdown.ts:56:13 - error TS1361: 'isToolUseBlock' cannot be used as a value because it was imported using 'import type'.

56  } else if (isToolUseBlock(block)) {
               ~~~~~~~~~~~~~~

  src/integrations/misc/export-markdown.ts:4:69
    4 import type { ContentBlock, ContentType, isImageBlock, isTextBlock, isToolUseBlock, isToolResultBlock } from "../../types/chat.types.js"
                                                                          ~~~~~~~~~~~~~~
    'isToolUseBlock' was imported here.

src/integrations/misc/export-markdown.ts:66:13 - error TS1361: 'isToolResultBlock' cannot be used as a value because it was imported using 'import type'.

66  } else if (isToolResultBlock(block)) {
               ~~~~~~~~~~~~~~~~~

  src/integrations/misc/export-markdown.ts:4:85
    4 import type { ContentBlock, ContentType, isImageBlock, isTextBlock, isToolUseBlock, isToolResultBlock } from "../../types/chat.types.js"
                                                                                          ~~~~~~~~~~~~~~~~~
    'isToolResultBlock' was imported here.

src/integrations/misc/link-preview.ts:3:10 - error TS2305: Module '"../../types/global.js"' has no exported member 'OpenGraphData'.

3 import { OpenGraphData } from '../../types/global.js'
           ~~~~~~~~~~~~~

src/integrations/misc/open-file.ts:13:34 - error TS2769: No overload matches this call.
  Overload 1 of 3, '(arrayBuffer: WithImplicitCoercion<ArrayBufferLike>, byteOffset?: number | undefined, length?: number | undefined): Buffer<ArrayBufferLike>', gave the following error.
    Argument of type 'string | undefined' is not assignable to parameter of type 'WithImplicitCoercion<ArrayBufferLike>'.
      Type 'undefined' is not assignable to type 'WithImplicitCoercion<ArrayBufferLike>'.
  Overload 2 of 3, '(string: WithImplicitCoercion<string>, encoding?: BufferEncoding | undefined): Buffer<ArrayBuffer>', gave the following error.
    Argument of type 'string | undefined' is not assignable to parameter of type 'WithImplicitCoercion<string>'.
      Type 'undefined' is not assignable to type 'WithImplicitCoercion<string>'.

13  const imageBuffer = Buffer.from(base64Data, "base64")
                                    ~~~~~~~~~~


src/integrations/terminal/get-latest-output.ts:34:22 - error TS2532: Object is possibly 'undefined'.

34    while (i >= 0 && !lines[i].trim().startsWith(lastLine)) {
                        ~~~~~~~~

src/integrations/terminal/TerminalManager.ts:5:10 - error TS1484: 'TerminalInfo' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.

5 import { TerminalInfo, TerminalRegistry } from "./TerminalRegistry.js"
           ~~~~~~~~~~~~

src/integrations/terminal/TerminalManager.ts:74:3 - error TS2687: All declarations of 'shellIntegration' must have identical modifiers.

74   shellIntegration?: {
     ~~~~~~~~~~~~~~~~

src/integrations/terminal/TerminalManager.ts:74:3 - error TS2717: Subsequent property declarations must have the same type.  Property 'shellIntegration' must be of type 'TerminalShellIntegration | undefined', but here has type '{ cwd?: Uri; executeCommand?: (command: string) => { read: () => AsyncIterable<string>; }; } | undefined'.

74   shellIntegration?: {
     ~~~~~~~~~~~~~~~~

  node_modules/@types/vscode/index.d.ts:7652:12
    7652   readonly shellIntegration: TerminalShellIntegration | undefined;
                    ~~~~~~~~~~~~~~~~
    'shellIntegration' was also declared here.

src/integrations/terminal/TerminalManager.ts:115:23 - error TS1361: 'TerminalProcess' cannot be used as a value because it was imported using 'import type'.

115   const process = new TerminalProcess()
                          ~~~~~~~~~~~~~~~

  src/integrations/terminal/TerminalManager.ts:4:29
    4 import type { mergePromise, TerminalProcess, TerminalProcessResultPromise } from "./TerminalProcess.js"
                                  ~~~~~~~~~~~~~~~
    'TerminalProcess' was imported here.

src/integrations/terminal/TerminalManager.ts:156:10 - error TS1361: 'mergePromise' cannot be used as a value because it was imported using 'import type'.

156   return mergePromise(process, promise)
             ~~~~~~~~~~~~

  src/integrations/terminal/TerminalManager.ts:4:15
    4 import type { mergePromise, TerminalProcess, TerminalProcessResultPromise } from "./TerminalProcess.js"
                    ~~~~~~~~~~~~
    'mergePromise' was imported here.

src/integrations/terminal/TerminalProcess.test.ts:7:1 - error TS6133: 'EventEmitter' is declared but its value is never read.

7 import { EventEmitter } from "events"
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/integrations/terminal/TerminalProcess.test.ts:13:3 - error TS2687: All declarations of 'shellIntegration' must have identical modifiers.

13   shellIntegration?: {
     ~~~~~~~~~~~~~~~~

src/integrations/terminal/TerminalProcess.test.ts:13:3 - error TS2717: Subsequent property declarations must have the same type.  Property 'shellIntegration' must be of type 'TerminalShellIntegration | undefined', but here has type '{ cwd?: Uri; executeCommand?: (command: string) => { read: () => AsyncIterable<string>; }; } | undefined'.

13   shellIntegration?: {
     ~~~~~~~~~~~~~~~~

  node_modules/@types/vscode/index.d.ts:7652:12
    7652   readonly shellIntegration: TerminalShellIntegration | undefined;
                    ~~~~~~~~~~~~~~~~
    'shellIntegration' was also declared here.

src/integrations/terminal/TerminalProcess.test.ts:282:30 - error TS2345: Argument of type '[string]' is not assignable to parameter of type 'never'.

282    expect(emitSpy.calledWith("completed")).to.be.true
                                 ~~~~~~~~~~~

src/integrations/terminal/TerminalProcess.ts:77:18 - error TS2532: Object is possibly 'undefined'.

77       lines[0] = lines[0].replace(/[^\x20-\x7E]/g, "")
                    ~~~~~~~~

src/integrations/terminal/TerminalProcess.ts:80:30 - error TS2532: Object is possibly 'undefined'.

80      if (lines.length > 0 && lines[0].length >= 2 && lines[0][0] === lines[0][1]) {
                                ~~~~~~~~

src/integrations/terminal/TerminalProcess.ts:80:54 - error TS2532: Object is possibly 'undefined'.

80      if (lines.length > 0 && lines[0].length >= 2 && lines[0][0] === lines[0][1]) {
                                                        ~~~~~~~~

src/integrations/terminal/TerminalProcess.ts:80:70 - error TS2532: Object is possibly 'undefined'.

80      if (lines.length > 0 && lines[0].length >= 2 && lines[0][0] === lines[0][1]) {
                                                                        ~~~~~~~~

src/integrations/terminal/TerminalProcess.ts:81:18 - error TS2532: Object is possibly 'undefined'.

81       lines[0] = lines[0].slice(1)
                    ~~~~~~~~

src/integrations/terminal/TerminalProcess.ts:85:18 - error TS2532: Object is possibly 'undefined'.

85       lines[0] = lines[0].replace(/^[^a-zA-Z0-9]*/, "")
                    ~~~~~~~~

src/integrations/terminal/TerminalProcess.ts:88:18 - error TS2532: Object is possibly 'undefined'.

88       lines[1] = lines[1].replace(/^[^a-zA-Z0-9]*/, "")
                    ~~~~~~~~

src/integrations/terminal/TerminalProcess.ts:102:28 - error TS2532: Object is possibly 'undefined'.

102       if (command.includes(lines[i].trim())) {
                               ~~~~~~~~

src/integrations/terminal/TerminalProcess.ts:231:30 - error TS18048: 'lastLine' is possibly 'undefined'.

231    lines[lines.length - 1] = lastLine.replace(/[%$#>]\s*$/, "")
                                 ~~~~~~~~

src/integrations/terminal/TerminalRegistry.ts:17:49 - error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '{ cwd: string | vscode.Uri | undefined; name: string; iconPath: any; }' is not assignable to parameter of type 'TerminalOptions' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
      Types of property 'cwd' are incompatible.
        Type 'string | Uri | undefined' is not assignable to type 'string | Uri'.
          Type 'undefined' is not assignable to type 'string | Uri'.

 17   const terminal = vscode.window.createTerminal({
                                                    ~
 18    cwd,
    ~~~~~~~
...
 20    iconPath: new vscode.ThemeIcon("robot"),
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 21   })
    ~~~

  node_modules/vscode/vscode.d.ts:6567:19
    6567   export function createTerminal(options: TerminalOptions): Terminal;
                           ~~~~~~~~~~~~~~
    The last overload is declared here.

src/integrations/terminal/TerminalRegistry.ts:20:14 - error TS2673: Constructor of class 'ThemeIcon' is private and only accessible within the class declaration.

20    iconPath: new vscode.ThemeIcon("robot"),
                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/integrations/theme/getTheme.ts:4:30 - error TS2307: Cannot find module 'monaco-vscode-textmate-theme-converter/lib/cjs' or its corresponding type declarations.

4 import { convertTheme } from "monaco-vscode-textmate-theme-converter/lib/cjs"
                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/integrations/theme/getTheme.ts:43:8 - error TS18048: 'extension' is possibly 'undefined'.

43    if (extension.packageJSON?.contributes?.themes?.length > 0) {
          ~~~~~~~~~

src/integrations/theme/getTheme.ts:44:25 - error TS18048: 'extension' is possibly 'undefined'.

44     for (const theme of extension.packageJSON.contributes.themes) {
                           ~~~~~~~~~

src/integrations/theme/getTheme.ts:46:35 - error TS18048: 'extension' is possibly 'undefined'.

46       const themePath = path.join(extension.extensionPath, theme.path)
                                     ~~~~~~~~~

src/integrations/theme/getTheme.ts:113:45 - error TS2722: Cannot invoke an object which is possibly 'undefined'.

113       if (!secondValue.some((item2: any) => mergeKeys[key](item, item2))) {
                                                ~~~~~~~~~~~~~~

src/mas/MasManager.ts:29:23 - error TS6138: Property 'context' is declared but its value is never read.

29   constructor(private context: vscode.ExtensionContext) {
                         ~~~~~~~

src/mas/MasManager.ts:31:29 - error TS1361: 'MasStateManager' cannot be used as a value because it was imported using 'import type'.

31     this.stateManager = new MasStateManager(context);
                               ~~~~~~~~~~~~~~~

  src/mas/MasManager.ts:4:15
    4 import type { MasStateManager } from './MasStateManager.js';
                    ~~~~~~~~~~~~~~~
    'MasStateManager' was imported here.

src/mas/MasManager.ts:237:7 - error TS2375: Type '{ id: string; content: string; createdAt: Date; agentId: string; style: CodeStyle | undefined; priority: PriorityLevel; }' is not assignable to type 'Instruction' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'style' are incompatible.
    Type 'CodeStyle | undefined' is not assignable to type 'CodeStyle'.
      Type 'undefined' is not assignable to type 'CodeStyle'.

237       instruction: {
          ~~~~~~~~~~~

  src/shared/types/mas.types.ts:130:3
    130   instruction: Instruction;
          ~~~~~~~~~~~
    The expected type comes from property 'instruction' which is declared here on type 'Omit<Task, "id" | "status" | "createdAt">'

src/mas/MasManager.ts:330:9 - error TS2412: Type 'undefined' is not assignable to type 'string' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.

330         agent.currentTask = undefined;
            ~~~~~~~~~~~~~~~~~

src/mas/MasManager.ts:373:11 - error TS2412: Type 'undefined' is not assignable to type 'string' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.

373           agent.currentTask = undefined;
              ~~~~~~~~~~~~~~~~~

src/mas/MasManager.ts:450:13 - error TS2412: Type 'undefined' is not assignable to type 'string' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.

450             agent.currentTask = undefined;
                ~~~~~~~~~~~~~~~~~

src/mas/MasManager.ts:520:11 - error TS6133: 'queueState' is declared but its value is never read.

520     const queueState = this.taskQueue.getQueueState();
              ~~~~~~~~~~

src/mas/MasStateManager.ts:10:27 - error TS6133: 'DEFAULT_MODE_KEY' is declared but its value is never read.

10   private static readonly DEFAULT_MODE_KEY = 'mas-default-mode';
                             ~~~~~~~~~~~~~~~~

src/mas/MasStateManager.ts:11:27 - error TS6133: 'DEFAULT_STYLE_KEY' is declared but its value is never read.

11   private static readonly DEFAULT_STYLE_KEY = 'mas-default-style';
                             ~~~~~~~~~~~~~~~~~

src/mas/services/MasPersistenceService.ts:5:10 - error TS1484: 'Task' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.

5 import { Task, AgentStatus } from '../../shared/types/mas.types.js';
           ~~~~

src/mas/services/MasPersistenceService.ts:5:16 - error TS1484: 'AgentStatus' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.

5 import { Task, AgentStatus } from '../../shared/types/mas.types.js';
                 ~~~~~~~~~~~

src/mas/services/MasPersistenceService.ts:224:45 - error TS2532: Object is possibly 'undefined'.

224         const jsonContent = fs.readFileSync(uris[0].fsPath, 'utf8');
                                                ~~~~~~~

src/mas/services/MasPersistenceService.ts:227:53 - error TS2532: Object is possibly 'undefined'.

227         this.logger.info(`Stato MAS importato da: ${uris[0].fsPath}`);
                                                        ~~~~~~~

src/mas/services/MasPersistenceService.ts:228:86 - error TS2532: Object is possibly 'undefined'.

228         vscode.window.showInformationMessage(`Stato MAS importato con successo da: ${uris[0].fsPath}`);
                                                                                         ~~~~~~~

src/mas/services/TaskQueueMessageHandler.ts:2:1 - error TS6133: 'path' is declared but its value is never read.

2 import * as path from 'path';
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/mas/services/TaskQueueMessageHandler.ts:4:10 - error TS1484: 'AgentStatus' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.

4 import { AgentStatus } from '../../shared/types/mas.types.js';
           ~~~~~~~~~~~

src/mas/services/TaskQueueMessageHandler.ts:5:10 - error TS1484: 'WebviewMessage' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.

5 import { WebviewMessage } from '../../types/webview.types.js';
           ~~~~~~~~~~~~~~

src/mas/services/TaskQueueMessageHandler.ts:55:11 - error TS6133: 'context' is declared but its value is never read.

55   private context: vscode.ExtensionContext;
             ~~~~~~~

src/mas/services/TaskQueueMessageHandler.ts:58:11 - error TS6133: 'updateTimer' is declared but its value is never read.

58   private updateTimer: NodeJS.Timeout | undefined;
             ~~~~~~~~~~~

src/mas/services/TaskQueueMessageHandler.ts:142:11 - error TS6133: 'handleWebviewMessage' is declared but its value is never read.

142   private handleWebviewMessage(message: any): void {
              ~~~~~~~~~~~~~~~~~~~~

src/mas/services/TaskQueueMessageHandler.ts:247:11 - error TS6133: 'startAutoUpdate' is declared but its value is never read.

247   private startAutoUpdate(): void {
              ~~~~~~~~~~~~~~~

src/mas/services/TaskQueueService.ts:2:1 - error TS6133: 'fs' is declared but its value is never read.

2 import * as fs from 'fs';
  ~~~~~~~~~~~~~~~~~~~~~~~~~

src/mas/services/TaskQueueService.ts:5:10 - error TS1484: 'Task' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.

5 import { Task, TaskStatus } from '../../shared/types/mas.types.js';
           ~~~~

src/mas/services/TaskQueueService.ts:5:16 - error TS1484: 'TaskStatus' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.

5 import { Task, TaskStatus } from '../../shared/types/mas.types.js';
                 ~~~~~~~~~~

src/mas/services/TaskQueueService.ts:5:16 - error TS6133: 'TaskStatus' is declared but its value is never read.

5 import { Task, TaskStatus } from '../../shared/types/mas.types.js';
                 ~~~~~~~~~~

src/mas/services/TaskQueueService.ts:6:10 - error TS2305: Module '"../../shared/types/webview.types.js"' has no exported member 'TaskQueueViewMessage'.

6 import { TaskQueueViewMessage } from '../../shared/types/webview.types.js';
           ~~~~~~~~~~~~~~~~~~~~

src/mas/services/TaskQueueService.ts:371:29 - error TS6133: 'webview' is declared but its value is never read.

371   private getWebviewContent(webview: vscode.Webview): string {
                                ~~~~~~~

src/mas/TaskQueueManager.ts:2:45 - error TS6196: 'PriorityLevel' is declared but never used.

2 import type { Task, TaskResult, TaskStatus, PriorityLevel, Instruction } from '../shared/types/mas.types.js';
                                              ~~~~~~~~~~~~~

src/mas/TaskQueueManager.ts:218:9 - error TS2532: Object is possibly 'undefined'.

218         queue[index].status = 'aborted';
            ~~~~~~~~~~~~

src/mas/TaskQueueManager.ts:219:9 - error TS2532: Object is possibly 'undefined'.

219         queue[index].completedAt = new Date();
            ~~~~~~~~~~~~

src/mas/TaskQueueManager.ts:222:31 - error TS2379: Argument of type '{ id?: string; status?: TaskStatus; createdAt?: Date; startedAt?: Date; completedAt?: Date; assignedTo?: string; instruction?: Instruction; result?: TaskResult; error?: string; }' is not assignable to parameter of type 'Task' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Property 'id' is optional in type '{ id?: string; status?: TaskStatus; createdAt?: Date; startedAt?: Date; completedAt?: Date; assignedTo?: string; instruction?: Instruction; result?: TaskResult; error?: string; }' but required in type 'Task'.

222         this.failedTasks.push({ ...queue[index] });
                                  ~~~~~~~~~~~~~~~~~~~

src/providers/BaseLLMProvider.ts:6:10 - error TS1484: 'LLMProvider' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.

6 import { LLMProvider } from "../shared/types/api.types.js";
           ~~~~~~~~~~~

src/providers/BaseLLMProvider.ts:30:23 - error TS2420: Class 'BaseLLMProvider' incorrectly implements interface 'LLMProvider'.
  Type 'BaseLLMProvider' is missing the following properties from type 'LLMProvider': id, supportsStreaming, requiresApiKey, modelOptions, defaultModel

30 export abstract class BaseLLMProvider implements LLMProvider {
                         ~~~~~~~~~~~~~~~

src/providers/BaseLLMProvider.ts:44:5 - error TS2412: Type 'string | undefined' is not assignable to type 'string' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.
  Type 'undefined' is not assignable to type 'string'.

44     this.apiKey = apiKey;
       ~~~~~~~~~~~

src/providers/BaseLLMProvider.ts:45:5 - error TS2412: Type 'string | undefined' is not assignable to type 'string' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.
  Type 'undefined' is not assignable to type 'string'.

45     this.baseUrl = baseUrl;
       ~~~~~~~~~~~~

src/providers/BaseLLMProvider.ts:102:9 - error TS2322: Type '{ content: string; role?: "system" | "user" | "assistant"; }' is not assignable to type 'LLMMessage'.
  Property 'role' is optional in type '{ content: string; role?: "system" | "user" | "assistant"; }' but required in type 'LLMMessage'.

102         processedMessages[systemIndex] = {
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/providers/BaseLLMProvider.ts:104:23 - error TS2532: Object is possibly 'undefined'.

104           content: `${processedMessages[systemIndex].content}\n\n${options.contextPrompt}`
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/providers/BaseLLMProvider.ts:122:9 - error TS2322: Type '{ content: string; role?: "system" | "user" | "assistant"; }' is not assignable to type 'LLMMessage'.
  Property 'role' is optional in type '{ content: string; role?: "system" | "user" | "assistant"; }' but required in type 'LLMMessage'.

122         processedMessages[systemIndex] = {
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/providers/BaseLLMProvider.ts:124:23 - error TS2532: Object is possibly 'undefined'.

124           content: `${processedMessages[systemIndex].content}\n\nFai riferimento alla documentazione allegata quando disponibile.`
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/providers/BaseLLMProvider.ts:136:9 - error TS2322: Type '{ content: string; role?: "system" | "user" | "assistant"; }' is not assignable to type 'LLMMessage'.
  Property 'role' is optional in type '{ content: string; role?: "system" | "user" | "assistant"; }' but required in type 'LLMMessage'.

136         processedMessages[systemIndex] = {
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/providers/BaseLLMProvider.ts:138:23 - error TS2532: Object is possibly 'undefined'.

138           content: `${processedMessages[systemIndex].content}\n\nRispondi con focus sulla programmazione e sul codice. Fornisci risposte concise e tecniche.`
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/providers/BaseLLMProvider.ts:150:9 - error TS2322: Type '{ content: string; role?: "system" | "user" | "assistant"; }' is not assignable to type 'LLMMessage'.
  Property 'role' is optional in type '{ content: string; role?: "system" | "user" | "assistant"; }' but required in type 'LLMMessage'.

150         processedMessages[systemIndex] = {
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/providers/BaseLLMProvider.ts:152:23 - error TS2532: Object is possibly 'undefined'.

152           content: `${processedMessages[systemIndex].content}\n\nPuoi assumere diversi ruoli o collaborare con altri esperti virtuali per risolvere problemi complessi.`
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/providers/LLMRouter.ts:110:18 - error TS1361: 'GGUFProvider' cannot be used as a value because it was imported using 'import type'.

110       return new GGUFProvider(options.ggufConfig);
                     ~~~~~~~~~~~~

  src/providers/LLMRouter.ts:11:15
    11 import type { GGUFProvider, GGUFConfig } from './local/GGUFProvider.js';
                     ~~~~~~~~~~~~
    'GGUFProvider' was imported here.

src/providers/local/GGUFProvider.ts:22:35 - error TS1361: 'BaseLLMProvider' cannot be used as a value because it was imported using 'import type'.

22 export class GGUFProvider extends BaseLLMProvider {
                                     ~~~~~~~~~~~~~~~

  src/providers/local/GGUFProvider.ts:6:15
    6 import type { BaseLLMProvider, LLMMessage, LLMOptions } from '../BaseLLMProvider.js';
                    ~~~~~~~~~~~~~~~
    'BaseLLMProvider' was imported here.

src/providers/local/GGUFProvider.ts:120:54 - error TS18046: 'error' is of type 'unknown'.

120       throw new Error(`Errore nella chiamata GGUF: ${error.message}`);
                                                         ~~~~~

src/providers/local/GGUFProvider.ts:197:52 - error TS18046: 'error' is of type 'unknown'.

197       throw new Error(`Errore nello stream GGUF: ${error.message}`);
                                                       ~~~~~

src/providers/local/LMDeployProvider.ts:8:11 - error TS6196: 'LMDeployRequest' is declared but never used.

8 interface LMDeployRequest {
            ~~~~~~~~~~~~~~~

src/providers/local/LMDeployProvider.ts:58:39 - error TS1361: 'BaseLLMProvider' cannot be used as a value because it was imported using 'import type'.

58 export class LMDeployProvider extends BaseLLMProvider {
                                         ~~~~~~~~~~~~~~~

  src/providers/local/LMDeployProvider.ts:6:15
    6 import type { BaseLLMProvider, LLMMessage, LLMOptions } from '../BaseLLMProvider.js';
                    ~~~~~~~~~~~~~~~
    'BaseLLMProvider' was imported here.

src/providers/local/LMDeployProvider.ts:90:9 - error TS2412: Type 'number | undefined' is not assignable to type 'number' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.
  Type 'undefined' is not assignable to type 'number'.

90         formattedData.temperature = options.temperature;
           ~~~~~~~~~~~~~~~~~~~~~~~~~

src/providers/local/LMDeployProvider.ts:91:9 - error TS2412: Type 'number | undefined' is not assignable to type 'number' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.
  Type 'undefined' is not assignable to type 'number'.

91         formattedData.max_new_tokens = options.max_tokens;
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/providers/local/LMDeployProvider.ts:92:9 - error TS2412: Type 'string[] | undefined' is not assignable to type 'string[]' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.
  Type 'undefined' is not assignable to type 'string[]'.

92         formattedData.stop = options.stop;
           ~~~~~~~~~~~~~~~~~~

src/providers/local/LMDeployProvider.ts:113:60 - error TS18046: 'error' is of type 'unknown'.

113       throw new Error(`Errore nella chiamata a LMDeploy: ${error.message}`);
                                                               ~~~~~

src/providers/local/LMDeployProvider.ts:134:9 - error TS2412: Type 'number | undefined' is not assignable to type 'number' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.
  Type 'undefined' is not assignable to type 'number'.

134         formattedData.temperature = options.temperature;
            ~~~~~~~~~~~~~~~~~~~~~~~~~

src/providers/local/LMDeployProvider.ts:135:9 - error TS2412: Type 'number | undefined' is not assignable to type 'number' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.
  Type 'undefined' is not assignable to type 'number'.

135         formattedData.max_new_tokens = options.max_tokens;
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/providers/local/LMDeployProvider.ts:136:9 - error TS2412: Type 'string[] | undefined' is not assignable to type 'string[]' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.
  Type 'undefined' is not assignable to type 'string[]'.

136         formattedData.stop = options.stop;
            ~~~~~~~~~~~~~~~~~~

src/providers/local/LMDeployProvider.ts:195:56 - error TS18046: 'error' is of type 'unknown'.

195       throw new Error(`Errore nello stream LMDeploy: ${error.message}`);
                                                           ~~~~~

src/providers/local/LMStudioProvider.ts:59:39 - error TS1361: 'BaseLLMProvider' cannot be used as a value because it was imported using 'import type'.

59 export class LMStudioProvider extends BaseLLMProvider {
                                         ~~~~~~~~~~~~~~~

  src/providers/local/LMStudioProvider.ts:6:15
    6 import type { BaseLLMProvider, LLMMessage, LLMOptions } from '../BaseLLMProvider.js';
                    ~~~~~~~~~~~~~~~
    'BaseLLMProvider' was imported here.

src/providers/local/LMStudioProvider.ts:91:9 - error TS2412: Type 'number | undefined' is not assignable to type 'number' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.
  Type 'undefined' is not assignable to type 'number'.

91         formattedData.temperature = options.temperature;
           ~~~~~~~~~~~~~~~~~~~~~~~~~

src/providers/local/LMStudioProvider.ts:92:9 - error TS2412: Type 'number | undefined' is not assignable to type 'number' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.
  Type 'undefined' is not assignable to type 'number'.

92         formattedData.max_tokens = options.max_tokens;
           ~~~~~~~~~~~~~~~~~~~~~~~~

src/providers/local/LMStudioProvider.ts:93:9 - error TS2412: Type 'string[] | undefined' is not assignable to type 'string[]' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.
  Type 'undefined' is not assignable to type 'string[]'.

93         formattedData.stop = options.stop;
           ~~~~~~~~~~~~~~~~~~

src/providers/local/LMStudioProvider.ts:117:54 - error TS2532: Object is possibly 'undefined'.

117       if (data.choices && data.choices.length > 0 && data.choices[0].message) {
                                                         ~~~~~~~~~~~~~~~

src/providers/local/LMStudioProvider.ts:118:16 - error TS2532: Object is possibly 'undefined'.

118         return data.choices[0].message.content;
                   ~~~~~~~~~~~~~~~

src/providers/local/LMStudioProvider.ts:123:61 - error TS18046: 'error' is of type 'unknown'.

123       throw new Error(`Errore nella chiamata a LM Studio: ${error.message}`);
                                                                ~~~~~

src/providers/local/LMStudioProvider.ts:144:9 - error TS2412: Type 'number | undefined' is not assignable to type 'number' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.
  Type 'undefined' is not assignable to type 'number'.

144         formattedData.temperature = options.temperature;
            ~~~~~~~~~~~~~~~~~~~~~~~~~

src/providers/local/LMStudioProvider.ts:145:9 - error TS2412: Type 'number | undefined' is not assignable to type 'number' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.
  Type 'undefined' is not assignable to type 'number'.

145         formattedData.max_tokens = options.max_tokens;
            ~~~~~~~~~~~~~~~~~~~~~~~~

src/providers/local/LMStudioProvider.ts:146:9 - error TS2412: Type 'string[] | undefined' is not assignable to type 'string[]' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.
  Type 'undefined' is not assignable to type 'string[]'.

146         formattedData.stop = options.stop;
            ~~~~~~~~~~~~~~~~~~

src/providers/local/LMStudioProvider.ts:198:60 - error TS2532: Object is possibly 'undefined'.

198             if (data.choices && data.choices.length > 0 && data.choices[0].delta && data.choices[0].delta.content) {
                                                               ~~~~~~~~~~~~~~~

src/providers/local/LMStudioProvider.ts:198:85 - error TS2532: Object is possibly 'undefined'.

198             if (data.choices && data.choices.length > 0 && data.choices[0].delta && data.choices[0].delta.content) {
                                                                                        ~~~~~~~~~~~~~~~

src/providers/local/LMStudioProvider.ts:199:21 - error TS2532: Object is possibly 'undefined'.

199               yield data.choices[0].delta.content;
                        ~~~~~~~~~~~~~~~

src/providers/local/LMStudioProvider.ts:208:57 - error TS18046: 'error' is of type 'unknown'.

208       throw new Error(`Errore nello stream LM Studio: ${error.message}`);
                                                            ~~~~~

src/providers/local/OllamaProvider.ts:8:11 - error TS6196: 'OllamaGenerateRequest' is declared but never used.

8 interface OllamaGenerateRequest {
            ~~~~~~~~~~~~~~~~~~~~~

src/providers/local/OllamaProvider.ts:93:37 - error TS1361: 'BaseLLMProvider' cannot be used as a value because it was imported using 'import type'.

93 export class OllamaProvider extends BaseLLMProvider {
                                       ~~~~~~~~~~~~~~~

  src/providers/local/OllamaProvider.ts:6:15
    6 import type { BaseLLMProvider, LLMMessage, LLMOptions } from '../BaseLLMProvider.js';
                    ~~~~~~~~~~~~~~~
    'BaseLLMProvider' was imported here.

src/providers/local/OllamaProvider.ts:126:11 - error TS2412: Type 'number | undefined' is not assignable to type 'number' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.
  Type 'undefined' is not assignable to type 'number'.

126           formattedData.options.temperature = options.temperature;
              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/providers/local/OllamaProvider.ts:127:11 - error TS2412: Type 'number | undefined' is not assignable to type 'number' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.
  Type 'undefined' is not assignable to type 'number'.

127           formattedData.options.num_predict = options.max_tokens;
              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/providers/local/OllamaProvider.ts:128:11 - error TS2412: Type 'string[] | undefined' is not assignable to type 'string[]' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.
  Type 'undefined' is not assignable to type 'string[]'.

128           formattedData.options.stop = options.stop;
              ~~~~~~~~~~~~~~~~~~~~~~~~~~

src/providers/local/OllamaProvider.ts:151:58 - error TS18046: 'error' is of type 'unknown'.

151       throw new Error(`Errore nella chiamata a Ollama: ${error.message}`);
                                                             ~~~~~

src/providers/local/OllamaProvider.ts:173:11 - error TS2412: Type 'number | undefined' is not assignable to type 'number' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.
  Type 'undefined' is not assignable to type 'number'.

173           formattedData.options.temperature = options.temperature;
              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/providers/local/OllamaProvider.ts:174:11 - error TS2412: Type 'number | undefined' is not assignable to type 'number' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.
  Type 'undefined' is not assignable to type 'number'.

174           formattedData.options.num_predict = options.max_tokens;
              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/providers/local/OllamaProvider.ts:175:11 - error TS2412: Type 'string[] | undefined' is not assignable to type 'string[]' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.
  Type 'undefined' is not assignable to type 'string[]'.

175           formattedData.options.stop = options.stop;
              ~~~~~~~~~~~~~~~~~~~~~~~~~~

src/providers/local/OllamaProvider.ts:238:54 - error TS18046: 'error' is of type 'unknown'.

238       throw new Error(`Errore nello stream Ollama: ${error.message}`);
                                                         ~~~~~

src/providers/remote/AnthropicProvider.ts:66:40 - error TS1361: 'BaseLLMProvider' cannot be used as a value because it was imported using 'import type'.

66 export class AnthropicProvider extends BaseLLMProvider {
                                          ~~~~~~~~~~~~~~~

  src/providers/remote/AnthropicProvider.ts:6:15
    6 import type { BaseLLMProvider, LLMMessage, LLMOptions } from '../BaseLLMProvider.js';
                    ~~~~~~~~~~~~~~~
    'BaseLLMProvider' was imported here.

src/providers/remote/AnthropicProvider.ts:98:7 - error TS2412: Type 'number | undefined' is not assignable to type 'number' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.
  Type 'undefined' is not assignable to type 'number'.

98       formattedData.temperature = options?.temperature;
         ~~~~~~~~~~~~~~~~~~~~~~~~~

src/providers/remote/AnthropicProvider.ts:99:7 - error TS2412: Type 'number | undefined' is not assignable to type 'number' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.
  Type 'undefined' is not assignable to type 'number'.

99       formattedData.max_tokens = options?.max_tokens;
         ~~~~~~~~~~~~~~~~~~~~~~~~

src/providers/remote/AnthropicProvider.ts:108:9 - error TS2769: No overload matches this call.
  Overload 1 of 2, '(input: string | URL | Request, init?: RequestInit | undefined): Promise<Response>', gave the following error.
    Type '{ 'Content-Type': string; 'X-API-Key': string | undefined; 'anthropic-version': string; }' is not assignable to type 'HeadersInit | undefined'.
      Type '{ 'Content-Type': string; 'X-API-Key': string | undefined; 'anthropic-version': string; }' is not assignable to type 'undefined'.
  Overload 2 of 2, '(input: URL | RequestInfo, init?: RequestInit | undefined): Promise<Response>', gave the following error.
    Type '{ 'Content-Type': string; 'X-API-Key': string | undefined; 'anthropic-version': string; }' is not assignable to type 'HeadersInit | undefined'.
      Type '{ 'Content-Type': string; 'X-API-Key': string | undefined; 'anthropic-version': string; }' is not assignable to type 'undefined'.

108         headers: {
            ~~~~~~~


src/providers/remote/AnthropicProvider.ts:134:62 - error TS18046: 'error' is of type 'unknown'.

134       throw new Error(`Errore nella chiamata ad Anthropic: ${error.message}`);
                                                                 ~~~~~

src/providers/remote/AnthropicProvider.ts:155:7 - error TS2412: Type 'number | undefined' is not assignable to type 'number' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.
  Type 'undefined' is not assignable to type 'number'.

155       formattedData.temperature = options?.temperature;
          ~~~~~~~~~~~~~~~~~~~~~~~~~

src/providers/remote/AnthropicProvider.ts:156:7 - error TS2412: Type 'number | undefined' is not assignable to type 'number' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.
  Type 'undefined' is not assignable to type 'number'.

156       formattedData.max_tokens = options?.max_tokens;
          ~~~~~~~~~~~~~~~~~~~~~~~~

src/providers/remote/AnthropicProvider.ts:165:9 - error TS2769: No overload matches this call.
  Overload 1 of 2, '(input: string | URL | Request, init?: RequestInit | undefined): Promise<Response>', gave the following error.
    Type '{ 'Content-Type': string; 'X-API-Key': string | undefined; 'anthropic-version': string; }' is not assignable to type 'HeadersInit | undefined'.
      Type '{ 'Content-Type': string; 'X-API-Key': string | undefined; 'anthropic-version': string; }' is not assignable to type 'undefined'.
  Overload 2 of 2, '(input: URL | RequestInfo, init?: RequestInit | undefined): Promise<Response>', gave the following error.
    Type '{ 'Content-Type': string; 'X-API-Key': string | undefined; 'anthropic-version': string; }' is not assignable to type 'HeadersInit | undefined'.
      Type '{ 'Content-Type': string; 'X-API-Key': string | undefined; 'anthropic-version': string; }' is not assignable to type 'undefined'.

165         headers: {
            ~~~~~~~


src/providers/remote/AnthropicProvider.ts:229:57 - error TS18046: 'error' is of type 'unknown'.

229       throw new Error(`Errore nello stream Anthropic: ${error.message}`);
                                                            ~~~~~

src/providers/remote/GoogleAIProvider.ts:79:39 - error TS1361: 'BaseLLMProvider' cannot be used as a value because it was imported using 'import type'.

79 export class GoogleAIProvider extends BaseLLMProvider {
                                         ~~~~~~~~~~~~~~~

  src/providers/remote/GoogleAIProvider.ts:6:15
    6 import type { BaseLLMProvider, LLMMessage, LLMOptions } from '../BaseLLMProvider.js';
                    ~~~~~~~~~~~~~~~
    'BaseLLMProvider' was imported here.

src/providers/remote/GoogleAIProvider.ts:111:9 - error TS2375: Type '{ temperature: number | undefined; maxOutputTokens: number | undefined; stopSequences: string[] | undefined; }' is not assignable to type '{ temperature?: number; topP?: number; topK?: number; maxOutputTokens?: number; stopSequences?: string[]; }' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'temperature' are incompatible.
    Type 'number | undefined' is not assignable to type 'number'.
      Type 'undefined' is not assignable to type 'number'.

111         formattedData.generationConfig = {
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/providers/remote/GoogleAIProvider.ts:139:11 - error TS2532: Object is possibly 'undefined'.

139           data.candidates[0].content && data.candidates[0].content.parts) {
              ~~~~~~~~~~~~~~~~~~

src/providers/remote/GoogleAIProvider.ts:139:41 - error TS2532: Object is possibly 'undefined'.

139           data.candidates[0].content && data.candidates[0].content.parts) {
                                            ~~~~~~~~~~~~~~~~~~

src/providers/remote/GoogleAIProvider.ts:141:16 - error TS2532: Object is possibly 'undefined'.

141         return data.candidates[0].content.parts
                   ~~~~~~~~~~~~~~~~~~

src/providers/remote/GoogleAIProvider.ts:148:61 - error TS18046: 'error' is of type 'unknown'.

148       throw new Error(`Errore nella chiamata a Google AI: ${error.message}`);
                                                                ~~~~~

src/providers/remote/GoogleAIProvider.ts:169:9 - error TS2375: Type '{ temperature: number | undefined; maxOutputTokens: number | undefined; stopSequences: string[] | undefined; }' is not assignable to type '{ temperature?: number; topP?: number; topK?: number; maxOutputTokens?: number; stopSequences?: string[]; }' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'temperature' are incompatible.
    Type 'number | undefined' is not assignable to type 'number'.
      Type 'undefined' is not assignable to type 'number'.

169         formattedData.generationConfig = {
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/providers/remote/GoogleAIProvider.ts:220:17 - error TS2532: Object is possibly 'undefined'.

220                 data.candidates[0].content && data.candidates[0].content.parts) {
                    ~~~~~~~~~~~~~~~~~~

src/providers/remote/GoogleAIProvider.ts:220:47 - error TS2532: Object is possibly 'undefined'.

220                 data.candidates[0].content && data.candidates[0].content.parts) {
                                                  ~~~~~~~~~~~~~~~~~~

src/providers/remote/GoogleAIProvider.ts:222:33 - error TS2532: Object is possibly 'undefined'.

222               const textChunk = data.candidates[0].content.parts
                                    ~~~~~~~~~~~~~~~~~~

src/providers/remote/GoogleAIProvider.ts:236:57 - error TS18046: 'error' is of type 'unknown'.

236       throw new Error(`Errore nello stream Google AI: ${error.message}`);
                                                            ~~~~~

src/providers/remote/GroqProvider.ts:66:35 - error TS1361: 'BaseLLMProvider' cannot be used as a value because it was imported using 'import type'.

66 export class GroqProvider extends BaseLLMProvider {
                                     ~~~~~~~~~~~~~~~

  src/providers/remote/GroqProvider.ts:6:15
    6 import type { BaseLLMProvider, LLMMessage, LLMOptions } from '../BaseLLMProvider.js';
                    ~~~~~~~~~~~~~~~
    'BaseLLMProvider' was imported here.

src/providers/remote/GroqProvider.ts:98:7 - error TS2412: Type 'number | undefined' is not assignable to type 'number' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.
  Type 'undefined' is not assignable to type 'number'.

98       formattedData.temperature = options?.temperature;
         ~~~~~~~~~~~~~~~~~~~~~~~~~

src/providers/remote/GroqProvider.ts:99:7 - error TS2412: Type 'number | undefined' is not assignable to type 'number' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.
  Type 'undefined' is not assignable to type 'number'.

99       formattedData.max_tokens = options?.max_tokens;
         ~~~~~~~~~~~~~~~~~~~~~~~~

src/providers/remote/GroqProvider.ts:100:7 - error TS2412: Type 'string[] | undefined' is not assignable to type 'string[]' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.
  Type 'undefined' is not assignable to type 'string[]'.

100       formattedData.stop = options?.stop;
          ~~~~~~~~~~~~~~~~~~

src/providers/remote/GroqProvider.ts:121:54 - error TS2532: Object is possibly 'undefined'.

121       if (data.choices && data.choices.length > 0 && data.choices[0].message) {
                                                         ~~~~~~~~~~~~~~~

src/providers/remote/GroqProvider.ts:122:16 - error TS2532: Object is possibly 'undefined'.

122         return data.choices[0].message.content;
                   ~~~~~~~~~~~~~~~

src/providers/remote/GroqProvider.ts:127:56 - error TS18046: 'error' is of type 'unknown'.

127       throw new Error(`Errore nella chiamata a Groq: ${error.message}`);
                                                           ~~~~~

src/providers/remote/GroqProvider.ts:148:7 - error TS2412: Type 'number | undefined' is not assignable to type 'number' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.
  Type 'undefined' is not assignable to type 'number'.

148       formattedData.temperature = options?.temperature;
          ~~~~~~~~~~~~~~~~~~~~~~~~~

src/providers/remote/GroqProvider.ts:149:7 - error TS2412: Type 'number | undefined' is not assignable to type 'number' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.
  Type 'undefined' is not assignable to type 'number'.

149       formattedData.max_tokens = options?.max_tokens;
          ~~~~~~~~~~~~~~~~~~~~~~~~

src/providers/remote/GroqProvider.ts:150:7 - error TS2412: Type 'string[] | undefined' is not assignable to type 'string[]' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.
  Type 'undefined' is not assignable to type 'string[]'.

150       formattedData.stop = options?.stop;
          ~~~~~~~~~~~~~~~~~~

src/providers/remote/GroqProvider.ts:199:60 - error TS2532: Object is possibly 'undefined'.

199             if (data.choices && data.choices.length > 0 && data.choices[0].delta && data.choices[0].delta.content) {
                                                               ~~~~~~~~~~~~~~~

src/providers/remote/GroqProvider.ts:199:85 - error TS2532: Object is possibly 'undefined'.

199             if (data.choices && data.choices.length > 0 && data.choices[0].delta && data.choices[0].delta.content) {
                                                                                        ~~~~~~~~~~~~~~~

src/providers/remote/GroqProvider.ts:200:21 - error TS2532: Object is possibly 'undefined'.

200               yield data.choices[0].delta.content;
                        ~~~~~~~~~~~~~~~

src/providers/remote/GroqProvider.ts:208:52 - error TS18046: 'error' is of type 'unknown'.

208       throw new Error(`Errore nello stream Groq: ${error.message}`);
                                                       ~~~~~

src/providers/remote/MistralProvider.ts:67:38 - error TS1361: 'BaseLLMProvider' cannot be used as a value because it was imported using 'import type'.

67 export class MistralProvider extends BaseLLMProvider {
                                        ~~~~~~~~~~~~~~~

  src/providers/remote/MistralProvider.ts:6:15
    6 import type { BaseLLMProvider, LLMMessage, LLMOptions } from '../BaseLLMProvider.js';
                    ~~~~~~~~~~~~~~~
    'BaseLLMProvider' was imported here.

src/providers/remote/MistralProvider.ts:99:7 - error TS2412: Type 'number | undefined' is not assignable to type 'number' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.
  Type 'undefined' is not assignable to type 'number'.

99       formattedData.temperature = options?.temperature;
         ~~~~~~~~~~~~~~~~~~~~~~~~~

src/providers/remote/MistralProvider.ts:100:7 - error TS2412: Type 'number | undefined' is not assignable to type 'number' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.
  Type 'undefined' is not assignable to type 'number'.

100       formattedData.max_tokens = options?.max_tokens;
          ~~~~~~~~~~~~~~~~~~~~~~~~

src/providers/remote/MistralProvider.ts:121:54 - error TS2532: Object is possibly 'undefined'.

121       if (data.choices && data.choices.length > 0 && data.choices[0].message) {
                                                         ~~~~~~~~~~~~~~~

src/providers/remote/MistralProvider.ts:122:16 - error TS2532: Object is possibly 'undefined'.

122         return data.choices[0].message.content;
                   ~~~~~~~~~~~~~~~

src/providers/remote/MistralProvider.ts:127:59 - error TS18046: 'error' is of type 'unknown'.

127       throw new Error(`Errore nella chiamata a Mistral: ${error.message}`);
                                                              ~~~~~

src/providers/remote/MistralProvider.ts:148:7 - error TS2412: Type 'number | undefined' is not assignable to type 'number' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.
  Type 'undefined' is not assignable to type 'number'.

148       formattedData.temperature = options?.temperature;
          ~~~~~~~~~~~~~~~~~~~~~~~~~

src/providers/remote/MistralProvider.ts:149:7 - error TS2412: Type 'number | undefined' is not assignable to type 'number' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.
  Type 'undefined' is not assignable to type 'number'.

149       formattedData.max_tokens = options?.max_tokens;
          ~~~~~~~~~~~~~~~~~~~~~~~~

src/providers/remote/MistralProvider.ts:198:60 - error TS2532: Object is possibly 'undefined'.

198             if (data.choices && data.choices.length > 0 && data.choices[0].delta && data.choices[0].delta.content) {
                                                               ~~~~~~~~~~~~~~~

src/providers/remote/MistralProvider.ts:198:85 - error TS2532: Object is possibly 'undefined'.

198             if (data.choices && data.choices.length > 0 && data.choices[0].delta && data.choices[0].delta.content) {
                                                                                        ~~~~~~~~~~~~~~~

src/providers/remote/MistralProvider.ts:199:21 - error TS2532: Object is possibly 'undefined'.

199               yield data.choices[0].delta.content;
                        ~~~~~~~~~~~~~~~

src/providers/remote/MistralProvider.ts:207:55 - error TS18046: 'error' is of type 'unknown'.

207       throw new Error(`Errore nello stream Mistral: ${error.message}`);
                                                          ~~~~~

src/providers/remote/OpenAIProvider.ts:78:37 - error TS1361: 'BaseLLMProvider' cannot be used as a value because it was imported using 'import type'.

78 export class OpenAIProvider extends BaseLLMProvider {
                                       ~~~~~~~~~~~~~~~

  src/providers/remote/OpenAIProvider.ts:6:15
    6 import type { BaseLLMProvider, LLMMessage, LLMOptions } from '../BaseLLMProvider.js';
                    ~~~~~~~~~~~~~~~
    'BaseLLMProvider' was imported here.

src/providers/remote/OpenAIProvider.ts:110:7 - error TS2412: Type 'number | undefined' is not assignable to type 'number' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.
  Type 'undefined' is not assignable to type 'number'.

110       formattedData.temperature = options?.temperature;
          ~~~~~~~~~~~~~~~~~~~~~~~~~

src/providers/remote/OpenAIProvider.ts:111:7 - error TS2412: Type 'number | undefined' is not assignable to type 'number' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.
  Type 'undefined' is not assignable to type 'number'.

111       formattedData.max_tokens = options?.max_tokens;
          ~~~~~~~~~~~~~~~~~~~~~~~~

src/providers/remote/OpenAIProvider.ts:112:7 - error TS2412: Type 'string[] | undefined' is not assignable to type 'string[]' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.
  Type 'undefined' is not assignable to type 'string[]'.

112       formattedData.stop = options?.stop;
          ~~~~~~~~~~~~~~~~~~

src/providers/remote/OpenAIProvider.ts:133:54 - error TS2532: Object is possibly 'undefined'.

133       if (data.choices && data.choices.length > 0 && data.choices[0].message) {
                                                         ~~~~~~~~~~~~~~~

src/providers/remote/OpenAIProvider.ts:134:16 - error TS2532: Object is possibly 'undefined'.

134         return data.choices[0].message.content;
                   ~~~~~~~~~~~~~~~

src/providers/remote/OpenAIProvider.ts:139:58 - error TS18046: 'error' is of type 'unknown'.

139       throw new Error(`Errore nella chiamata a OpenAI: ${error.message}`);
                                                             ~~~~~

src/providers/remote/OpenAIProvider.ts:160:7 - error TS2412: Type 'number | undefined' is not assignable to type 'number' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.
  Type 'undefined' is not assignable to type 'number'.

160       formattedData.temperature = options?.temperature;
          ~~~~~~~~~~~~~~~~~~~~~~~~~

src/providers/remote/OpenAIProvider.ts:161:7 - error TS2412: Type 'number | undefined' is not assignable to type 'number' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.
  Type 'undefined' is not assignable to type 'number'.

161       formattedData.max_tokens = options?.max_tokens;
          ~~~~~~~~~~~~~~~~~~~~~~~~

src/providers/remote/OpenAIProvider.ts:162:7 - error TS2412: Type 'string[] | undefined' is not assignable to type 'string[]' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.
  Type 'undefined' is not assignable to type 'string[]'.

162       formattedData.stop = options?.stop;
          ~~~~~~~~~~~~~~~~~~

src/providers/remote/OpenAIProvider.ts:211:60 - error TS2532: Object is possibly 'undefined'.

211             if (data.choices && data.choices.length > 0 && data.choices[0].delta && data.choices[0].delta.content) {
                                                               ~~~~~~~~~~~~~~~

src/providers/remote/OpenAIProvider.ts:211:85 - error TS2532: Object is possibly 'undefined'.

211             if (data.choices && data.choices.length > 0 && data.choices[0].delta && data.choices[0].delta.content) {
                                                                                        ~~~~~~~~~~~~~~~

src/providers/remote/OpenAIProvider.ts:212:21 - error TS2532: Object is possibly 'undefined'.

212               yield data.choices[0].delta.content;
                        ~~~~~~~~~~~~~~~

src/providers/remote/OpenAIProvider.ts:220:54 - error TS18046: 'error' is of type 'unknown'.

220       throw new Error(`Errore nello stream OpenAI: ${error.message}`);
                                                         ~~~~~

src/scripts/__tests__/fix-imports.test.ts:3:1 - error TS6133: 'path' is declared but its value is never read.

3 import path from 'path';
  ~~~~~~~~~~~~~~~~~~~~~~~~

src/scripts/__tests__/fix-imports.test.ts:73:50 - error TS2345: Argument of type 'undefined' is not assignable to parameter of type 'never'.

73       (fs.access as jest.Mock).mockResolvedValue(undefined);
                                                    ~~~~~~~~~

src/scripts/__tests__/fix-imports.test.ts:75:48 - error TS2345: Argument of type '{ isDirectory: () => boolean; }' is not assignable to parameter of type 'never'.

75       (fs.stat as jest.Mock).mockResolvedValue({ isDirectory: () => false });
                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/scripts/__tests__/fix-imports.test.ts:83:50 - error TS2345: Argument of type 'undefined' is not assignable to parameter of type 'never'.

83       (fs.access as jest.Mock).mockResolvedValue(undefined);
                                                    ~~~~~~~~~

src/scripts/__tests__/fix-imports.test.ts:89:51 - error TS2345: Argument of type 'string[]' is not assignable to parameter of type 'never'.

89       (fs.readdir as jest.Mock).mockResolvedValue(['file1.ts', 'file2.ts', 'subdir']);
                                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/scripts/__tests__/fix-imports.test.ts:111:50 - error TS2345: Argument of type 'undefined' is not assignable to parameter of type 'never'.

111       (fs.access as jest.Mock).mockResolvedValue(undefined);
                                                     ~~~~~~~~~

src/scripts/__tests__/fix-imports.test.ts:116:51 - error TS2345: Argument of type 'string[]' is not assignable to parameter of type 'never'.

116       (fs.readdir as jest.Mock).mockResolvedValue(['file1.ts', 'file2.js', 'file3.json']);
                                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/scripts/__tests__/fix-imports.test.ts:128:9 - error TS2345: Argument of type '"import { foo } from '../utils/foo';"' is not assignable to parameter of type 'never'.

128         'import { foo } from \'../utils/foo\';'
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/scripts/__tests__/fix-imports.test.ts:142:52 - error TS2345: Argument of type '"import { foo } from '../utils/foo.js';"' is not assignable to parameter of type 'never'.

142       (fs.readFile as jest.Mock).mockResolvedValue(content);
                                                       ~~~~~~~

src/scripts/__tests__/fix-imports.test.ts:155:52 - error TS2345: Argument of type '"import fs from 'fs';"' is not assignable to parameter of type 'never'.

155       (fs.readFile as jest.Mock).mockResolvedValue(content);
                                                       ~~~~~~~

src/scripts/__tests__/fix-imports.test.ts:181:52 - error TS2345: Argument of type '"\n        import { foo } from '../utils/foo.js';\n        import type { Bar } from './types.js';\n        import default from '../components/default.js';\n        import * as helpers from '../helpers.js';\n      "' is not assignable to parameter of type 'never'.

181       (fs.readFile as jest.Mock).mockResolvedValue(content);
                                                       ~~~~~~~

src/scripts/__tests__/fix-imports.test.ts:194:9 - error TS2345: Argument of type '"import { foo } from '../utils/foo';"' is not assignable to parameter of type 'never'.

194         'import { foo } from \'../utils/foo\';'
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/scripts/__tests__/fix-imports.test.ts:219:52 - error TS2345: Argument of type '"\n        // import { foo } from '../utils/foo.js';\n        import { bar } from '../utils/bar.js';\n        /* \n        import { baz } from '../utils/baz.js';\n        */\n      "' is not assignable to parameter of type 'never'.

219       (fs.readFile as jest.Mock).mockResolvedValue(content);
                                                       ~~~~~~~

src/scripts/benchmark-import.ts:19:20 - error TS2345: Argument of type 'string | undefined' is not assignable to parameter of type 'PathLike'.
  Type 'undefined' is not assignable to type 'PathLike'.

19 if (!fs.existsSync(filePath)) {
                      ~~~~~~~~

src/scripts/benchmark-import.ts:25:6 - error TS18048: 'filePath' is possibly 'undefined'.

25 if (!filePath.toLowerCase().endsWith('.json')) {
        ~~~~~~~~

src/scripts/benchmark-import.ts:33:43 - error TS2345: Argument of type 'string | undefined' is not assignable to parameter of type 'string'.
  Type 'undefined' is not assignable to type 'string'.

33   const sessionId = storage.importSession(filePath);
                                             ~~~~~~~~

src/scripts/benchmark-import.ts:36:37 - error TS2345: Argument of type 'string | undefined' is not assignable to parameter of type 'string'.
  Type 'undefined' is not assignable to type 'string'.

36   console.log(`File: ${path.resolve(filePath)}`);
                                       ~~~~~~~~

src/scripts/benchmark-import.ts:38:52 - error TS18046: 'error' is of type 'unknown'.

38   console.error('Errore durante l\'importazione:', error.message);
                                                      ~~~~~

src/scripts/fix-imports-integration.test.ts:9:1 - error TS6192: All imports in import declaration are unused.

9 import { mkdir, writeFile, rm } from 'fs/promises';
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/scripts/fix-imports-integration.test.ts:11:1 - error TS6133: 'existsSync' is declared but its value is never read.

11 import { existsSync } from 'fs';
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/scripts/fix-imports-integration.test.ts:17:7 - error TS6133: 'TEMP_DIR' is declared but its value is never read.

17 const TEMP_DIR = join(__dirname, '..', '..', 'temp-test-imports');
         ~~~~~~~~

src/scripts/fix-imports-integration.test.ts:111:12 - error TS2532: Object is possibly 'undefined'.

111     expect(filesToProcess[0].endsWith('file.ts')).toBe(true);
               ~~~~~~~~~~~~~~~~~

src/scripts/fix-imports-integration.test.ts:125:11 - error TS6133: 'result' is declared but its value is never read.

125     const result = await processFile(filePath, false, true);
              ~~~~~~

src/scripts/fix-imports-integration.test.ts:191:1 - error TS6133: 'readFile' is declared but its value is never read.

191 import { readFile } from 'fs/promises';
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/scripts/fix-imports.test.ts:2:1 - error TS6133: 'path' is declared but its value is never read.

2 import * as path from 'path';
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/scripts/fix-imports.test.ts:4:15 - error TS2305: Module '"./fix-imports.js"' has no exported member 'fixImportsInFile'.

4 import type { fixImportsInFile, getJsExtensionType, extractModulesFromImports } from './fix-imports.js';
                ~~~~~~~~~~~~~~~~

src/scripts/fix-imports.test.ts:4:33 - error TS2305: Module '"./fix-imports.js"' has no exported member 'getJsExtensionType'.

4 import type { fixImportsInFile, getJsExtensionType, extractModulesFromImports } from './fix-imports.js';
                                  ~~~~~~~~~~~~~~~~~~

src/scripts/fix-imports.test.ts:4:53 - error TS2305: Module '"./fix-imports.js"' has no exported member 'extractModulesFromImports'.

4 import type { fixImportsInFile, getJsExtensionType, extractModulesFromImports } from './fix-imports.js';
                                                      ~~~~~~~~~~~~~~~~~~~~~~~~~

src/scripts/fix-imports.test.ts:24:14 - error TS1361: 'getJsExtensionType' cannot be used as a value because it was imported using 'import type'.

24       expect(getJsExtensionType('tsconfig.json')).toBe('none');
                ~~~~~~~~~~~~~~~~~~

  src/scripts/fix-imports.test.ts:4:33
    4 import type { fixImportsInFile, getJsExtensionType, extractModulesFromImports } from './fix-imports.js';
                                      ~~~~~~~~~~~~~~~~~~
    'getJsExtensionType' was imported here.

src/scripts/fix-imports.test.ts:25:14 - error TS1361: 'getJsExtensionType' cannot be used as a value because it was imported using 'import type'.

25       expect(getJsExtensionType('package.json')).toBe('none');
                ~~~~~~~~~~~~~~~~~~

  src/scripts/fix-imports.test.ts:4:33
    4 import type { fixImportsInFile, getJsExtensionType, extractModulesFromImports } from './fix-imports.js';
                                      ~~~~~~~~~~~~~~~~~~
    'getJsExtensionType' was imported here.

src/scripts/fix-imports.test.ts:26:14 - error TS1361: 'getJsExtensionType' cannot be used as a value because it was imported using 'import type'.

26       expect(getJsExtensionType('src/components/Button.ts')).toBe('ts');
                ~~~~~~~~~~~~~~~~~~

  src/scripts/fix-imports.test.ts:4:33
    4 import type { fixImportsInFile, getJsExtensionType, extractModulesFromImports } from './fix-imports.js';
                                      ~~~~~~~~~~~~~~~~~~
    'getJsExtensionType' was imported here.

src/scripts/fix-imports.test.ts:27:14 - error TS1361: 'getJsExtensionType' cannot be used as a value because it was imported using 'import type'.

27       expect(getJsExtensionType('src/components/Button.tsx')).toBe('tsx');
                ~~~~~~~~~~~~~~~~~~

  src/scripts/fix-imports.test.ts:4:33
    4 import type { fixImportsInFile, getJsExtensionType, extractModulesFromImports } from './fix-imports.js';
                                      ~~~~~~~~~~~~~~~~~~
    'getJsExtensionType' was imported here.

src/scripts/fix-imports.test.ts:28:14 - error TS1361: 'getJsExtensionType' cannot be used as a value because it was imported using 'import type'.

28       expect(getJsExtensionType('src/components/Button.js')).toBe('js');
                ~~~~~~~~~~~~~~~~~~

  src/scripts/fix-imports.test.ts:4:33
    4 import type { fixImportsInFile, getJsExtensionType, extractModulesFromImports } from './fix-imports.js';
                                      ~~~~~~~~~~~~~~~~~~
    'getJsExtensionType' was imported here.

src/scripts/fix-imports.test.ts:29:14 - error TS1361: 'getJsExtensionType' cannot be used as a value because it was imported using 'import type'.

29       expect(getJsExtensionType('src/components/Button.jsx')).toBe('jsx');
                ~~~~~~~~~~~~~~~~~~

  src/scripts/fix-imports.test.ts:4:33
    4 import type { fixImportsInFile, getJsExtensionType, extractModulesFromImports } from './fix-imports.js';
                                      ~~~~~~~~~~~~~~~~~~
    'getJsExtensionType' was imported here.

src/scripts/fix-imports.test.ts:30:14 - error TS1361: 'getJsExtensionType' cannot be used as a value because it was imported using 'import type'.

30       expect(getJsExtensionType('src/components/Button.d.ts')).toBe('dts');
                ~~~~~~~~~~~~~~~~~~

  src/scripts/fix-imports.test.ts:4:33
    4 import type { fixImportsInFile, getJsExtensionType, extractModulesFromImports } from './fix-imports.js';
                                      ~~~~~~~~~~~~~~~~~~
    'getJsExtensionType' was imported here.

src/scripts/fix-imports.test.ts:47:22 - error TS1361: 'extractModulesFromImports' cannot be used as a value because it was imported using 'import type'.

47       const result = extractModulesFromImports(code);
                        ~~~~~~~~~~~~~~~~~~~~~~~~~

  src/scripts/fix-imports.test.ts:4:53
    4 import type { fixImportsInFile, getJsExtensionType, extractModulesFromImports } from './fix-imports.js';
                                                          ~~~~~~~~~~~~~~~~~~~~~~~~~
    'extractModulesFromImports' was imported here.

src/scripts/fix-imports.test.ts:86:28 - error TS1361: 'fixImportsInFile' cannot be used as a value because it was imported using 'import type'.

86       const result = await fixImportsInFile('src/someFile.ts', {
                              ~~~~~~~~~~~~~~~~

  src/scripts/fix-imports.test.ts:4:15
    4 import type { fixImportsInFile, getJsExtensionType, extractModulesFromImports } from './fix-imports.js';
                    ~~~~~~~~~~~~~~~~
    'fixImportsInFile' was imported here.

src/scripts/fix-imports.test.ts:140:28 - error TS1361: 'fixImportsInFile' cannot be used as a value because it was imported using 'import type'.

140       const result = await fixImportsInFile('src/someFile.ts', {
                               ~~~~~~~~~~~~~~~~

  src/scripts/fix-imports.test.ts:4:15
    4 import type { fixImportsInFile, getJsExtensionType, extractModulesFromImports } from './fix-imports.js';
                    ~~~~~~~~~~~~~~~~
    'fixImportsInFile' was imported here.

src/scripts/fix-imports.test.ts:181:28 - error TS1361: 'fixImportsInFile' cannot be used as a value because it was imported using 'import type'.

181       const result = await fixImportsInFile('src/someFile.ts', {
                               ~~~~~~~~~~~~~~~~

  src/scripts/fix-imports.test.ts:4:15
    4 import type { fixImportsInFile, getJsExtensionType, extractModulesFromImports } from './fix-imports.js';
                    ~~~~~~~~~~~~~~~~
    'fixImportsInFile' was imported here.

src/scripts/fix-imports.test.ts:216:28 - error TS1361: 'fixImportsInFile' cannot be used as a value because it was imported using 'import type'.

216       const result = await fixImportsInFile('src/someFile.ts', {
                               ~~~~~~~~~~~~~~~~

  src/scripts/fix-imports.test.ts:4:15
    4 import type { fixImportsInFile, getJsExtensionType, extractModulesFromImports } from './fix-imports.js';
                    ~~~~~~~~~~~~~~~~
    'fixImportsInFile' was imported here.

src/scripts/fix-imports.test.ts:249:28 - error TS1361: 'fixImportsInFile' cannot be used as a value because it was imported using 'import type'.

249       const result = await fixImportsInFile('src/someFile.ts', {
                               ~~~~~~~~~~~~~~~~

  src/scripts/fix-imports.test.ts:4:15
    4 import type { fixImportsInFile, getJsExtensionType, extractModulesFromImports } from './fix-imports.js';
                    ~~~~~~~~~~~~~~~~
    'fixImportsInFile' was imported here.

src/services/AgentManager.ts:234:39 - error TS6133: 'prompt' is declared but its value is never read.

234   private async processCompilerPrompt(prompt: string, context: any): Promise<string> {
                                          ~~~~~~

src/services/AgentManager.ts:234:55 - error TS6133: 'context' is declared but its value is never read.

234   private async processCompilerPrompt(prompt: string, context: any): Promise<string> {
                                                          ~~~~~~~

src/services/AgentManager.ts:280:53 - error TS6133: 'context' is declared but its value is never read.

280   private async processMemoryPrompt(prompt: string, context: any): Promise<string> {
                                                        ~~~~~~~

src/services/AgentManager.ts:285:50 - error TS6133: 'context' is declared but its value is never read.

285   private async processDocPrompt(prompt: string, context: any): Promise<string> {
                                                     ~~~~~~~

src/services/browser/BrowserSession.ts:4:1 - error TS6133: 'existsSync' is declared but its value is never read.

4 import { existsSync } from "fs"
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/services/browser/BrowserSession.ts:5:49 - error TS6196: 'TimeoutError' is declared but never used.

5 import type { Browser, Page, ScreenshotOptions, TimeoutError, launch } from "puppeteer-core"
                                                  ~~~~~~~~~~~~

src/services/browser/BrowserSession.ts:131:47 - error TS2379: Argument of type '{ args: string[]; executablePath: string; defaultViewport: { width: number; height: number; } | undefined; headless: boolean | undefined; }' is not assignable to parameter of type 'LaunchOptions' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'headless' are incompatible.
    Type 'boolean | undefined' is not assignable to type 'boolean | "shell"'.
      Type 'undefined' is not assignable to type 'boolean | "shell"'.

131   this.browser = await stats.puppeteer.launch({
                                                  ~
132    args: [
    ~~~~~~~~~~
...
137    headless: this.browserSettings.headless,
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
138   })
    ~~~

src/services/browser/BrowserSession.ts:167:4 - error TS2412: Type 'undefined' is not assignable to type 'Browser' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.

167    this.browser = undefined
       ~~~~~~~~~~~~

src/services/browser/BrowserSession.ts:168:4 - error TS2412: Type 'undefined' is not assignable to type 'Page' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.

168    this.page = undefined
       ~~~~~~~~~

src/services/browser/BrowserSession.ts:169:4 - error TS2412: Type 'undefined' is not assignable to type 'string' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.

169    this.currentMousePosition = undefined
       ~~~~~~~~~~~~~~~~~~~~~~~~~

src/services/browser/BrowserSession.ts:248:3 - error TS2375: Type '{ screenshot: string; logs: string; currentUrl: string; currentMousePosition: string | undefined; }' is not assignable to type 'BrowserActionResult' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'currentMousePosition' are incompatible.
    Type 'string | undefined' is not assignable to type 'string'.
      Type 'undefined' is not assignable to type 'string'.

248   return {
      ~~~~~~

src/services/browser/BrowserSession.ts:312:27 - error TS2345: Argument of type 'number | undefined' is not assignable to parameter of type 'number'.
  Type 'undefined' is not assignable to type 'number'.

312    await page.mouse.click(x, y)
                              ~

src/services/browser/UrlContentFetcher.ts:60:3 - error TS2412: Type 'undefined' is not assignable to type 'Browser' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.

60   this.browser = undefined
     ~~~~~~~~~~~~

src/services/browser/UrlContentFetcher.ts:61:3 - error TS2412: Type 'undefined' is not assignable to type 'Page' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.

61   this.page = undefined
     ~~~~~~~~~

src/services/glob/list-files.ts:40:8 - error TS2375: Type '{ cwd: string; dot: true; absolute: true; markDirectories: true; gitignore: boolean; ignore: string[] | undefined; onlyFiles: false; suppressErrors: true; }' is not assignable to type 'Options' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Type '{ cwd: string; dot: true; absolute: true; markDirectories: true; gitignore: boolean; ignore: string[] | undefined; onlyFiles: false; suppressErrors: true; }' is not assignable to type 'FastGlobOptionsWithoutCwd' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
    Types of property 'ignore' are incompatible.
      Type 'string[] | undefined' is not assignable to type 'string[]'.
        Type 'undefined' is not assignable to type 'string[]'.

40  const options: Options = {
          ~~~~~~~

src/services/glob/list-files.ts:53:82 - error TS1361: 'globby' cannot be used as a value because it was imported using 'import type'.

53  const filePaths = recursive ? await globbyLevelByLevel(limit, options) : (await globby("*", options)).slice(0, limit)
                                                                                    ~~~~~~

  src/services/glob/list-files.ts:1:15
    1 import type { globby, Options } from "globby"
                    ~~~~~~
    'globby' was imported here.

src/services/glob/list-files.ts:77:31 - error TS1361: 'globby' cannot be used as a value because it was imported using 'import type'.

77    const filesAtLevel = await globby(pattern, options)
                                 ~~~~~~

  src/services/glob/list-files.ts:1:15
    1 import type { globby, Options } from "globby"
                    ~~~~~~
    'globby' was imported here.

src/services/lmstudio/LMStudioService.ts:1:1 - error TS6133: 'vscode' is declared but its value is never read.

1 import { vscode } from '../../../webview-ui/src/utils/vscode.js'
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/services/lmstudio/LMStudioService.ts:1:24 - error TS6307: File 'E:/cline-main/webview-ui/src/utils/vscode.ts' is not listed within the file list of project 'E:/cline-main/tsconfig.json'. Projects must list all files or use an 'include' pattern.
  File is ECMAScript module because 'E:/cline-main/webview-ui/package.json' has field "type" with value "module"

1 import { vscode } from '../../../webview-ui/src/utils/vscode.js'
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/services/mcp/__tests__/mcpDispatcher.test.ts:2:10 - error TS2724: '"../mcpDispatcher.js"' has no exported member named 'mcpDispatcher'. Did you mean 'McpDispatcher'?

2 import { mcpDispatcher } from '../mcpDispatcher.js';
           ~~~~~~~~~~~~~

  src/services/mcp/McpDispatcher.ts:64:14
    64 export class McpDispatcher {
                    ~~~~~~~~~~~~~
    'McpDispatcher' is declared here.

src/services/mcp/__tests__/mcpDispatcher.test.ts:2:31 - error TS1149: File name 'E:/cline-main/src/services/mcp/mcpDispatcher.ts' differs from already included file name 'E:/cline-main/src/services/mcp/McpDispatcher.ts' only in casing.
  The file is in the program because:
    Imported via "../../services/mcp/McpDispatcher.js" from file 'E:/cline-main/src/core/webview/JarvisProvider.ts'
    Imported via './McpDispatcher.js' from file 'E:/cline-main/src/services/mcp/test-script.ts'
    Imported via "../../services/mcp/McpDispatcher.js" from file 'E:/cline-main/src/__tests__/mcp/McpDispatcher.test.ts'
    Matched by include pattern 'src/**/*' in 'E:/cline-main/tsconfig.json'
    Imported via './McpDispatcher.js' from file 'E:/cline-main/src/services/mcp/toolsListServer.ts'
    Imported via '../mcpDispatcher.js' from file 'E:/cline-main/src/services/mcp/__tests__/mcpDispatcher.test.ts'
  File is ECMAScript module because 'E:/cline-main/package.json' has field "type" with value "module"

2 import { mcpDispatcher } from '../mcpDispatcher.js';
                                ~~~~~~~~~~~~~~~~~~~~~

  src/core/webview/JarvisProvider.ts:12:31
    12 import { McpDispatcher } from "../../services/mcp/McpDispatcher.js"
                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    File is included via import here.
  src/services/mcp/test-script.ts:13:31
    13 import { McpDispatcher } from './McpDispatcher.js';
                                     ~~~~~~~~~~~~~~~~~~~~
    File is included via import here.
  src/__tests__/mcp/McpDispatcher.test.ts:1:31
    1 import { McpDispatcher } from "../../services/mcp/McpDispatcher.js";
                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    File is included via import here.
  tsconfig.json:58:14
    58  "include": ["src/**/*", "src/**/*.json"],
                    ~~~~~~~~~~
    File is matched by include pattern specified here.
  src/services/mcp/toolsListServer.ts:14:31
    14 import { McpDispatcher } from './McpDispatcher.js';
                                     ~~~~~~~~~~~~~~~~~~~~
    File is included via import here.

src/services/mcp/core/navigation/exploratory.test.ts:2:32 - error TS2307: Cannot find module '../../../../memory/context.js' or its corresponding type declarations.

2 import { getContextById } from '../../../../memory/context.js';
                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/services/mcp/core/navigation/exploratory.test.ts:3:33 - error TS2307: Cannot find module '../../../../memory/context_links.js' or its corresponding type declarations.

3 import { getContextLinks } from '../../../../memory/context_links.js';
                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/services/mcp/core/navigation/exploratory.test.ts:51:62 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ 'ctx-1': { id: string; text: string; tags: string[]; }; 'ctx-2': { id: string; text: string; tags: string[]; }; 'ctx-3': { id: string; text: string; tags: string[]; }; 'ctx-4': { id: string; text: string; tags: string[]; }; }'.

51     (getContextById as jest.Mock).mockImplementation((id) => mockContexts[id]);
                                                                ~~~~~~~~~~~~~~~~

src/services/mcp/core/navigation/exploratory.test.ts:94:12 - error TS2532: Object is possibly 'undefined'.

94     expect(result.path?.edges[0].relation).toBe('supports');
              ~~~~~~~~~~~~~~~~~~~~~

src/services/mcp/core/navigation/exploratory.test.ts:139:57 - error TS2353: Object literal may only specify known properties, and 'bidirectional' does not exist in type 'NavigationOptions'.

139     const result = await findExploratoryPath('ctx-1', { bidirectional: true });
                                                            ~~~~~~~~~~~~~

src/services/mcp/core/navigation/exploratory.ts:1:32 - error TS2307: Cannot find module '../../../memory/context.js' or its corresponding type declarations.

1 import { getContextById } from '../../../memory/context.js';
                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/services/mcp/core/navigation/exploratory.ts:2:33 - error TS2307: Cannot find module '../../../memory/context_links.js' or its corresponding type declarations.

2 import { getContextLinks } from '../../../memory/context_links.js';
                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/services/mcp/core/navigation/exploratory.ts:3:1 - error TS6133: 'ContextLink' is declared but its value is never read.

3 import { ContextLink } from '../../types.js';
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/services/mcp/core/navigation/exploratory.ts:3:29 - error TS2307: Cannot find module '../../types.js' or its corresponding type declarations.

3 import { ContextLink } from '../../types.js';
                              ~~~~~~~~~~~~~~~~

src/services/mcp/core/navigation/exploratory.ts:35:17 - error TS1361: 'filterLinksByOptions' cannot be used as a value because it was imported using 'import type'.

35   const links = filterLinksByOptions(allLinks, options);
                   ~~~~~~~~~~~~~~~~~~~~

  src/services/mcp/core/navigation/exploratory.ts:11:3
    11   filterLinksByOptions
         ~~~~~~~~~~~~~~~~~~~~
    'filterLinksByOptions' was imported here.

src/services/mcp/core/navigation/exploratory.ts:47:20 - error TS1361: 'buildNodeResult' cannot be used as a value because it was imported using 'import type'.

47   resultNodes.push(buildNodeResult(startContext, includeContent, includeMetadata));
                      ~~~~~~~~~~~~~~~

  src/services/mcp/core/navigation/exploratory.ts:9:3
    9   buildNodeResult,
        ~~~~~~~~~~~~~~~
    'buildNodeResult' was imported here.

src/services/mcp/core/navigation/exploratory.ts:61:16 - error TS2339: Property 'bidirectional' does not exist on type 'NavigationOptions'.

61       (options.bidirectional && link.targetId === current.id)
                  ~~~~~~~~~~~~~

src/services/mcp/core/navigation/exploratory.ts:67:14 - error TS1361: 'calculateSemanticScore' cannot be used as a value because it was imported using 'import type'.

67       score: calculateSemanticScore(link, options)
                ~~~~~~~~~~~~~~~~~~~~~~

  src/services/mcp/core/navigation/exploratory.ts:8:3
    8   calculateSemanticScore,
        ~~~~~~~~~~~~~~~~~~~~~~
    'calculateSemanticScore' was imported here.

src/services/mcp/core/navigation/exploratory.ts:82:26 - error TS1361: 'buildNodeResult' cannot be used as a value because it was imported using 'import type'.

82         resultNodes.push(buildNodeResult(nextContext, includeContent, includeMetadata));
                            ~~~~~~~~~~~~~~~

  src/services/mcp/core/navigation/exploratory.ts:9:3
    9   buildNodeResult,
        ~~~~~~~~~~~~~~~
    'buildNodeResult' was imported here.

src/services/mcp/core/navigation/exploratory.ts:83:26 - error TS1361: 'buildEdgeResult' cannot be used as a value because it was imported using 'import type'.

83         resultEdges.push(buildEdgeResult(link, includeMetadata));
                            ~~~~~~~~~~~~~~~

  src/services/mcp/core/navigation/exploratory.ts:10:3
    10   buildEdgeResult,
         ~~~~~~~~~~~~~~~
    'buildEdgeResult' was imported here.

src/services/mcp/core/navigation/exploratory.ts:88:34 - error TS1361: 'calculateSemanticScore' cannot be used as a value because it was imported using 'import type'.

88           score: current.score * calculateSemanticScore(link, options)
                                    ~~~~~~~~~~~~~~~~~~~~~~

  src/services/mcp/core/navigation/exploratory.ts:8:3
    8   calculateSemanticScore,
        ~~~~~~~~~~~~~~~~~~~~~~
    'calculateSemanticScore' was imported here.

src/services/mcp/core/navigation/hybrid.test.ts:2:32 - error TS2307: Cannot find module '../../../../memory/context.js' or its corresponding type declarations.

2 import { getContextById } from '../../../../memory/context.js';
                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/services/mcp/core/navigation/hybrid.test.ts:3:33 - error TS2307: Cannot find module '../../../../memory/context_links.js' or its corresponding type declarations.

3 import { getContextLinks } from '../../../../memory/context_links.js';
                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/services/mcp/core/navigation/hybrid.test.ts:51:62 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ 'ctx-1': { id: string; text: string; tags: string[]; }; 'ctx-2': { id: string; text: string; tags: string[]; }; 'ctx-3': { id: string; text: string; tags: string[]; }; 'ctx-4': { id: string; text: string; tags: string[]; }; }'.

51     (getContextById as jest.Mock).mockImplementation((id) => mockContexts[id]);
                                                                ~~~~~~~~~~~~~~~~

src/services/mcp/core/navigation/hybrid.test.ts:60:7 - error TS2353: Object literal may only specify known properties, and 'preferredRelations' does not exist in type 'HybridNavigationOptions'.

60       preferredRelations: ['supports', 'extends']
         ~~~~~~~~~~~~~~~~~~

src/services/mcp/core/navigation/hybrid.test.ts:72:7 - error TS2353: Object literal may only specify known properties, and 'preferredRelations' does not exist in type 'HybridNavigationOptions'.

72       preferredRelations: ['supports']
         ~~~~~~~~~~~~~~~~~~

src/services/mcp/core/navigation/hybrid.test.ts:84:7 - error TS2353: Object literal may only specify known properties, and 'preferredRelations' does not exist in type 'HybridNavigationOptions'.

84       preferredRelations: ['supports']
         ~~~~~~~~~~~~~~~~~~

src/services/mcp/core/navigation/hybrid.test.ts:100:7 - error TS2353: Object literal may only specify known properties, and 'preferredRelations' does not exist in type 'HybridNavigationOptions'.

100       preferredRelations: ['supports']
          ~~~~~~~~~~~~~~~~~~

src/services/mcp/core/navigation/hybrid.test.ts:106:12 - error TS2339: Property 'metadata' does not exist on type 'EdgeResult'.

106       edge.metadata?.source === 'user'
               ~~~~~~~~

src/services/mcp/core/navigation/hybrid.ts:3:40 - error TS2307: Cannot find module '../types.js' or its corresponding type declarations.

3 import type { NavigationOptions } from '../types.js';
                                         ~~~~~~~~~~~~~

src/services/mcp/core/navigation/hybrid.ts:4:29 - error TS2307: Cannot find module '../../../../memory/context_links.js' or its corresponding type declarations.

4 import { ContextLink } from '../../../../memory/context_links.js';
                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/services/mcp/core/navigation/hybrid.ts:24:7 - error TS2559: Type 'HybridNavigationOptions' has no properties in common with type 'NavigationOptions'.

24       options,
         ~~~~~~~

src/services/mcp/core/navigation/hybrid.ts:87:15 - error TS2339: Property 'preferredRelations' does not exist on type 'HybridNavigationOptions'.

87   if (options.preferredRelations?.includes(edge.relation)) {
                 ~~~~~~~~~~~~~~~~~~

src/services/mcp/core/navigation/semantic.test.ts:2:32 - error TS2307: Cannot find module '../../../../memory/context.js' or its corresponding type declarations.

2 import { getContextById } from '../../../../memory/context.js';
                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/services/mcp/core/navigation/semantic.test.ts:3:33 - error TS2307: Cannot find module '../../../../memory/context_links.js' or its corresponding type declarations.

3 import { getContextLinks } from '../../../../memory/context_links.js';
                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/services/mcp/core/navigation/semantic.test.ts:42:62 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ 'ctx-1': { id: string; text: string; tags: string[]; }; 'ctx-2': { id: string; text: string; tags: string[]; }; 'ctx-3': { id: string; text: string; tags: string[]; }; }'.

42     (getContextById as jest.Mock).mockImplementation((id) => mockContexts[id]);
                                                                ~~~~~~~~~~~~~~~~

src/services/mcp/core/navigation/semantic.test.ts:52:12 - error TS2532: Object is possibly 'undefined'.

52     expect(result.path?.nodes[0].id).toBe('ctx-1');
              ~~~~~~~~~~~~~~~~~~~~~

src/services/mcp/core/navigation/semantic.test.ts:53:12 - error TS2532: Object is possibly 'undefined'.

53     expect(result.path?.nodes[2].id).toBe('ctx-3');
              ~~~~~~~~~~~~~~~~~~~~~

src/services/mcp/core/navigation/semantic.test.ts:84:12 - error TS2532: Object is possibly 'undefined'.

84     expect(result.path?.edges[0].relation).toBe('supports');
              ~~~~~~~~~~~~~~~~~~~~~

src/services/mcp/core/navigation/semantic.test.ts:112:63 - error TS2353: Object literal may only specify known properties, and 'bidirectional' does not exist in type 'NavigationOptions'.

112     const result = await findSemanticPath('ctx-1', 'ctx-3', { bidirectional: true });
                                                                  ~~~~~~~~~~~~~

src/services/mcp/core/navigation/semantic.ts:1:32 - error TS2307: Cannot find module '../../../memory/context.js' or its corresponding type declarations.

1 import { getContextById } from '../../../memory/context.js';
                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/services/mcp/core/navigation/semantic.ts:2:33 - error TS2307: Cannot find module '../../../memory/context_links.js' or its corresponding type declarations.

2 import { getContextLinks } from '../../../memory/context_links.js';
                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/services/mcp/core/navigation/semantic.ts:3:1 - error TS6133: 'ContextLink' is declared but its value is never read.

3 import { ContextLink } from '../../types.js';
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/services/mcp/core/navigation/semantic.ts:3:29 - error TS2307: Cannot find module '../../types.js' or its corresponding type declarations.

3 import { ContextLink } from '../../types.js';
                              ~~~~~~~~~~~~~~~~

src/services/mcp/core/navigation/semantic.ts:46:17 - error TS1361: 'filterLinksByOptions' cannot be used as a value because it was imported using 'import type'.

46   const links = filterLinksByOptions(allLinks, options);
                   ~~~~~~~~~~~~~~~~~~~~

  src/services/mcp/core/navigation/semantic.ts:11:3
    11   filterLinksByOptions
         ~~~~~~~~~~~~~~~~~~~~
    'filterLinksByOptions' was imported here.

src/services/mcp/core/navigation/semantic.ts:60:19 - error TS1361: 'calculateSemanticScore' cannot be used as a value because it was imported using 'import type'.

60     const score = calculateSemanticScore(link, options);
                     ~~~~~~~~~~~~~~~~~~~~~~

  src/services/mcp/core/navigation/semantic.ts:8:3
    8   calculateSemanticScore,
        ~~~~~~~~~~~~~~~~~~~~~~
    'calculateSemanticScore' was imported here.

src/services/mcp/core/navigation/semantic.ts:63:19 - error TS2339: Property 'bidirectional' does not exist on type 'NavigationOptions'.

63       if (options.bidirectional) {
                     ~~~~~~~~~~~~~

src/services/mcp/core/navigation/semantic.ts:149:22 - error TS1361: 'buildNodeResult' cannot be used as a value because it was imported using 'import type'.

149     resultNodes.push(buildNodeResult(context, includeContent, includeMetadata));
                         ~~~~~~~~~~~~~~~

  src/services/mcp/core/navigation/semantic.ts:9:3
    9   buildNodeResult,
        ~~~~~~~~~~~~~~~
    'buildNodeResult' was imported here.

src/services/mcp/core/navigation/semantic.ts:155:18 - error TS2339: Property 'bidirectional' does not exist on type 'NavigationOptions'.

155         (options.bidirectional && l.targetId === nodeId && l.sourceId === nextId)
                     ~~~~~~~~~~~~~

src/services/mcp/core/navigation/semantic.ts:159:26 - error TS1361: 'buildEdgeResult' cannot be used as a value because it was imported using 'import type'.

159         resultEdges.push(buildEdgeResult(link, includeMetadata));
                             ~~~~~~~~~~~~~~~

  src/services/mcp/core/navigation/semantic.ts:10:3
    10   buildEdgeResult,
         ~~~~~~~~~~~~~~~
    'buildEdgeResult' was imported here.

src/services/mcp/handlers/askDocsHandler.ts:15:26 - error TS1361: 'vscode' cannot be used as a value because it was imported using 'import type'.

15 const vscodeMod = typeof vscode !== 'undefined' ? vscode : mockVscode;
                            ~~~~~~

  src/services/mcp/handlers/askDocsHandler.ts:2:18
    2 import type * as vscode from "vscode";
                       ~~~~~~
    'vscode' was imported here.

src/services/mcp/handlers/askDocsHandler.ts:15:51 - error TS1361: 'vscode' cannot be used as a value because it was imported using 'import type'.

15 const vscodeMod = typeof vscode !== 'undefined' ? vscode : mockVscode;
                                                     ~~~~~~

  src/services/mcp/handlers/askDocsHandler.ts:2:18
    2 import type * as vscode from "vscode";
                       ~~~~~~
    'vscode' was imported here.

src/services/mcp/handlers/askDocsHandler.ts:173:3 - error TS6133: 'maxFiles' is declared but its value is never read.

173   maxFiles: number
      ~~~~~~~~

src/services/mcp/handlers/askDocsHandler.ts:230:26 - error TS4111: Property 'question' comes from an index signature, so it must be accessed with ['question'].

230   const question = args?.question;
                             ~~~~~~~~

src/services/mcp/handlers/askDocsHandler.ts:231:24 - error TS4111: Property 'filter' comes from an index signature, so it must be accessed with ['filter'].

231   const filter = args?.filter;
                           ~~~~~~

src/services/mcp/handlers/askDocsHandler.ts:232:32 - error TS4111: Property 'maxSourceFiles' comes from an index signature, so it must be accessed with ['maxSourceFiles'].

232   const maxSourceFiles = args?.maxSourceFiles || 5;
                                   ~~~~~~~~~~~~~~

src/services/mcp/handlers/askDocsHandler.ts:233:29 - error TS4111: Property 'includeCode' comes from an index signature, so it must be accessed with ['includeCode'].

233   const includeCode = args?.includeCode !== false;  // true di default
                                ~~~~~~~~~~~

src/services/mcp/handlers/askDocsHandler.ts:247:23 - error TS2532: Object is possibly 'undefined'.

247       workspacePath = vscodeMod.workspace.workspaceFolders[0].uri.fsPath;
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/services/mcp/handlers/askDocsHandler.ts:345:3 - error TS6133: 'question' is declared but its value is never read.

345   question: string,
      ~~~~~~~~

src/services/mcp/handlers/askDocsHandler.ts:359:87 - error TS2532: Object is possibly 'undefined'.

359   answer += `La tua domanda riguarda probabilmente ${files.length > 0 ? path.basename(files[0].file) : "alcuni aspetti"} del progetto.\n`;
                                                                                          ~~~~~~~~

src/services/mcp/handlers/askDocsHandler.ts:365:38 - error TS18048: 'file' is possibly 'undefined'.

365     answer += `### ${i+1}. File: \`${file.file}\`\n\n`;
                                         ~~~~

src/services/mcp/handlers/askDocsHandler.ts:370:9 - error TS18048: 'file' is possibly 'undefined'.

370     if (file.file.endsWith('.md')) {
            ~~~~

src/services/mcp/handlers/askDocsHandler.ts:372:16 - error TS18048: 'file' is possibly 'undefined'.

372     } else if (file.file.endsWith('.ts') || file.file.endsWith('.tsx')) {
                   ~~~~

src/services/mcp/handlers/askDocsHandler.ts:372:45 - error TS18048: 'file' is possibly 'undefined'.

372     } else if (file.file.endsWith('.ts') || file.file.endsWith('.tsx')) {
                                                ~~~~

src/services/mcp/handlers/askDocsHandler.ts:374:16 - error TS18048: 'file' is possibly 'undefined'.

374     } else if (file.file.endsWith('.js') || file.file.endsWith('.jsx')) {
                   ~~~~

src/services/mcp/handlers/askDocsHandler.ts:374:45 - error TS18048: 'file' is possibly 'undefined'.

374     } else if (file.file.endsWith('.js') || file.file.endsWith('.jsx')) {
                                                ~~~~

src/services/mcp/handlers/askDocsHandler.ts:376:16 - error TS18048: 'file' is possibly 'undefined'.

376     } else if (file.file.endsWith('.py')) {
                   ~~~~

src/services/mcp/handlers/askDocsHandler.ts:378:16 - error TS18048: 'file' is possibly 'undefined'.

378     } else if (file.file.endsWith('.java')) {
                   ~~~~

src/services/mcp/handlers/askDocsHandler.ts:381:58 - error TS18048: 'file' is possibly 'undefined'.

381       answer += `codice o dati in formato ${path.extname(file.file).substring(1)}`;
                                                             ~~~~

src/services/mcp/handlers/askDocsHandler.ts:389:38 - error TS18048: 'file' is possibly 'undefined'.

389       answer += "```" + path.extname(file.file).substring(1) + "\n";
                                         ~~~~

src/services/mcp/handlers/askDocsHandler.ts:390:17 - error TS18048: 'file' is possibly 'undefined'.

390       answer += file.excerpt;
                    ~~~~

src/services/mcp/handlers/codeGenerateHandler.ts:9:10 - error TS1484: 'McpToolHandler' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.

9 import { McpToolHandler } from "../../../shared/types/mcp.types.js";
           ~~~~~~~~~~~~~~

src/services/mcp/handlers/configLinter.test.ts:37:50 - error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.

37     (fs.readFile as jest.Mock).mockResolvedValue(validJson);
                                                    ~~~~~~~~~

src/services/mcp/handlers/configLinter.test.ts:62:50 - error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.

62     (fs.readFile as jest.Mock).mockResolvedValue(jsonWithoutVersion);
                                                    ~~~~~~~~~~~~~~~~~~

src/services/mcp/handlers/configLinter.test.ts:88:50 - error TS2345: Argument of type 'string' is not assignable to parameter of type 'never'.

88     (fs.readFile as jest.Mock).mockResolvedValue(jsonWithEmptyValues);
                                                    ~~~~~~~~~~~~~~~~~~~

src/services/mcp/handlers/configLinter.test.ts:96:39 - error TS7006: Parameter 'w' implicitly has an 'any' type.

96     expect(result.data?.warnings.some(w => w.code === 'EMPTY_VALUE')).toBe(true);
                                         ~

src/services/mcp/handlers/configLinter.test.ts:97:39 - error TS7006: Parameter 'w' implicitly has an 'any' type.

97     expect(result.data?.warnings.some(w => w.code === 'NULL_VALUE')).toBe(true);
                                         ~

src/services/mcp/handlers/configLinter.test.ts:109:50 - error TS2345: Argument of type '"{name:\"test\",version:1.0.0}"' is not assignable to parameter of type 'never'.

109     (fs.readFile as jest.Mock).mockResolvedValue(invalidJson);
                                                     ~~~~~~~~~~~

src/services/mcp/handlers/configLinter.test.ts:136:50 - error TS2345: Argument of type '"\n      # Variabili di ambiente\n      NODE_ENV=development\n      PORT=3000\n      DEBUG=true\n    "' is not assignable to parameter of type 'never'.

136     (fs.readFile as jest.Mock).mockResolvedValue(validEnv);
                                                     ~~~~~~~~

src/services/mcp/handlers/configLinter.test.ts:163:50 - error TS2345: Argument of type '"\n      # Variabili di ambiente\n      NODE_ENV=development\n      PORT 3000\n      =valore\n      API_KEY=\n    "' is not assignable to parameter of type 'never'.

163     (fs.readFile as jest.Mock).mockResolvedValue(invalidEnv);
                                                     ~~~~~~~~~~

src/services/mcp/handlers/configLinter.test.ts:188:50 - error TS2345: Argument of type '"\n      API_KEY=abcdef12345\n      SECRET_TOKEN=very-secret\n      PASSWORD=unsafe-password\n    "' is not assignable to parameter of type 'never'.

188     (fs.readFile as jest.Mock).mockResolvedValue(envWithSensitiveKeys);
                                                     ~~~~~~~~~~~~~~~~~~~~

src/services/mcp/handlers/configLinter.test.ts:206:50 - error TS2345: Argument of type 'Error' is not assignable to parameter of type 'never'.

206     (fs.readFile as jest.Mock).mockRejectedValue(new Error('File non trovato'));
                                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/services/mcp/handlers/configLinter.test.ts:224:50 - error TS2345: Argument of type '"key: value"' is not assignable to parameter of type 'never'.

224     (fs.readFile as jest.Mock).mockResolvedValue('key: value');
                                                     ~~~~~~~~~~~~

src/services/mcp/handlers/configLinter.test.ts:244:50 - error TS2345: Argument of type '"KEY=VALUE"' is not assignable to parameter of type 'never'.

244     (fs.readFile as jest.Mock).mockResolvedValue(validEnv);
                                                     ~~~~~~~~

src/services/mcp/handlers/configLinter.test.ts:263:50 - error TS2345: Argument of type '"{\"version\":\"1.0.0\"}"' is not assignable to parameter of type 'never'.

263     (fs.readFile as jest.Mock).mockResolvedValue(validJson);
                                                     ~~~~~~~~~

src/services/mcp/handlers/configLinter.ts:1:1 - error TS6133: 'vscode' is declared but its value is never read.

1 import * as vscode from 'vscode';
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/services/mcp/handlers/configLinter.ts:2:33 - error TS2307: Cannot find module '../types.js' or its corresponding type declarations.

2 import { HandlerFunction } from '../types.js';
                                  ~~~~~~~~~~~~~

src/services/mcp/handlers/configLinter.ts:7:11 - error TS6196: 'ConfigLinterArgs' is declared but never used.

7 interface ConfigLinterArgs {
            ~~~~~~~~~~~~~~~~

src/services/mcp/handlers/configLinter.ts:93:43 - error TS18046: 'error' is of type 'unknown'.

93       message: `Errore di parsing JSON: ${error.message}`,
                                             ~~~~~

src/services/mcp/handlers/configLinter.ts:130:10 - error TS18048: 'key' is possibly 'undefined'.

130     if (!key.trim()) {
             ~~~

src/services/mcp/handlers/configLinter.ts:148:9 - error TS18048: 'key' is possibly 'undefined'.

148     if (key.toLowerCase().includes('key') ||
            ~~~

src/services/mcp/handlers/configLinter.ts:149:9 - error TS18048: 'key' is possibly 'undefined'.

149         key.toLowerCase().includes('secret') ||
            ~~~

src/services/mcp/handlers/configLinter.ts:150:9 - error TS18048: 'key' is possibly 'undefined'.

150         key.toLowerCase().includes('password')) {
            ~~~

src/services/mcp/handlers/configLinter.ts:152:69 - error TS18048: 'key' is possibly 'undefined'.

152         `Considera di utilizzare variabili d'ambiente sicure per "${key.trim()}"`
                                                                        ~~~

src/services/mcp/handlers/configLinter.ts:188:57 - error TS18046: 'error' is of type 'unknown'.

188         message: `Errore durante la lettura del file: ${error.message}`,
                                                            ~~~~~

src/services/mcp/handlers/configLinter.ts:204:49 - error TS2554: Expected 1 arguments, but got 2.

204     const result = await lintConfig(configPath, detectedType);
                                                    ~~~~~~~~~~~~

src/services/mcp/handlers/configLinter.ts:223:45 - error TS18046: 'error' is of type 'unknown'.

223       error: `Failed to lint config file: ${error.message}`
                                                ~~~~~

src/services/mcp/handlers/contextClearHandler.ts:2:39 - error TS2459: Module '"./contextInjectHandler.js"' declares 'persistMemoryToDisk' locally, but it is not exported.

2 import { getAllMemory, getFromMemory, persistMemoryToDisk } from "./contextInjectHandler.js";
                                        ~~~~~~~~~~~~~~~~~~~

  src/services/mcp/handlers/contextInjectHandler.ts:79:16
    79 async function persistMemoryToDisk(): Promise<void> {
                      ~~~~~~~~~~~~~~~~~~~
    'persistMemoryToDisk' is declared here.

src/services/mcp/handlers/contextClearHandler.ts:12:11 - error TS6133: 'initialLength' is declared but its value is never read.

12     const initialLength = items.length;
             ~~~~~~~~~~~~~

src/services/mcp/handlers/contextClearHandler.ts:28:29 - error TS18048: 'items' is possibly 'undefined'.

28       const indexToRemove = items.findIndex(item => item.id === id);
                               ~~~~~

src/services/mcp/handlers/contextClearHandler.ts:31:9 - error TS18048: 'items' is possibly 'undefined'.

31         items.splice(indexToRemove, 1);
           ~~~~~

src/services/mcp/handlers/contextClearHandler.ts:68:24 - error TS18048: 'items' is possibly 'undefined'.

68     counts[scopeKey] = items.length;
                          ~~~~~

src/services/mcp/handlers/contextClearHandler.ts:69:19 - error TS18048: 'items' is possibly 'undefined'.

69     totalCount += items.length;
                     ~~~~~

src/services/mcp/handlers/contextClearHandler.ts:72:9 - error TS18048: 'items' is possibly 'undefined'.

72     if (items.length > 0) {
           ~~~~~

src/services/mcp/handlers/contextClearHandler.ts:73:7 - error TS18048: 'items' is possibly 'undefined'.

73       items.length = 0;
         ~~~~~

src/services/mcp/handlers/contextClearHandler.ts:77:10 - error TS4111: Property 'total' comes from an index signature, so it must be accessed with ['total'].

77   counts.total = totalCount;
            ~~~~~

src/services/mcp/handlers/contextClearHandler.ts:86:23 - error TS4111: Property 'scope' comes from an index signature, so it must be accessed with ['scope'].

86   const scope = args?.scope;
                         ~~~~~

src/services/mcp/handlers/contextClearHandler.ts:87:20 - error TS4111: Property 'id' comes from an index signature, so it must be accessed with ['id'].

87   const id = args?.id;
                      ~~

src/services/mcp/handlers/contextClearHandler.ts:88:21 - error TS4111: Property 'all' comes from an index signature, so it must be accessed with ['all'].

88   const all = args?.all === true;
                       ~~~

src/services/mcp/handlers/contextClearHandler.ts:145:32 - error TS4111: Property 'total' comes from an index signature, so it must be accessed with ['total'].

145           deletedCount: counts.total,
                                   ~~~~~

src/services/mcp/handlers/contextClearHandler.ts:147:20 - error TS18048: 'counts.total' is possibly 'undefined'.

147           summary: counts.total > 0
                       ~~~~~~~~~~~~

src/services/mcp/handlers/contextClearHandler.ts:147:27 - error TS4111: Property 'total' comes from an index signature, so it must be accessed with ['total'].

147           summary: counts.total > 0
                              ~~~~~

src/services/mcp/handlers/contextClearHandler.ts:148:25 - error TS4111: Property 'total' comes from an index signature, so it must be accessed with ['total'].

148             ? `${counts.total} elementi rimossi da tutti gli scope (chat: ${counts.chat}, project: ${counts.project}, agent: ${counts.agent})`
                            ~~~~~

src/services/mcp/handlers/contextClearHandler.ts:148:84 - error TS4111: Property 'chat' comes from an index signature, so it must be accessed with ['chat'].

148             ? `${counts.total} elementi rimossi da tutti gli scope (chat: ${counts.chat}, project: ${counts.project}, agent: ${counts.agent})`
                                                                                       ~~~~

src/services/mcp/handlers/contextClearHandler.ts:148:109 - error TS4111: Property 'project' comes from an index signature, so it must be accessed with ['project'].

148             ? `${counts.total} elementi rimossi da tutti gli scope (chat: ${counts.chat}, project: ${counts.project}, agent: ${counts.agent})`
                                                                                                                ~~~~~~~

src/services/mcp/handlers/contextClearHandler.ts:148:135 - error TS4111: Property 'agent' comes from an index signature, so it must be accessed with ['agent'].

148             ? `${counts.total} elementi rimossi da tutti gli scope (chat: ${counts.chat}, project: ${counts.project}, agent: ${counts.agent})`
                                                                                                                                          ~~~~~

src/services/mcp/handlers/contextEditHandler.ts:1:29 - error TS2307: Cannot find module '../types/ContextItem.js' or its corresponding type declarations.

1 import { ContextItem } from '../types/ContextItem.js';
                              ~~~~~~~~~~~~~~~~~~~~~~~~~

src/services/mcp/handlers/contextEditHandler.ts:2:55 - error TS2307: Cannot find module '../utils/memoryUtils.js' or its corresponding type declarations.

2 import { getMemoryContexts, saveMemoryContexts } from '../utils/memoryUtils.js';
                                                        ~~~~~~~~~~~~~~~~~~~~~~~~~

src/services/mcp/handlers/contextEditHandler.ts:3:31 - error TS2307: Cannot find module '../utils/tagUtils.js' or its corresponding type declarations.

3 import { normalizeTags } from '../utils/tagUtils.js';
                                ~~~~~~~~~~~~~~~~~~~~~~

src/services/mcp/handlers/contextEditHandler.ts:30:43 - error TS7006: Parameter 'ctx' implicitly has an 'any' type.

30   const contextIndex = contexts.findIndex(ctx => ctx.id === id);
                                             ~~~

src/services/mcp/handlers/contextExportHandler.ts:1:29 - error TS2307: Cannot find module '../types/context.js' or its corresponding type declarations.

1 import { ContextItem } from '../types/context.js';
                              ~~~~~~~~~~~~~~~~~~~~~

src/services/mcp/handlers/contextExportHandler.ts:2:35 - error TS2307: Cannot find module '../utils/memory.js' or its corresponding type declarations.

2 import { getMemoryContexts } from '../utils/memory.js';
                                    ~~~~~~~~~~~~~~~~~~~~

src/services/mcp/handlers/contextExportHandler.ts:3:37 - error TS2307: Cannot find module '../types/tool.js' or its corresponding type declarations.

3 import type { ToolCallResult } from '../types/tool.js';
                                      ~~~~~~~~~~~~~~~~~~

src/services/mcp/handlers/contextExportHandler.ts:82:49 - error TS7006: Parameter 't' implicitly has an 'any' type.

82         parts.push(`- **Tags**: ${item.tags.map(t => `\`${t}\``).join(', ')}`);
                                                   ~

src/services/mcp/handlers/contextExportHandler.ts:112:55 - error TS2379: Argument of type '{ format: "json" | "csv" | "markdown"; scope: "chat" | "project" | "agent" | undefined; tags: string[] | undefined; sinceTimestamp: number | undefined; includeMetadata: boolean; }' is not assignable to parameter of type 'ExportOptions' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'scope' are incompatible.
    Type '"chat" | "project" | "agent" | undefined' is not assignable to type '"chat" | "project" | "agent"'.
      Type 'undefined' is not assignable to type '"chat" | "project" | "agent"'.

112     const filteredContexts = filterContexts(contexts, {
                                                          ~
113       format,
    ~~~~~~~~~~~~~
...
117       includeMetadata
    ~~~~~~~~~~~~~~~~~~~~~
118     });
    ~~~~~

src/services/mcp/handlers/contextGraphExportHandler.ts:1:48 - error TS2307: Cannot find module '../../memory/context.js' or its corresponding type declarations.

1 import { ContextItem, getMemoryContexts } from "../../memory/context.js";
                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~

src/services/mcp/handlers/contextGraphExportHandler.ts:284:40 - error TS7006: Parameter 'ctx' implicitly has an 'any' type.

284     const rootContext = contexts.find((ctx) => ctx.id === args.rootId);
                                           ~~~

src/services/mcp/handlers/contextGraphExportHandler.ts:311:35 - error TS7006: Parameter 'ctx' implicitly has an 'any' type.

311     const nodes = contexts.filter(ctx => nodeIds.has(ctx.id));
                                      ~~~

src/services/mcp/handlers/contextGraphExportHandler.ts:317:9 - error TS7006: Parameter 'ctx' implicitly has an 'any' type.

317         ctx => !connectedNodeIds.has(ctx.id)
            ~~~

src/services/mcp/handlers/contextGraphExportHandler.ts:351:58 - error TS18046: 'error' is of type 'unknown'.

351       error: `Errore durante l'esportazione del grafo: ${error.message}`,
                                                             ~~~~~

src/services/mcp/handlers/contextGraphHandler.ts:1:48 - error TS2307: Cannot find module '../../memory/context.js' or its corresponding type declarations.

1 import { ContextItem, getMemoryContexts } from "../../memory/context.js";
                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~

src/services/mcp/handlers/contextGraphHandler.ts:121:40 - error TS7006: Parameter 'ctx' implicitly has an 'any' type.

121     const rootContext = contexts.find((ctx) => ctx.id === args.rootId);
                                           ~~~

src/services/mcp/handlers/contextGraphHandler.ts:148:35 - error TS7006: Parameter 'ctx' implicitly has an 'any' type.

148     const nodes = contexts.filter(ctx => nodeIds.has(ctx.id));
                                      ~~~

src/services/mcp/handlers/contextGraphHandler.ts:154:9 - error TS7006: Parameter 'ctx' implicitly has an 'any' type.

154         ctx => !connectedNodeIds.has(ctx.id)
            ~~~

src/services/mcp/handlers/contextGraphHandler.ts:169:58 - error TS18046: 'error' is of type 'unknown'.

169       error: `Errore durante la generazione del grafo: ${error.message}`,
                                                             ~~~~~

src/services/mcp/handlers/contextImportHandler.ts:1:29 - error TS2307: Cannot find module '../types/context.js' or its corresponding type declarations.

1 import { ContextItem } from '../types/context.js';
                              ~~~~~~~~~~~~~~~~~~~~~

src/services/mcp/handlers/contextImportHandler.ts:2:55 - error TS2307: Cannot find module '../utils/memory.js' or its corresponding type declarations.

2 import { getMemoryContexts, saveMemoryContexts } from '../utils/memory.js';
                                                        ~~~~~~~~~~~~~~~~~~~~

src/services/mcp/handlers/contextImportHandler.ts:3:37 - error TS2307: Cannot find module '../types/tool.js' or its corresponding type declarations.

3 import type { ToolCallResult } from '../types/tool.js';
                                      ~~~~~~~~~~~~~~~~~~

src/services/mcp/handlers/contextImportHandler.ts:30:7 - error TS18048: 'firstLine' is possibly 'undefined'.

30   if (firstLine.includes(',') && firstLine.toLowerCase().includes('text')) {
         ~~~~~~~~~

src/services/mcp/handlers/contextImportHandler.ts:30:34 - error TS18048: 'firstLine' is possibly 'undefined'.

30   if (firstLine.includes(',') && firstLine.toLowerCase().includes('text')) {
                                    ~~~~~~~~~

src/services/mcp/handlers/contextImportHandler.ts:59:19 - error TS2532: Object is possibly 'undefined'.

59   const headers = lines[0].split(',').map(h => h.trim().toLowerCase());
                     ~~~~~~~~

src/services/mcp/handlers/contextImportHandler.ts:99:22 - error TS2532: Object is possibly 'undefined'.

99         item.scope = line.split('**Scope**:')[1].trim();
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/services/mcp/handlers/contextImportHandler.ts:101:27 - error TS2532: Object is possibly 'undefined'.

101         const timestamp = line.split('**Timestamp**:')[1].trim();
                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/services/mcp/handlers/contextImportHandler.ts:104:22 - error TS2532: Object is possibly 'undefined'.

104         const tags = line.split('**Tags**:')[1].trim();
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~

src/services/mcp/handlers/contextImportHandler.ts:155:9 - error TS7006: Parameter 'ctx' implicitly has an 'any' type.

155         ctx => ctx.id === normalized.id || ctx.text === normalized.text
            ~~~

src/services/mcp/handlers/contextImportHandler.ts:214:50 - error TS2379: Argument of type '{ format: "json" | "csv" | "markdown"; content: string; scope: "chat" | "project" | "agent" | undefined; mergeTags: boolean; }' is not assignable to parameter of type 'ImportOptions' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'scope' are incompatible.
    Type '"chat" | "project" | "agent" | undefined' is not assignable to type '"chat" | "project" | "agent"'.
      Type 'undefined' is not assignable to type '"chat" | "project" | "agent"'.

214     const result = await insertIntoMemory(items, {
                                                     ~
215       format: detectedFormat,
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
...
218       mergeTags
    ~~~~~~~~~~~~~~~
219     });
    ~~~~~

src/services/mcp/handlers/contextInjectHandler.ts:15:26 - error TS1361: 'vscode' cannot be used as a value because it was imported using 'import type'.

15 const vscodeMod = typeof vscode !== 'undefined' ? vscode : mockVscode;
                            ~~~~~~

  src/services/mcp/handlers/contextInjectHandler.ts:4:18
    4 import type * as vscode from "vscode";
                       ~~~~~~
    'vscode' was imported here.

src/services/mcp/handlers/contextInjectHandler.ts:15:51 - error TS1361: 'vscode' cannot be used as a value because it was imported using 'import type'.

15 const vscodeMod = typeof vscode !== 'undefined' ? vscode : mockVscode;
                                                     ~~~~~~

  src/services/mcp/handlers/contextInjectHandler.ts:4:18
    4 import type * as vscode from "vscode";
                       ~~~~~~
    'vscode' was imported here.

src/services/mcp/handlers/contextInjectHandler.ts:84:23 - error TS2532: Object is possibly 'undefined'.

84       workspacePath = vscodeMod.workspace.workspaceFolders[0].uri.fsPath;
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/services/mcp/handlers/contextInjectHandler.ts:115:23 - error TS2532: Object is possibly 'undefined'.

115       workspacePath = vscodeMod.workspace.workspaceFolders[0].uri.fsPath;
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/services/mcp/handlers/contextInjectHandler.ts:164:23 - error TS4111: Property 'scope' comes from an index signature, so it must be accessed with ['scope'].

164   const scope = args?.scope || 'chat';
                          ~~~~~

src/services/mcp/handlers/contextInjectHandler.ts:165:22 - error TS4111: Property 'text' comes from an index signature, so it must be accessed with ['text'].

165   const text = args?.text;
                         ~~~~

src/services/mcp/handlers/contextInjectHandler.ts:198:19 - error TS2532: Object is possibly 'undefined'.

198       memorySize: memoryStore[scope].length,
                      ~~~~~~~~~~~~~~~~~~

src/services/mcp/handlers/contextLinkHandler.ts:1:1 - error TS6133: 'ContextItem' is declared but its value is never read.

1 import { ContextItem } from '../types/ContextItem.js';
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/services/mcp/handlers/contextLinkHandler.ts:1:29 - error TS2307: Cannot find module '../types/ContextItem.js' or its corresponding type declarations.

1 import { ContextItem } from '../types/ContextItem.js';
                              ~~~~~~~~~~~~~~~~~~~~~~~~~

src/services/mcp/handlers/contextLinkHandler.ts:2:35 - error TS2307: Cannot find module '../utils/memoryUtils.js' or its corresponding type declarations.

2 import { getMemoryContexts } from '../utils/memoryUtils.js';
                                    ~~~~~~~~~~~~~~~~~~~~~~~~~

src/services/mcp/handlers/contextLinkHandler.ts:62:38 - error TS7006: Parameter 'ctx' implicitly has an 'any' type.

62   const sourceExists = contexts.some(ctx => ctx.id === sourceId);
                                        ~~~

src/services/mcp/handlers/contextLinkHandler.ts:63:38 - error TS7006: Parameter 'ctx' implicitly has an 'any' type.

63   const targetExists = contexts.some(ctx => ctx.id === targetId);
                                        ~~~

src/services/mcp/handlers/contextLinksOfHandler.ts:1:10 - error TS6133: 'ContextItem' is declared but its value is never read.

1 import { ContextItem, getMemoryContexts } from "../../memory/context.js";
           ~~~~~~~~~~~

src/services/mcp/handlers/contextLinksOfHandler.ts:1:48 - error TS2307: Cannot find module '../../memory/context.js' or its corresponding type declarations.

1 import { ContextItem, getMemoryContexts } from "../../memory/context.js";
                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~

src/services/mcp/handlers/contextLinksOfHandler.ts:76:42 - error TS7006: Parameter 'ctx' implicitly has an 'any' type.

76     const contextExists = contexts.some((ctx) => ctx.id === args.id);
                                            ~~~

src/services/mcp/handlers/contextLinksOfHandler.ts:101:54 - error TS18046: 'error' is of type 'unknown'.

101       error: `Errore durante il recupero dei link: ${error.message}`,
                                                         ~~~~~

src/services/mcp/handlers/contextListHandler.ts:20:23 - error TS4111: Property 'scope' comes from an index signature, so it must be accessed with ['scope'].

20   const scope = args?.scope;
                         ~~~~~

src/services/mcp/handlers/contextListHandler.ts:21:23 - error TS4111: Property 'limit' comes from an index signature, so it must be accessed with ['limit'].

21   const limit = args?.limit && !isNaN(parseInt(args.limit)) ? parseInt(args.limit) : undefined;
                         ~~~~~

src/services/mcp/handlers/contextListHandler.ts:21:53 - error TS4111: Property 'limit' comes from an index signature, so it must be accessed with ['limit'].

21   const limit = args?.limit && !isNaN(parseInt(args.limit)) ? parseInt(args.limit) : undefined;
                                                       ~~~~~

src/services/mcp/handlers/contextListHandler.ts:21:77 - error TS4111: Property 'limit' comes from an index signature, so it must be accessed with ['limit'].

21   const limit = args?.limit && !isNaN(parseInt(args.limit)) ? parseInt(args.limit) : undefined;
                                                                               ~~~~~

src/services/mcp/handlers/contextListHandler.ts:22:28 - error TS4111: Property 'filterText' comes from an index signature, so it must be accessed with ['filterText'].

22   const filterText = args?.filterText;
                              ~~~~~~~~~~

src/services/mcp/handlers/contextListHandler.ts:23:32 - error TS4111: Property 'sinceTimestamp' comes from an index signature, so it must be accessed with ['sinceTimestamp'].

23   const sinceTimestamp = args?.sinceTimestamp && !isNaN(parseInt(args.sinceTimestamp))
                                  ~~~~~~~~~~~~~~

src/services/mcp/handlers/contextListHandler.ts:23:71 - error TS4111: Property 'sinceTimestamp' comes from an index signature, so it must be accessed with ['sinceTimestamp'].

23   const sinceTimestamp = args?.sinceTimestamp && !isNaN(parseInt(args.sinceTimestamp))
                                                                         ~~~~~~~~~~~~~~

src/services/mcp/handlers/contextListHandler.ts:24:21 - error TS4111: Property 'sinceTimestamp' comes from an index signature, so it must be accessed with ['sinceTimestamp'].

24     ? parseInt(args.sinceTimestamp)
                       ~~~~~~~~~~~~~~

src/services/mcp/handlers/contextListHandler.ts:26:22 - error TS4111: Property 'tags' comes from an index signature, so it must be accessed with ['tags'].

26   const tags = args?.tags && Array.isArray(args.tags) ? args.tags : undefined;
                        ~~~~

src/services/mcp/handlers/contextListHandler.ts:26:49 - error TS4111: Property 'tags' comes from an index signature, so it must be accessed with ['tags'].

26   const tags = args?.tags && Array.isArray(args.tags) ? args.tags : undefined;
                                                   ~~~~

src/services/mcp/handlers/contextListHandler.ts:26:62 - error TS4111: Property 'tags' comes from an index signature, so it must be accessed with ['tags'].

26   const tags = args?.tags && Array.isArray(args.tags) ? args.tags : undefined;
                                                                ~~~~

src/services/mcp/handlers/contextListHandler.ts:30:9 - error TS7034: Variable 'memoryItems' implicitly has type 'any[]' in some locations where its type cannot be determined.

30     let memoryItems;
           ~~~~~~~~~~~

src/services/mcp/handlers/contextListHandler.ts:52:23 - error TS7005: Variable 'memoryItems' implicitly has an 'any[]' type.

52         memoryItems = memoryItems.concat(allMemory[scopeKey].map(item => ({
                         ~~~~~~~~~~~

src/services/mcp/handlers/contextListHandler.ts:52:42 - error TS2532: Object is possibly 'undefined'.

52         memoryItems = memoryItems.concat(allMemory[scopeKey].map(item => ({
                                            ~~~~~~~~~~~~~~~~~~~

src/services/mcp/handlers/contextNavigateHandler.test.ts:1:10 - error TS2459: Module '"./contextNavigateHandler.js"' declares 'findSemanticPath' locally, but it is not exported.

1 import { findSemanticPath, findExploratoryPath } from './contextNavigateHandler.js';
           ~~~~~~~~~~~~~~~~

  src/services/mcp/handlers/contextNavigateHandler.ts:348:16
    348 async function findSemanticPath(
                       ~~~~~~~~~~~~~~~~
    'findSemanticPath' is declared here.
  src/services/mcp/handlers/contextNavigateHandler.ts:4:10
    4 import { findSemanticPath } from '../core/navigation/semantic.js';
               ~~~~~~~~~~~~~~~~
    and here.

src/services/mcp/handlers/contextNavigateHandler.test.ts:1:28 - error TS2459: Module '"./contextNavigateHandler.js"' declares 'findExploratoryPath' locally, but it is not exported.

1 import { findSemanticPath, findExploratoryPath } from './contextNavigateHandler.js';
                             ~~~~~~~~~~~~~~~~~~~

  src/services/mcp/handlers/contextNavigateHandler.ts:531:16
    531 async function findExploratoryPath(
                       ~~~~~~~~~~~~~~~~~~~
    'findExploratoryPath' is declared here.
  src/services/mcp/handlers/contextNavigateHandler.ts:5:10
    5 import { findExploratoryPath } from '../core/navigation/exploratory.js';
               ~~~~~~~~~~~~~~~~~~~
    and here.

src/services/mcp/handlers/contextNavigateHandler.test.ts:2:29 - error TS2307: Cannot find module '../types.js' or its corresponding type declarations.

2 import { ContextLink } from '../types.js';
                              ~~~~~~~~~~~~~

src/services/mcp/handlers/contextNavigateHandler.test.ts:3:32 - error TS2307: Cannot find module '../../memory/context.js' or its corresponding type declarations.

3 import { getContextById } from '../../memory/context.js';
                                 ~~~~~~~~~~~~~~~~~~~~~~~~~

src/services/mcp/handlers/contextNavigateHandler.test.ts:4:33 - error TS2307: Cannot find module '../../memory/context_links.js' or its corresponding type declarations.

4 import { getContextLinks } from '../../memory/context_links.js';
                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/services/mcp/handlers/contextNavigateHandler.test.ts:16:43 - error TS7053: Element implicitly has an 'any' type because expression of type 'string' can't be used to index type '{ 'ctx-1': { id: string; text: string; tags: string[]; }; 'ctx-2': { id: string; text: string; tags: string[]; }; 'ctx-3': { id: string; text: string; tags: string[]; }; 'ctx-4': { id: string; text: string; tags: string[]; }; }'.
  No index signature with a parameter of type 'string' was found on type '{ 'ctx-1': { id: string; text: string; tags: string[]; }; 'ctx-2': { id: string; text: string; tags: string[]; }; 'ctx-3': { id: string; text: string; tags: string[]; }; 'ctx-4': { id: string; text: string; tags: string[]; }; }'.

16   getContextById: jest.fn((id: string) => mockContexts[id] || null)
                                             ~~~~~~~~~~~~~~~~

src/services/mcp/handlers/contextNavigateHandler.test.ts:105:35 - error TS7006: Parameter 'n' implicitly has an 'any' type.

105     expect(result.path?.nodes.map(n => n.id)).toEqual(['ctx-1', 'ctx-3']);
                                      ~

src/services/mcp/handlers/contextNavigateHandler.test.ts:208:62 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ 'ctx-1': { id: string; text: string; tags: string[]; }; 'ctx-2': { id: string; text: string; tags: string[]; }; 'ctx-3': { id: string; text: string; tags: string[]; }; 'ctx-4': { id: string; text: string; tags: string[]; }; }'.

208     (getContextById as jest.Mock).mockImplementation((id) => mockContexts[id]);
                                                                 ~~~~~~~~~~~~~~~~

src/services/mcp/handlers/contextNavigateHandler.test.ts:239:37 - error TS7006: Parameter 'edge' implicitly has an 'any' type.

239     expect(result.path?.edges.every(edge =>
                                        ~~~~

src/services/mcp/handlers/contextNavigateHandler.test.ts:241:31 - error TS7006: Parameter 'e' implicitly has an 'any' type.

241       result.path?.edges.some(e => e.targetId === edge.sourceId)
                                  ~

src/services/mcp/handlers/contextNavigateHandler.test.ts:276:37 - error TS7006: Parameter 'edge' implicitly has an 'any' type.

276     expect(result.path?.edges.every(edge =>
                                        ~~~~

src/services/mcp/handlers/contextNavigateHandler.test.ts:355:44 - error TS7006: Parameter 'n' implicitly has an 'any' type.

355     const nodeIds = result.path?.nodes.map(n => n.id);
                                               ~

src/services/mcp/handlers/contextNavigateHandler.ts:1:23 - error TS6133: 'getMemoryContexts' is declared but its value is never read.

1 import { ContextItem, getMemoryContexts } from "../../memory/context.js";
                        ~~~~~~~~~~~~~~~~~

src/services/mcp/handlers/contextNavigateHandler.ts:1:48 - error TS2307: Cannot find module '../../memory/context.js' or its corresponding type declarations.

1 import { ContextItem, getMemoryContexts } from "../../memory/context.js";
                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~

src/services/mcp/handlers/contextNavigateHandler.ts:4:10 - error TS2440: Import declaration conflicts with local declaration of 'findSemanticPath'.

4 import { findSemanticPath } from '../core/navigation/semantic.js';
           ~~~~~~~~~~~~~~~~

src/services/mcp/handlers/contextNavigateHandler.ts:5:10 - error TS2440: Import declaration conflicts with local declaration of 'findExploratoryPath'.

5 import { findExploratoryPath } from '../core/navigation/exploratory.js';
           ~~~~~~~~~~~~~~~~~~~

src/services/mcp/handlers/contextNavigateHandler.ts:6:15 - error TS2440: Import declaration conflicts with local declaration of 'NavigationOptions'.

6 import type { NavigationOptions } from '../utils/navigationGraph.js';
                ~~~~~~~~~~~~~~~~~

src/services/mcp/handlers/contextNavigateHandler.ts:128:16 - error TS6133: 'findWeightedPath' is declared but its value is never read.

128 async function findWeightedPath(
                   ~~~~~~~~~~~~~~~~

src/services/mcp/handlers/contextNavigateHandler.ts:133:16 - error TS2304: Cannot find name 'NavigationStrategy'.

133     strategy?: NavigationStrategy,
                   ~~~~~~~~~~~~~~~~~~

src/services/mcp/handlers/contextNavigateHandler.ts:173:30 - error TS2532: Object is possibly 'undefined'.

173         queue.sort((a, b) => distances[a] - distances[b]);
                                 ~~~~~~~~~~~~

src/services/mcp/handlers/contextNavigateHandler.ts:173:45 - error TS2532: Object is possibly 'undefined'.

173         queue.sort((a, b) => distances[a] - distances[b]);
                                                ~~~~~~~~~~~~

src/services/mcp/handlers/contextNavigateHandler.ts:182:28 - error TS7052: Element implicitly has an 'any' type because type 'Map<string, Set<string>>' has no index signature. Did you mean to call 'graph.get'?

182         for (const edge of graph[current]) {
                               ~~~~~~~~~~~~~~

src/services/mcp/handlers/contextNavigateHandler.ts:190:30 - error TS2532: Object is possibly 'undefined'.

190             const distance = distances[current] + weight;
                                 ~~~~~~~~~~~~~~~~~~

src/services/mcp/handlers/contextNavigateHandler.ts:192:28 - error TS2532: Object is possibly 'undefined'.

192             if (distance < distances[edge.targetId]) {
                               ~~~~~~~~~~~~~~~~~~~~~~~~

src/services/mcp/handlers/contextNavigateHandler.ts:205:9 - error TS2322: Type 'string | undefined' is not assignable to type 'string'.
  Type 'undefined' is not assignable to type 'string'.

205         current = previous[current];
            ~~~~~~~

src/services/mcp/handlers/contextNavigateHandler.ts:245:9 - error TS2353: Object literal may only specify known properties, and 'nodes' does not exist in type 'NavigationResult'.

245         nodes,
            ~~~~~

src/services/mcp/handlers/contextNavigateHandler.ts:250:16 - error TS6133: 'navigateShortest' is declared but its value is never read.

250 async function navigateShortest(
                   ~~~~~~~~~~~~~~~~

src/services/mcp/handlers/contextNavigateHandler.ts:351:13 - error TS2304: Cannot find name 'NavigationStrategy'.

351   strategy: NavigationStrategy,
                ~~~~~~~~~~~~~~~~~~

src/services/mcp/handlers/contextNavigateHandler.ts:361:25 - error TS2304: Cannot find name 'getContextById'.

361       const ctx = await getContextById(id);
                            ~~~~~~~~~~~~~~

src/services/mcp/handlers/contextNavigateHandler.ts:371:9 - error TS6133: 'startContext' is declared but its value is never read.

371   const startContext = await getCachedContext(startId);
            ~~~~~~~~~~~~

src/services/mcp/handlers/contextNavigateHandler.ts:372:9 - error TS6133: 'targetContext' is declared but its value is never read.

372   const targetContext = await getCachedContext(targetId);
            ~~~~~~~~~~~~~

src/services/mcp/handlers/contextNavigateHandler.ts:396:61 - error TS7006: Parameter 'tag' implicitly has an 'any' type.

396       const hasAllRequiredTags = strategy.requireTags.every(tag => context.tags?.includes(tag));
                                                                ~~~

src/services/mcp/handlers/contextNavigateHandler.ts:401:57 - error TS7006: Parameter 'tag' implicitly has an 'any' type.

401       const hasExcludedTags = strategy.excludeTags.some(tag => context.tags?.includes(tag));
                                                            ~~~

src/services/mcp/handlers/contextNavigateHandler.ts:493:44 - error TS2345: Argument of type 'string | undefined' is not assignable to parameter of type 'string'.
  Type 'undefined' is not assignable to type 'string'.

493     const context = await getCachedContext(path[i]);
                                               ~~~~~~~

src/services/mcp/handlers/contextNavigateHandler.ts:533:13 - error TS2304: Cannot find name 'NavigationStrategy'.

533   strategy: NavigationStrategy,
                ~~~~~~~~~~~~~~~~~~

src/services/mcp/handlers/contextNavigateHandler.ts:544:25 - error TS2304: Cannot find name 'getContextById'.

544       const ctx = await getContextById(id);
                            ~~~~~~~~~~~~~~

src/services/mcp/handlers/contextNavigateHandler.ts:554:9 - error TS6133: 'startContext' is declared but its value is never read.

554   const startContext = await getCachedContext(startId);
            ~~~~~~~~~~~~

src/services/mcp/handlers/contextNavigateHandler.ts:576:61 - error TS7006: Parameter 'tag' implicitly has an 'any' type.

576       const hasAllRequiredTags = strategy.requireTags.every(tag => context.tags?.includes(tag));
                                                                ~~~

src/services/mcp/handlers/contextNavigateHandler.ts:581:57 - error TS7006: Parameter 'tag' implicitly has an 'any' type.

581       const hasExcludedTags = strategy.excludeTags.some(tag => context.tags?.includes(tag));
                                                            ~~~

src/services/mcp/handlers/contextNavigateHandler.ts:635:24 - error TS6133: 'score' is declared but its value is never read.

635       .filter(({ link, score }) => {
                           ~~~~~

src/services/mcp/handlers/contextNavigateHandler.ts:698:3 - error TS2741: Property 'startId' is missing in type '{}' but required in type 'NavigationOptions'.

698   options: NavigationOptions = {},
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  src/services/mcp/handlers/contextNavigateHandler.ts:23:3
    23   startId: string;
         ~~~~~~~
    'startId' is declared here.

src/services/mcp/handlers/contextSearchByTagsHandler.ts:3:10 - error TS2459: Module '"./contextTagHandler.js"' declares 'normalizeTag' locally, but it is not exported.

3 import { normalizeTag } from "./contextTagHandler.js";
           ~~~~~~~~~~~~

  src/services/mcp/handlers/contextTagHandler.ts:7:10
    7 function normalizeTag(tag: string): string {
               ~~~~~~~~~~~~
    'normalizeTag' is declared here.

src/services/mcp/handlers/contextSearchByTagsHandler.ts:16:35 - error TS2532: Object is possibly 'undefined'.

16   for (let i = 0; i <= len1; i++) matrix[i][0] = i;
                                     ~~~~~~~~~

src/services/mcp/handlers/contextSearchByTagsHandler.ts:17:35 - error TS2532: Object is possibly 'undefined'.

17   for (let j = 0; j <= len2; j++) matrix[0][j] = j;
                                     ~~~~~~~~~

src/services/mcp/handlers/contextSearchByTagsHandler.ts:23:7 - error TS2532: Object is possibly 'undefined'.

23       matrix[i][j] = Math.min(
         ~~~~~~~~~

src/services/mcp/handlers/contextSearchByTagsHandler.ts:24:9 - error TS2532: Object is possibly 'undefined'.

24         matrix[i - 1][j] + 1,     // cancellazione
           ~~~~~~~~~~~~~

src/services/mcp/handlers/contextSearchByTagsHandler.ts:24:9 - error TS2532: Object is possibly 'undefined'.

24         matrix[i - 1][j] + 1,     // cancellazione
           ~~~~~~~~~~~~~~~~

src/services/mcp/handlers/contextSearchByTagsHandler.ts:25:9 - error TS2532: Object is possibly 'undefined'.

25         matrix[i][j - 1] + 1,     // inserimento
           ~~~~~~~~~

src/services/mcp/handlers/contextSearchByTagsHandler.ts:25:9 - error TS2532: Object is possibly 'undefined'.

25         matrix[i][j - 1] + 1,     // inserimento
           ~~~~~~~~~~~~~~~~

src/services/mcp/handlers/contextSearchByTagsHandler.ts:26:9 - error TS2532: Object is possibly 'undefined'.

26         matrix[i - 1][j - 1] + cost // sostituzione
           ~~~~~~~~~~~~~

src/services/mcp/handlers/contextSearchByTagsHandler.ts:26:9 - error TS2532: Object is possibly 'undefined'.

26         matrix[i - 1][j - 1] + cost // sostituzione
           ~~~~~~~~~~~~~~~~~~~~

src/services/mcp/handlers/contextSearchByTagsHandler.ts:33:15 - error TS2532: Object is possibly 'undefined'.

33   return 1 - (matrix[len1][len2] / maxLen);
                 ~~~~~~~~~~~~

src/services/mcp/handlers/contextSearchByTagsHandler.ts:33:15 - error TS2532: Object is possibly 'undefined'.

33   return 1 - (matrix[len1][len2] / maxLen);
                 ~~~~~~~~~~~~~~~~~~

src/services/mcp/handlers/contextSearchByTagsHandler.ts:69:16 - error TS18048: 'item.tags' is possibly 'undefined'.

69         return item.tags.some(itemTag => {
                  ~~~~~~~~~

src/services/mcp/handlers/contextSearchByTagsHandler.ts:86:33 - error TS18048: 'item.tags' is possibly 'undefined'.

86           const maxSimilarity = item.tags.reduce((max, itemTag) => {
                                   ~~~~~~~~~

src/services/mcp/handlers/contextSearchByTagsHandler.ts:114:22 - error TS4111: Property 'tags' comes from an index signature, so it must be accessed with ['tags'].

114   const tags = args?.tags;
                         ~~~~

src/services/mcp/handlers/contextSearchByTagsHandler.ts:115:23 - error TS4111: Property 'scope' comes from an index signature, so it must be accessed with ['scope'].

115   const scope = args?.scope;
                          ~~~~~

src/services/mcp/handlers/contextSearchByTagsHandler.ts:116:23 - error TS4111: Property 'limit' comes from an index signature, so it must be accessed with ['limit'].

116   const limit = args?.limit && !isNaN(parseInt(args.limit)) ? parseInt(args.limit) : 50;
                          ~~~~~

src/services/mcp/handlers/contextSearchByTagsHandler.ts:116:53 - error TS4111: Property 'limit' comes from an index signature, so it must be accessed with ['limit'].

116   const limit = args?.limit && !isNaN(parseInt(args.limit)) ? parseInt(args.limit) : 50;
                                                        ~~~~~

src/services/mcp/handlers/contextSearchByTagsHandler.ts:116:77 - error TS4111: Property 'limit' comes from an index signature, so it must be accessed with ['limit'].

116   const limit = args?.limit && !isNaN(parseInt(args.limit)) ? parseInt(args.limit) : 50;
                                                                                ~~~~~

src/services/mcp/handlers/contextSearchByTagsHandler.ts:117:37 - error TS4111: Property 'similarityThreshold' comes from an index signature, so it must be accessed with ['similarityThreshold'].

117   const similarityThreshold = args?.similarityThreshold && !isNaN(parseFloat(args.similarityThreshold))
                                        ~~~~~~~~~~~~~~~~~~~

src/services/mcp/handlers/contextSearchByTagsHandler.ts:117:83 - error TS4111: Property 'similarityThreshold' comes from an index signature, so it must be accessed with ['similarityThreshold'].

117   const similarityThreshold = args?.similarityThreshold && !isNaN(parseFloat(args.similarityThreshold))
                                                                                      ~~~~~~~~~~~~~~~~~~~

src/services/mcp/handlers/contextSearchByTagsHandler.ts:118:23 - error TS4111: Property 'similarityThreshold' comes from an index signature, so it must be accessed with ['similarityThreshold'].

118     ? parseFloat(args.similarityThreshold)
                          ~~~~~~~~~~~~~~~~~~~

src/services/mcp/handlers/contextTagHandler.ts:2:24 - error TS2459: Module '"./contextInjectHandler.js"' declares 'persistMemoryToDisk' locally, but it is not exported.

2 import { getAllMemory, persistMemoryToDisk } from "./contextInjectHandler.js";
                         ~~~~~~~~~~~~~~~~~~~

  src/services/mcp/handlers/contextInjectHandler.ts:79:16
    79 async function persistMemoryToDisk(): Promise<void> {
                      ~~~~~~~~~~~~~~~~~~~
    'persistMemoryToDisk' is declared here.

src/services/mcp/handlers/contextTagHandler.ts:177:54 - error TS18048: 'item.tags' is possibly 'undefined'.

177       return normalizedSearchTags.every(searchTag => item.tags.includes(searchTag));
                                                         ~~~~~~~~~

src/services/mcp/handlers/contextTagHandler.ts:192:20 - error TS4111: Property 'id' comes from an index signature, so it must be accessed with ['id'].

192   const id = args?.id;
                       ~~

src/services/mcp/handlers/contextTagHandler.ts:193:22 - error TS4111: Property 'tags' comes from an index signature, so it must be accessed with ['tags'].

193   const tags = args?.tags;
                         ~~~~

src/services/mcp/handlers/contextTagHandler.ts:194:25 - error TS4111: Property 'replace' comes from an index signature, so it must be accessed with ['replace'].

194   const replace = args?.replace === true;
                            ~~~~~~~

src/services/mcp/handlers/contextTagHandler.ts:218:7 - error TS2375: Type '{ success: false; output: null; error: string | undefined; }' is not assignable to type 'McpToolResult' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'error' are incompatible.
    Type 'string | undefined' is not assignable to type 'string'.
      Type 'undefined' is not assignable to type 'string'.

218       return {
          ~~~~~~

src/services/mcp/handlers/contextUnlinkHandler.ts:1:1 - error TS6192: All imports in import declaration are unused.

1 import { ContextItem, getMemoryContexts } from "../../memory/context.js";
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/services/mcp/handlers/contextUnlinkHandler.ts:1:48 - error TS2307: Cannot find module '../../memory/context.js' or its corresponding type declarations.

1 import { ContextItem, getMemoryContexts } from "../../memory/context.js";
                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~

src/services/mcp/handlers/contextUnlinkHandler.ts:4:1 - error TS6133: 'uuid' is declared but its value is never read.

4 import { v4 as uuid } from "uuid";
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/services/mcp/handlers/contextUnlinkHandler.ts:83:62 - error TS18046: 'error' is of type 'unknown'.

83       error: `Errore durante la rimozione delle relazioni: ${error.message}`,
                                                                ~~~~~

src/services/mcp/handlers/directoryScanner.test.ts:3:1 - error TS6133: 'path' is declared but its value is never read.

3 import * as path from 'path';
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/services/mcp/handlers/directoryScanner.test.ts:35:60 - error TS6133: 'options' is declared but its value is never read.

35     (fs.readdir as jest.Mock).mockImplementation((dirPath, options) => {
                                                              ~~~~~~~

src/services/mcp/handlers/directoryScanner.test.ts:52:30 - error TS7006: Parameter 'item' implicitly has an 'any' type.

52     expect(result.data?.find(item => item.path === '/test/directory/subdir')?.type).toBe('directory');
                                ~~~~

src/services/mcp/handlers/directoryScanner.test.ts:53:30 - error TS7006: Parameter 'item' implicitly has an 'any' type.

53     expect(result.data?.find(item => item.path === '/test/directory/file1.txt')?.type).toBe('file');
                                ~~~~

src/services/mcp/handlers/directoryScanner.test.ts:69:49 - error TS2345: Argument of type '{ name: string; isDirectory: () => boolean; }[]' is not assignable to parameter of type 'never'.

69     (fs.readdir as jest.Mock).mockResolvedValue(mockEntries);
                                                   ~~~~~~~~~~~

src/services/mcp/handlers/directoryScanner.test.ts:78:38 - error TS7006: Parameter 'item' implicitly has an 'any' type.

78     const subdir = result.data?.find(item => item.path === '/test/directory/subdir');
                                        ~~~~

src/services/mcp/handlers/directoryScanner.test.ts:101:60 - error TS6133: 'options' is declared but its value is never read.

101     (fs.readdir as jest.Mock).mockImplementation((dirPath, options) => {
                                                               ~~~~~~~

src/services/mcp/handlers/directoryScanner.test.ts:122:36 - error TS7006: Parameter 'item' implicitly has an 'any' type.

122     const paths = result.data?.map(item => item.path);
                                       ~~~~

src/services/mcp/handlers/directoryScanner.test.ts:135:49 - error TS2345: Argument of type 'Error' is not assignable to parameter of type 'never'.

135     (fs.readdir as jest.Mock).mockRejectedValue(new Error('Directory non trovata'));
                                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/services/mcp/handlers/directoryScanner.test.ts:158:49 - error TS2345: Argument of type '{ name: string; isDirectory: () => boolean; }[]' is not assignable to parameter of type 'never'.

158     (fs.readdir as jest.Mock).mockResolvedValue(mockEntries);
                                                    ~~~~~~~~~~~

src/services/mcp/handlers/directoryScanner.test.ts:168:29 - error TS7006: Parameter 'item' implicitly has an 'any' type.

168     expect(result.data?.map(item => item.path)).toContain('/test/directory/file1.txt');
                                ~~~~

src/services/mcp/handlers/directoryScanner.test.ts:169:29 - error TS7006: Parameter 'item' implicitly has an 'any' type.

169     expect(result.data?.map(item => item.path)).toContain('/test/directory/src');
                                ~~~~

src/services/mcp/handlers/directoryScanner.ts:1:1 - error TS6133: 'vscode' is declared but its value is never read.

1 import * as vscode from 'vscode';
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/services/mcp/handlers/directoryScanner.ts:2:33 - error TS2307: Cannot find module '../types.js' or its corresponding type declarations.

2 import { HandlerFunction } from '../types.js';
                                  ~~~~~~~~~~~~~

src/services/mcp/handlers/directoryScanner.ts:59:43 - error TS18046: 'error' is of type 'unknown'.

59       error: `Failed to scan directory: ${error.message}`
                                             ~~~~~

src/services/mcp/handlers/errorResolver.ts:1:1 - error TS6133: 'vscode' is declared but its value is never read.

1 import * as vscode from 'vscode';
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/services/mcp/handlers/errorResolver.ts:2:33 - error TS2307: Cannot find module '../types.js' or its corresponding type declarations.

2 import { HandlerFunction } from '../types.js';
                                  ~~~~~~~~~~~~~

src/services/mcp/handlers/errorResolver.ts:57:11 - error TS6133: 'fileExtension' is declared but its value is never read.

57     const fileExtension = extname(filePath);
             ~~~~~~~~~~~~~

src/services/mcp/handlers/errorResolver.ts:62:7 - error TS2375: Type '{ file: string; line: number | undefined; }' is not assignable to type '{ file: string; line?: number; column?: number; }' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'line' are incompatible.
    Type 'number | undefined' is not assignable to type 'number'.
      Type 'undefined' is not assignable to type 'number'.

62       location: {
         ~~~~~~~~

  src/services/mcp/handlers/errorResolver.ts:16:3
    16   location: {
         ~~~~~~~~
    The expected type comes from property 'location' which is declared here on type 'ErrorAnalysis'

src/services/mcp/handlers/errorResolver.ts:94:69 - error TS18046: 'error' is of type 'unknown'.

94     throw new Error(`Failed to analyze error in file ${filePath}: ${error.message}`);
                                                                       ~~~~~

src/services/mcp/handlers/errorResolver.ts:114:42 - error TS18046: 'error' is of type 'unknown'.

114       error: `Failed to resolve error: ${error.message}`
                                             ~~~~~

src/services/mcp/handlers/fileSummarizer.ts:2:33 - error TS2307: Cannot find module '../types.js' or its corresponding type declarations.

2 import { HandlerFunction } from '../types.js';
                                  ~~~~~~~~~~~~~

src/services/mcp/handlers/fileSummarizer.ts:67:62 - error TS18046: 'error' is of type 'unknown'.

67     throw new Error(`Failed to summarize file ${filePath}: ${error.message}`);
                                                                ~~~~~

src/services/mcp/handlers/fileSummarizer.ts:83:43 - error TS18046: 'error' is of type 'unknown'.

83       error: `Failed to summarize file: ${error.message}`
                                             ~~~~~

src/services/mcp/handlers/fsFormatHandler.ts:19:26 - error TS1361: 'vscode' cannot be used as a value because it was imported using 'import type'.

19 const vscodeMod = typeof vscode !== 'undefined' ? vscode : mockVscode;
                            ~~~~~~

  src/services/mcp/handlers/fsFormatHandler.ts:5:18
    5 import type * as vscode from "vscode";
                       ~~~~~~
    'vscode' was imported here.

src/services/mcp/handlers/fsFormatHandler.ts:19:51 - error TS1361: 'vscode' cannot be used as a value because it was imported using 'import type'.

19 const vscodeMod = typeof vscode !== 'undefined' ? vscode : mockVscode;
                                                     ~~~~~~

  src/services/mcp/handlers/fsFormatHandler.ts:5:18
    5 import type * as vscode from "vscode";
                       ~~~~~~
    'vscode' was imported here.

src/services/mcp/handlers/fsFormatHandler.ts:344:26 - error TS4111: Property 'path' comes from an index signature, so it must be accessed with ['path'].

344   const filePath = args?.path;
                             ~~~~

src/services/mcp/handlers/fsFormatHandler.ts:345:26 - error TS4111: Property 'language' comes from an index signature, so it must be accessed with ['language'].

345   const language = args?.language;
                             ~~~~~~~~

src/services/mcp/handlers/fsFormatHandler.ts:346:29 - error TS4111: Property 'write' comes from an index signature, so it must be accessed with ['write'].

346   const writeToFile = args?.write === true;
                                ~~~~~

src/services/mcp/handlers/fsFormatHandler.ts:360:23 - error TS2532: Object is possibly 'undefined'.

360       workspacePath = vscodeMod.workspace.workspaceFolders[0].uri.fsPath;
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/services/mcp/handlers/fsWriteHandler.ts:14:26 - error TS1361: 'vscode' cannot be used as a value because it was imported using 'import type'.

14 const vscodeMod = typeof vscode !== 'undefined' ? vscode : mockVscode;
                            ~~~~~~

  src/services/mcp/handlers/fsWriteHandler.ts:3:18
    3 import type * as vscode from "vscode";
                       ~~~~~~
    'vscode' was imported here.

src/services/mcp/handlers/fsWriteHandler.ts:14:51 - error TS1361: 'vscode' cannot be used as a value because it was imported using 'import type'.

14 const vscodeMod = typeof vscode !== 'undefined' ? vscode : mockVscode;
                                                     ~~~~~~

  src/services/mcp/handlers/fsWriteHandler.ts:3:18
    3 import type * as vscode from "vscode";
                       ~~~~~~
    'vscode' was imported here.

src/services/mcp/handlers/fsWriteHandler.ts:28:26 - error TS4111: Property 'path' comes from an index signature, so it must be accessed with ['path'].

28   const filePath = args?.path;
                            ~~~~

src/services/mcp/handlers/fsWriteHandler.ts:29:25 - error TS4111: Property 'content' comes from an index signature, so it must be accessed with ['content'].

29   const content = args?.content;
                           ~~~~~~~

src/services/mcp/handlers/fsWriteHandler.ts:30:29 - error TS4111: Property 'overwrite' comes from an index signature, so it must be accessed with ['overwrite'].

30   const overwrite = !!args?.overwrite;
                               ~~~~~~~~~

src/services/mcp/handlers/fsWriteHandler.ts:31:31 - error TS4111: Property 'previewOnly' comes from an index signature, so it must be accessed with ['previewOnly'].

31   const previewOnly = !!args?.previewOnly;
                                 ~~~~~~~~~~~

src/services/mcp/handlers/fsWriteHandler.ts:56:23 - error TS2532: Object is possibly 'undefined'.

56       workspacePath = vscodeMod.workspace.workspaceFolders[0].uri.fsPath;
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/services/mcp/handlers/projectDepGraphHandler.ts:19:26 - error TS1361: 'vscode' cannot be used as a value because it was imported using 'import type'.

19 const vscodeMod = typeof vscode !== 'undefined' ? vscode : mockVscode;
                            ~~~~~~

  src/services/mcp/handlers/projectDepGraphHandler.ts:5:18
    5 import type * as vscode from "vscode";
                       ~~~~~~
    'vscode' was imported here.

src/services/mcp/handlers/projectDepGraphHandler.ts:19:51 - error TS1361: 'vscode' cannot be used as a value because it was imported using 'import type'.

19 const vscodeMod = typeof vscode !== 'undefined' ? vscode : mockVscode;
                                                     ~~~~~~

  src/services/mcp/handlers/projectDepGraphHandler.ts:5:18
    5 import type * as vscode from "vscode";
                       ~~~~~~
    'vscode' was imported here.

src/services/mcp/handlers/projectDepGraphHandler.ts:40:3 - error TS1016: A required parameter cannot follow an optional parameter.

40   workspacePath: string
     ~~~~~~~~~~~~~

src/services/mcp/handlers/projectDepGraphHandler.ts:110:28 - error TS4111: Property 'entryPoint' comes from an index signature, so it must be accessed with ['entryPoint'].

110   const entryPoint = args?.entryPoint || '.';
                               ~~~~~~~~~~

src/services/mcp/handlers/projectDepGraphHandler.ts:111:23 - error TS4111: Property 'depth' comes from an index signature, so it must be accessed with ['depth'].

111   const depth = args?.depth;
                          ~~~~~

src/services/mcp/handlers/projectDepGraphHandler.ts:112:25 - error TS4111: Property 'format' comes from an index signature, so it must be accessed with ['format'].

112   const format = (args?.format || 'json') as 'json' | 'dot' | 'tree';
                            ~~~~~~

src/services/mcp/handlers/projectDepGraphHandler.ts:127:23 - error TS2532: Object is possibly 'undefined'.

127       workspacePath = vscodeMod.workspace.workspaceFolders[0].uri.fsPath;
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/services/mcp/handlers/projectLintHandler.ts:25:26 - error TS1361: 'vscode' cannot be used as a value because it was imported using 'import type'.

25 const vscodeMod = typeof vscode !== 'undefined' ? vscode : mockVscode;
                            ~~~~~~

  src/services/mcp/handlers/projectLintHandler.ts:5:18
    5 import type * as vscode from "vscode";
                       ~~~~~~
    'vscode' was imported here.

src/services/mcp/handlers/projectLintHandler.ts:25:51 - error TS1361: 'vscode' cannot be used as a value because it was imported using 'import type'.

25 const vscodeMod = typeof vscode !== 'undefined' ? vscode : mockVscode;
                                                     ~~~~~~

  src/services/mcp/handlers/projectLintHandler.ts:5:18
    5 import type * as vscode from "vscode";
                       ~~~~~~
    'vscode' was imported here.

src/services/mcp/handlers/projectLintHandler.ts:287:26 - error TS4111: Property 'path' comes from an index signature, so it must be accessed with ['path'].

287   const filePath = args?.path;
                             ~~~~

src/services/mcp/handlers/projectLintHandler.ts:288:24 - error TS4111: Property 'language' comes from an index signature, so it must be accessed with ['language'].

288   let language = args?.language;
                           ~~~~~~~~

src/services/mcp/handlers/projectLintHandler.ts:289:27 - error TS4111: Property 'fix' comes from an index signature, so it must be accessed with ['fix'].

289   const shouldFix = args?.fix === true;
                              ~~~

src/services/mcp/handlers/projectLintHandler.ts:303:23 - error TS2532: Object is possibly 'undefined'.

303       workspacePath = vscodeMod.workspace.workspaceFolders[0].uri.fsPath;
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/services/mcp/handlers/projectSummaryHandler.ts:23:26 - error TS2304: Cannot find name 'vscode'.

23 const vscodeMod = typeof vscode !== 'undefined' ? vscode : mockVscode;
                            ~~~~~~

src/services/mcp/handlers/projectSummaryHandler.ts:23:51 - error TS2304: Cannot find name 'vscode'.

23 const vscodeMod = typeof vscode !== 'undefined' ? vscode : mockVscode;
                                                     ~~~~~~

src/services/mcp/handlers/readFileHandler.test.ts:57:46 - error TS2345: Argument of type '{ isFile: Mock<UnknownFunction>; }' is not assignable to parameter of type 'never'.

57     (fs.stat as jest.Mock).mockResolvedValue(mockStats);
                                                ~~~~~~~~~

src/services/mcp/handlers/readFileHandler.test.ts:58:50 - error TS2345: Argument of type '"contenuto file"' is not assignable to parameter of type 'never'.

58     (fs.readFile as jest.Mock).mockResolvedValue('contenuto file');
                                                    ~~~~~~~~~~~~~~~~

src/services/mcp/handlers/readFileHandler.test.ts:77:46 - error TS2345: Argument of type '{ isFile: Mock<UnknownFunction>; }' is not assignable to parameter of type 'never'.

77     (fs.stat as jest.Mock).mockResolvedValue(mockStats);
                                                ~~~~~~~~~

src/services/mcp/handlers/readFileHandler.test.ts:78:50 - error TS2345: Argument of type '"contenuto file"' is not assignable to parameter of type 'never'.

78     (fs.readFile as jest.Mock).mockResolvedValue('contenuto file');
                                                    ~~~~~~~~~~~~~~~~

src/services/mcp/handlers/readFileHandler.test.ts:101:46 - error TS2345: Argument of type '{ isFile: Mock<UnknownFunction>; }' is not assignable to parameter of type 'never'.

101     (fs.stat as jest.Mock).mockResolvedValue(mockStats);
                                                 ~~~~~~~~~

src/services/mcp/handlers/readFileHandler.test.ts:102:50 - error TS2345: Argument of type '"contenuto file"' is not assignable to parameter of type 'never'.

102     (fs.readFile as jest.Mock).mockResolvedValue('contenuto file');
                                                     ~~~~~~~~~~~~~~~~

src/services/mcp/handlers/readFileHandler.test.ts:119:46 - error TS2345: Argument of type '{ isFile: Mock<UnknownFunction>; }' is not assignable to parameter of type 'never'.

119     (fs.stat as jest.Mock).mockResolvedValue(mockStats);
                                                 ~~~~~~~~~

src/services/mcp/handlers/readFileHandler.test.ts:136:46 - error TS2345: Argument of type '{ isFile: Mock<UnknownFunction>; }' is not assignable to parameter of type 'never'.

136     (fs.stat as jest.Mock).mockResolvedValue(mockStats);
                                                 ~~~~~~~~~

src/services/mcp/handlers/readFileHandler.test.ts:137:50 - error TS2345: Argument of type 'Error' is not assignable to parameter of type 'never'.

137     (fs.readFile as jest.Mock).mockRejectedValue(new Error('Errore di lettura'));
                                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/services/mcp/handlers/readFileHandler.test.ts:153:46 - error TS2345: Argument of type 'Error' is not assignable to parameter of type 'never'.

153     (fs.stat as jest.Mock).mockRejectedValue(new Error('File non trovato'));
                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/services/mcp/handlers/readFileHandler.ts:43:28 - error TS2532: Object is possibly 'undefined'.

43       filePath = path.join(vscodeMod.workspace.workspaceFolders[0].uri.fsPath, normalizedPath);
                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/services/mcp/handlers/readFileHandler.ts:57:49 - error TS2769: No overload matches this call.
  Overload 1 of 3, '(path: PathLike | FileHandle, options?: ({ encoding?: null | undefined; flag?: OpenMode | undefined; } & Abortable) | null | undefined): Promise<...>', gave the following error.
    Type 'string' has no properties in common with type '{ encoding?: null | undefined; flag?: OpenMode | undefined; } & Abortable'.
  Overload 2 of 3, '(path: PathLike | FileHandle, options: ({ encoding: BufferEncoding; flag?: OpenMode | undefined; } & Abortable) | BufferEncoding): Promise<...>', gave the following error.
    Argument of type 'string' is not assignable to parameter of type '({ encoding: BufferEncoding; flag?: OpenMode | undefined; } & Abortable) | BufferEncoding'.
  Overload 3 of 3, '(path: PathLike | FileHandle, options?: BufferEncoding | (ObjectEncodingOptions & Abortable & { flag?: OpenMode | undefined; }) | null | undefined): Promise<...>', gave the following error.
    Argument of type 'string' is not assignable to parameter of type 'BufferEncoding | (ObjectEncodingOptions & Abortable & { flag?: OpenMode | undefined; }) | null | undefined'.

57     const content = await fs.readFile(filePath, encoding);
                                                   ~~~~~~~~


src/services/mcp/handlers/refactorSnippetHandler.ts:75:26 - error TS4111: Property 'language' comes from an index signature, so it must be accessed with ['language'].

75   const language = args?.language;
                            ~~~~~~~~

src/services/mcp/handlers/refactorSnippetHandler.ts:76:22 - error TS4111: Property 'code' comes from an index signature, so it must be accessed with ['code'].

76   const code = args?.code;
                        ~~~~

src/services/mcp/handlers/refactorSnippetHandler.ts:77:27 - error TS4111: Property 'objective' comes from an index signature, so it must be accessed with ['objective'].

77   const objective = args?.objective;
                             ~~~~~~~~~

src/services/mcp/handlers/refactorSnippetHandler.ts:78:36 - error TS4111: Property 'explanation' comes from an index signature, so it must be accessed with ['explanation'].

78   const includeExplanation = args?.explanation !== false; // Default a true
                                      ~~~~~~~~~~~

src/services/mcp/handlers/refactorSnippetHandler.ts:205:49 - error TS6133: 'language' is declared but its value is never read.

205 function generateExplanation(objective: string, language: string): string {
                                                    ~~~~~~~~

src/services/mcp/handlers/searchDocsHandler.test.ts:11:24 - error TS2307: Cannot find module '../../../integrations/documentation/searchAdapter.js' or its corresponding type declarations.

11 import { search } from '../../../integrations/documentation/searchAdapter.js';
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/services/mcp/handlers/searchDocsHandler.test.ts:48:45 - error TS2345: Argument of type '{ title: string; content: string; source: string; }[]' is not assignable to parameter of type 'never'.

48     (search as jest.Mock).mockResolvedValue(mockResults);
                                               ~~~~~~~~~~~

src/services/mcp/handlers/searchDocsHandler.test.ts:70:45 - error TS2345: Argument of type '{ title: string; content: string; source: string; }[]' is not assignable to parameter of type 'never'.

70     (search as jest.Mock).mockResolvedValue(mockResults);
                                               ~~~~~~~~~~~

src/services/mcp/handlers/searchDocsHandler.test.ts:85:45 - error TS2345: Argument of type 'Error' is not assignable to parameter of type 'never'.

85     (search as jest.Mock).mockRejectedValue(new Error('Errore durante la ricerca'));
                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/services/mcp/handlers/searchDocsHandler.ts:5:31 - error TS6196: 'McpToolResult' is declared but never used.

5 import type { McpToolHandler, McpToolResult } from "../../../shared/types/mcp.types.js";
                                ~~~~~~~~~~~~~

src/services/mcp/handlers/searchDocsHandler.ts:6:24 - error TS2307: Cannot find module '../../../integrations/documentation/searchAdapter.js' or its corresponding type declarations.

6 import { search } from '../../../integrations/documentation/searchAdapter.js';
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/services/mcp/handlers/searchDocsHandler.ts:17:26 - error TS1361: 'vscode' cannot be used as a value because it was imported using 'import type'.

17 const vscodeMod = typeof vscode !== 'undefined' ? vscode : mockVscode;
                            ~~~~~~

  src/services/mcp/handlers/searchDocsHandler.ts:2:18
    2 import type * as vscode from "vscode";
                       ~~~~~~
    'vscode' was imported here.

src/services/mcp/handlers/searchDocsHandler.ts:17:51 - error TS1361: 'vscode' cannot be used as a value because it was imported using 'import type'.

17 const vscodeMod = typeof vscode !== 'undefined' ? vscode : mockVscode;
                                                     ~~~~~~

  src/services/mcp/handlers/searchDocsHandler.ts:2:18
    2 import type * as vscode from "vscode";
                       ~~~~~~
    'vscode' was imported here.

src/services/mcp/handlers/searchDocsHandler.ts:83:24 - error TS4111: Property 'query' comes from an index signature, so it must be accessed with ['query'].

83   const query = input?.query as string | undefined;
                          ~~~~~

src/services/mcp/handlers/searchDocsHandler.ts:84:30 - error TS4111: Property 'maxResults' comes from an index signature, so it must be accessed with ['maxResults'].

84   const maxResults = (input?.maxResults as number) || 3;
                                ~~~~~~~~~~

src/services/mcp/handlers/searchDocsHandler.ts:85:30 - error TS4111: Property 'regex' comes from an index signature, so it must be accessed with ['regex'].

85   const regexMode = !!input?.regex;
                                ~~~~~

src/services/mcp/handlers/searchDocsHandler.ts:112:14 - error TS2532: Object is possibly 'undefined'.

112       root = vscodeMod.workspace.workspaceFolders[0].uri.fsPath;
                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/services/mcp/handlers/testRunHandler.ts:16:26 - error TS1361: 'vscode' cannot be used as a value because it was imported using 'import type'.

16 const vscodeMod = typeof vscode !== 'undefined' ? vscode : mockVscode;
                            ~~~~~~

  src/services/mcp/handlers/testRunHandler.ts:5:18
    5 import type * as vscode from "vscode";
                       ~~~~~~
    'vscode' was imported here.

src/services/mcp/handlers/testRunHandler.ts:16:51 - error TS1361: 'vscode' cannot be used as a value because it was imported using 'import type'.

16 const vscodeMod = typeof vscode !== 'undefined' ? vscode : mockVscode;
                                                     ~~~~~~

  src/services/mcp/handlers/testRunHandler.ts:5:18
    5 import type * as vscode from "vscode";
                       ~~~~~~
    'vscode' was imported here.

src/services/mcp/handlers/testRunHandler.ts:28:26 - error TS4111: Property 'path' comes from an index signature, so it must be accessed with ['path'].

28   const testPath = args?.path || '.';
                            ~~~~

src/services/mcp/handlers/testRunHandler.ts:29:27 - error TS4111: Property 'framework' comes from an index signature, so it must be accessed with ['framework'].

29   const framework = args?.framework || 'jest';
                             ~~~~~~~~~

src/services/mcp/handlers/testRunHandler.ts:30:24 - error TS4111: Property 'filter' comes from an index signature, so it must be accessed with ['filter'].

30   const filter = args?.filter;
                          ~~~~~~

src/services/mcp/handlers/testRunHandler.ts:31:26 - error TS4111: Property 'coverage' comes from an index signature, so it must be accessed with ['coverage'].

31   const coverage = args?.coverage === true;
                            ~~~~~~~~

src/services/mcp/handlers/testRunHandler.ts:32:23 - error TS4111: Property 'watch' comes from an index signature, so it must be accessed with ['watch'].

32   const watch = args?.watch === true;
                         ~~~~~

src/services/mcp/handlers/testRunHandler.ts:37:23 - error TS2532: Object is possibly 'undefined'.

37       workspacePath = vscodeMod.workspace.workspaceFolders[0].uri.fsPath;
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/services/mcp/mcp.types.ts:95:1 - error TS6133: 'vscode' is declared but its value is never read.

95 import * as vscode from 'vscode';
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/services/mcp/mcp.types.ts:320:3 - error TS2717: Subsequent property declarations must have the same type.  Property 'configType' must be of type '"json" | "yaml" | "env" | undefined', but here has type '"json" | "yaml" | "auto" | "env" | undefined'.

320   configType?: 'json' | 'yaml' | 'env' | 'auto';
      ~~~~~~~~~~

  src/services/mcp/mcp.types.ts:45:3
    45   configType?: 'json' | 'env' | 'yaml';
         ~~~~~~~~~~
    'configType' was also declared here.

src/services/mcp/McpDispatcher.ts:189:13 - error TS6133: 'sendSuccessResponse' is declared but its value is never read.

189     private sendSuccessResponse(result: string) {
                ~~~~~~~~~~~~~~~~~~~

src/services/mcp/McpHub.ts:49:9 - error TS2739: Type '{ client: { stop: () => Promise<void>; on: (event: string, listener: (...args: any[]) => void) => void; }; }' is missing the following properties from type 'McpConnection': server, transport, connectionId, userId

49   const connection: McpConnection = {
           ~~~~~~~~~~

src/services/mcp/McpHub.ts:54:10 - error TS6133: 'event' is declared but its value is never read.

54     on: (event: string, listener: (...args: any[]) => void) => {
            ~~~~~

src/services/mcp/McpHub.ts:54:25 - error TS6133: 'listener' is declared but its value is never read.

54     on: (event: string, listener: (...args: any[]) => void) => {
                           ~~~~~~~~

src/services/mcp/McpHub.ts:114:26 - error TS6133: 'text' is declared but its value is never read.

114  async restartConnection(text: string): Promise<void> {
                             ~~~~

src/services/mcp/McpHub.ts:209:4 - error TS2353: Object literal may only specify known properties, and 'uri' does not exist in type 'McpResource'.

209    uri: `resource://${name}`,
       ~~~

src/services/mcp/McpHub.ts:228:4 - error TS2353: Object literal may only specify known properties, and 'parameters' does not exist in type 'McpResourceTemplate'.

228    parameters: {}
       ~~~~~~~~~~

src/services/mcp/run-server.ts:11:26 - error TS4111: Property 'MCP_SERVER_PORT' comes from an index signature, so it must be accessed with ['MCP_SERVER_PORT'].

11 const PORT = process.env.MCP_SERVER_PORT
                            ~~~~~~~~~~~~~~~

src/services/mcp/run-server.ts:12:26 - error TS4111: Property 'MCP_SERVER_PORT' comes from an index signature, so it must be accessed with ['MCP_SERVER_PORT'].

12   ? parseInt(process.env.MCP_SERVER_PORT)
                            ~~~~~~~~~~~~~~~

src/services/mcp/test-script.ts:14:32 - error TS2307: Cannot find module '../../shared/protocols.js' or its corresponding type declarations.

14 import { WebviewMessage } from '../../shared/protocols.js';
                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/services/mcp/test-script.ts:15:10 - error TS1484: 'McpToolCall' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.

15 import { McpToolCall } from '../../shared/types/mcp.types.js';
            ~~~~~~~~~~~

src/services/mcp/test-script.ts:254:13 - error TS2769: No overload matches this call.
  Overload 1 of 2, '(options?: InputBoxOptions | undefined, token?: CancellationToken | undefined): Thenable<string | undefined>', gave the following error.
    Object literal may only specify known properties, and 'multiline' does not exist in type 'InputBoxOptions'.
  Overload 2 of 2, '(options?: InputBoxOptions | undefined, token?: CancellationToken | undefined): Thenable<string | undefined>', gave the following error.
    Object literal may only specify known properties, and 'multiline' does not exist in type 'InputBoxOptions'.

254             multiline: true
                ~~~~~~~~~


src/services/mcp/toolsListServer.ts:15:10 - error TS1484: 'McpToolCall' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.

15 import { McpToolCall } from '../../shared/types/mcp.types.js';
            ~~~~~~~~~~~

src/services/mcp/toolsListServer.ts:49:51 - error TS2349: This expression is not callable.
  Type 'typeof e' has no call signatures.

49 const app = express.default ? express.default() : express();
                                                     ~~~~~~~

  src/services/mcp/toolsListServer.ts:9:1
    9 import * as express from 'express';
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.

src/services/mcp/toolsListServer.ts:53:10 - error TS7006: Parameter '_' implicitly has an 'any' type.

53 app.use((_, res, next) => {
            ~

src/services/mcp/toolsListServer.ts:53:13 - error TS7006: Parameter 'res' implicitly has an 'any' type.

53 app.use((_, res, next) => {
               ~~~

src/services/mcp/toolsListServer.ts:53:18 - error TS7006: Parameter 'next' implicitly has an 'any' type.

53 app.use((_, res, next) => {
                    ~~~~

src/services/mcp/toolsListServer.ts:63:25 - error TS7006: Parameter '_' implicitly has an 'any' type.

63 app.get('/tools/list', (_, res) => {
                           ~

src/services/mcp/toolsListServer.ts:63:28 - error TS7006: Parameter 'res' implicitly has an 'any' type.

63 app.get('/tools/list', (_, res) => {
                              ~~~

src/services/mcp/toolsListServer.ts:73:32 - error TS7006: Parameter 'req' implicitly has an 'any' type.

73 app.post('/tools/call', async (req, res) => {
                                  ~~~

src/services/mcp/toolsListServer.ts:73:37 - error TS7006: Parameter 'res' implicitly has an 'any' type.

73 app.post('/tools/call', async (req, res) => {
                                       ~~~

src/services/mcp/toolsListServer.ts:141:15 - error TS7006: Parameter '_' implicitly has an 'any' type.

141 app.get('/', (_, res) => {
                  ~

src/services/mcp/toolsListServer.ts:141:18 - error TS7006: Parameter 'res' implicitly has an 'any' type.

141 app.get('/', (_, res) => {
                     ~~~

src/services/mcp/toolsListServer.ts:189:61 - error TS7006: Parameter 't' implicitly has an 'any' type.

189     console.log('Tools disponibili:', toolsSchema.tools.map(t => t.name).join(', '));
                                                                ~

src/services/mcp/toolsListServer.ts:197:28 - error TS4111: Property 'PORT' comes from an index signature, so it must be accessed with ['PORT'].

197   const port = process.env.PORT ? parseInt(process.env.PORT) : 3030;
                               ~~~~

src/services/mcp/toolsListServer.ts:197:56 - error TS4111: Property 'PORT' comes from an index signature, so it must be accessed with ['PORT'].

197   const port = process.env.PORT ? parseInt(process.env.PORT) : 3030;
                                                           ~~~~

src/services/mcp/utils/navigationGraph.test.ts:7:29 - error TS2307: Cannot find module '../types.js' or its corresponding type declarations.

7 import { ContextLink } from '../types.js';
                              ~~~~~~~~~~~~~

src/services/mcp/utils/navigationGraph.test.ts:21:21 - error TS1361: 'calculateSemanticScore' cannot be used as a value because it was imported using 'import type'.

21       const score = calculateSemanticScore(mockLink, {});
                       ~~~~~~~~~~~~~~~~~~~~~~

  src/services/mcp/utils/navigationGraph.test.ts:2:3
    2   calculateSemanticScore,
        ~~~~~~~~~~~~~~~~~~~~~~
    'calculateSemanticScore' was imported here.

src/services/mcp/utils/navigationGraph.test.ts:26:21 - error TS1361: 'calculateSemanticScore' cannot be used as a value because it was imported using 'import type'.

26       const score = calculateSemanticScore(mockLink, {
                       ~~~~~~~~~~~~~~~~~~~~~~

  src/services/mcp/utils/navigationGraph.test.ts:2:3
    2   calculateSemanticScore,
        ~~~~~~~~~~~~~~~~~~~~~~
    'calculateSemanticScore' was imported here.

src/services/mcp/utils/navigationGraph.test.ts:33:21 - error TS1361: 'calculateSemanticScore' cannot be used as a value because it was imported using 'import type'.

33       const score = calculateSemanticScore(mockLink, {
                       ~~~~~~~~~~~~~~~~~~~~~~

  src/services/mcp/utils/navigationGraph.test.ts:2:3
    2   calculateSemanticScore,
        ~~~~~~~~~~~~~~~~~~~~~~
    'calculateSemanticScore' was imported here.

src/services/mcp/utils/navigationGraph.test.ts:40:21 - error TS1361: 'calculateSemanticScore' cannot be used as a value because it was imported using 'import type'.

40       const score = calculateSemanticScore(mockLink, {
                       ~~~~~~~~~~~~~~~~~~~~~~

  src/services/mcp/utils/navigationGraph.test.ts:2:3
    2   calculateSemanticScore,
        ~~~~~~~~~~~~~~~~~~~~~~
    'calculateSemanticScore' was imported here.

src/services/mcp/utils/navigationGraph.test.ts:56:21 - error TS1361: 'calculateSemanticScore' cannot be used as a value because it was imported using 'import type'.

56       const score = calculateSemanticScore(mockLink, {
                       ~~~~~~~~~~~~~~~~~~~~~~

  src/services/mcp/utils/navigationGraph.test.ts:2:3
    2   calculateSemanticScore,
        ~~~~~~~~~~~~~~~~~~~~~~
    'calculateSemanticScore' was imported here.

src/services/mcp/utils/navigationGraph.test.ts:93:9 - error TS1361: 'calculateSemanticScore' cannot be used as a value because it was imported using 'import type'.

93         calculateSemanticScore(b, {}) - calculateSemanticScore(a, {})
           ~~~~~~~~~~~~~~~~~~~~~~

  src/services/mcp/utils/navigationGraph.test.ts:2:3
    2   calculateSemanticScore,
        ~~~~~~~~~~~~~~~~~~~~~~
    'calculateSemanticScore' was imported here.

src/services/mcp/utils/navigationGraph.test.ts:93:41 - error TS1361: 'calculateSemanticScore' cannot be used as a value because it was imported using 'import type'.

93         calculateSemanticScore(b, {}) - calculateSemanticScore(a, {})
                                           ~~~~~~~~~~~~~~~~~~~~~~

  src/services/mcp/utils/navigationGraph.test.ts:2:3
    2   calculateSemanticScore,
        ~~~~~~~~~~~~~~~~~~~~~~
    'calculateSemanticScore' was imported here.

src/services/mcp/utils/navigationGraph.test.ts:110:22 - error TS1361: 'buildNodeResult' cannot be used as a value because it was imported using 'import type'.

110       const result = buildNodeResult(mockContext, false, false);
                         ~~~~~~~~~~~~~~~

  src/services/mcp/utils/navigationGraph.test.ts:3:3
    3   buildNodeResult,
        ~~~~~~~~~~~~~~~
    'buildNodeResult' was imported here.

src/services/mcp/utils/navigationGraph.test.ts:115:22 - error TS1361: 'buildNodeResult' cannot be used as a value because it was imported using 'import type'.

115       const result = buildNodeResult(mockContext, true, false);
                         ~~~~~~~~~~~~~~~

  src/services/mcp/utils/navigationGraph.test.ts:3:3
    3   buildNodeResult,
        ~~~~~~~~~~~~~~~
    'buildNodeResult' was imported here.

src/services/mcp/utils/navigationGraph.test.ts:123:22 - error TS1361: 'buildNodeResult' cannot be used as a value because it was imported using 'import type'.

123       const result = buildNodeResult(mockContext, false, true);
                         ~~~~~~~~~~~~~~~

  src/services/mcp/utils/navigationGraph.test.ts:3:3
    3   buildNodeResult,
        ~~~~~~~~~~~~~~~
    'buildNodeResult' was imported here.

src/services/mcp/utils/navigationGraph.test.ts:131:22 - error TS1361: 'buildNodeResult' cannot be used as a value because it was imported using 'import type'.

131       const result = buildNodeResult(mockContext, true, true);
                         ~~~~~~~~~~~~~~~

  src/services/mcp/utils/navigationGraph.test.ts:3:3
    3   buildNodeResult,
        ~~~~~~~~~~~~~~~
    'buildNodeResult' was imported here.

src/services/mcp/utils/navigationGraph.test.ts:147:22 - error TS1361: 'buildEdgeResult' cannot be used as a value because it was imported using 'import type'.

147       const result = buildEdgeResult(mockLink, false);
                         ~~~~~~~~~~~~~~~

  src/services/mcp/utils/navigationGraph.test.ts:4:3
    4   buildEdgeResult,
        ~~~~~~~~~~~~~~~
    'buildEdgeResult' was imported here.

src/services/mcp/utils/navigationGraph.test.ts:157:22 - error TS1361: 'buildEdgeResult' cannot be used as a value because it was imported using 'import type'.

157       const result = buildEdgeResult(mockLink, true);
                         ~~~~~~~~~~~~~~~

  src/services/mcp/utils/navigationGraph.test.ts:4:3
    4   buildEdgeResult,
        ~~~~~~~~~~~~~~~
    'buildEdgeResult' was imported here.

src/services/mcp/utils/navigationGraph.test.ts:190:24 - error TS1361: 'filterLinksByOptions' cannot be used as a value because it was imported using 'import type'.

190       const filtered = filterLinksByOptions(mockLinks, { minStrength: 0.7 });
                           ~~~~~~~~~~~~~~~~~~~~

  src/services/mcp/utils/navigationGraph.test.ts:5:3
    5   filterLinksByOptions
        ~~~~~~~~~~~~~~~~~~~~
    'filterLinksByOptions' was imported here.

src/services/mcp/utils/navigationGraph.test.ts:196:24 - error TS1361: 'filterLinksByOptions' cannot be used as a value because it was imported using 'import type'.

196       const filtered = filterLinksByOptions(mockLinks, { minConfidence: 0.8 });
                           ~~~~~~~~~~~~~~~~~~~~

  src/services/mcp/utils/navigationGraph.test.ts:5:3
    5   filterLinksByOptions
        ~~~~~~~~~~~~~~~~~~~~
    'filterLinksByOptions' was imported here.

src/services/mcp/utils/navigationGraph.test.ts:202:24 - error TS1361: 'filterLinksByOptions' cannot be used as a value because it was imported using 'import type'.

202       const filtered = filterLinksByOptions(mockLinks, {
                           ~~~~~~~~~~~~~~~~~~~~

  src/services/mcp/utils/navigationGraph.test.ts:5:3
    5   filterLinksByOptions
        ~~~~~~~~~~~~~~~~~~~~
    'filterLinksByOptions' was imported here.

src/services/mcp/utils/navigationGraph.test.ts:211:24 - error TS1361: 'filterLinksByOptions' cannot be used as a value because it was imported using 'import type'.

211       const filtered = filterLinksByOptions(mockLinks, {});
                           ~~~~~~~~~~~~~~~~~~~~

  src/services/mcp/utils/navigationGraph.test.ts:5:3
    5   filterLinksByOptions
        ~~~~~~~~~~~~~~~~~~~~
    'filterLinksByOptions' was imported here.

src/services/mcp/utils/navigationGraph.ts:1:29 - error TS2307: Cannot find module '../types.js' or its corresponding type declarations.

1 import { ContextLink } from '../types.js';
                              ~~~~~~~~~~~~~

src/services/ripgrep/index.ts:6:43 - error TS2307: Cannot find module '../../core/ignore/JarvisIdeIgnoreController.js' or its corresponding type declarations.

6 import { JarvisIdeIgnoreController } from "../../core/ignore/JarvisIdeIgnoreController.js"
                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/services/settings/SettingsManager.test.ts:5:10 - error TS6133: 'afterEach' is declared but its value is never read.

5 import { afterEach, beforeEach, describe, expect, it, jest, test } from '@jest/globals';
           ~~~~~~~~~

src/services/settings/SettingsManager.test.ts:5:51 - error TS6133: 'it' is declared but its value is never read.

5 import { afterEach, beforeEach, describe, expect, it, jest, test } from '@jest/globals';
                                                    ~~

src/services/settings/SettingsManager.test.ts:16:38 - error TS2345: Argument of type 'undefined' is not assignable to parameter of type 'never'.

16   mkdir: jest.fn().mockResolvedValue(undefined),
                                        ~~~~~~~~~

src/services/settings/SettingsManager.test.ts:17:42 - error TS2345: Argument of type 'undefined' is not assignable to parameter of type 'never'.

17   writeFile: jest.fn().mockResolvedValue(undefined),
                                            ~~~~~~~~~

src/services/settings/SettingsManager.test.ts:18:42 - error TS2345: Argument of type '(path: string) => Promise<string>' is not assignable to parameter of type 'UnknownFunction'.
  Types of parameters 'path' and 'args' are incompatible.
    Type 'unknown' is not assignable to type 'string'.

18   readFile: jest.fn().mockImplementation((path: string) => {
                                            ~~~~~~~~~~~~~~~~~~~

src/services/settings/SettingsManager.test.ts:43:31 - error TS2339: Property 'ExtensionContext' does not exist on type 'typeof import("vscode")'.

43     mockContext = new (vscode.ExtensionContext as any)();
                                 ~~~~~~~~~~~~~~~~

src/services/settings/SettingsManager.test.ts:46:23 - error TS1361: 'SettingsManager' cannot be used as a value because it was imported using 'import type'.

46     settingsManager = SettingsManager.getInstance(mockContext);
                         ~~~~~~~~~~~~~~~

  src/services/settings/SettingsManager.test.ts:4:15
    4 import type { SettingsManager, JarvisSettings } from './SettingsManager.js';
                    ~~~~~~~~~~~~~~~
    'SettingsManager' was imported here.

src/services/settings/SettingsManager.ts:4:1 - error TS6133: 'Settings' is declared but its value is never read.

4 import type { Settings } from '../../shared/types/settings.types.js';
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/services/settings/SettingsManager.ts:5:1 - error TS6192: All imports in import declaration are unused.

5 import type { ApiConfiguration, LLMProviderId } from '../../shared/types/api.types.js';
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/services/TaskQueueService.ts:3:55 - error TS6307: File 'E:/cline-main/webview-ui/shared/types.ts' is not listed within the file list of project 'E:/cline-main/tsconfig.json'. Projects must list all files or use an 'include' pattern.
  The file is in the program because:
    Imported via '../../webview-ui/shared/types.js' from file 'E:/cline-main/src/services/TaskQueueService.ts'
    Imported via '../../../webview-ui/shared/types.js' from file 'E:/cline-main/src/webview/handlers/TaskQueueMessageHandler.ts'
  File is ECMAScript module because 'E:/cline-main/webview-ui/package.json' has field "type" with value "module"

3 import type { Task, TaskQueueState, TaskStatus } from '../../webview-ui/shared/types.js';
                                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  src/webview/handlers/TaskQueueMessageHandler.ts:4:56
    4 import type { TaskQueueState, AgentStatus, Task } from '../../../webview-ui/shared/types.js';
                                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    File is included via import here.

src/services/telemetry/TelemetryService.ts:3:10 - error TS1544: Named imports from a JSON file into an ECMAScript module are not allowed when 'module' is set to 'NodeNext'.

3 import { version as extensionVersion } from "../../../package.json"
           ~~~~~~~

src/services/telemetry/TelemetryService.ts:3:45 - error TS1543: Importing a JSON file into an ECMAScript module requires a 'type: "json"' import attribute when 'module' is set to 'NodeNext'.

3 import { version as extensionVersion } from "../../../package.json"
                                              ~~~~~~~~~~~~~~~~~~~~~~~

src/services/telemetry/TelemetryService.ts:3:45 - error TS6307: File 'E:/cline-main/package.json' is not listed within the file list of project 'E:/cline-main/tsconfig.json'. Projects must list all files or use an 'include' pattern.

3 import { version as extensionVersion } from "../../../package.json"
                                              ~~~~~~~~~~~~~~~~~~~~~~~

src/services/TelemetryService.ts:2:10 - error TS1484: 'TelemetrySetting' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.

2 import { TelemetrySetting } from "../types/global.js";
           ~~~~~~~~~~~~~~~~

src/services/TelemetryService.ts:21:20 - error TS6133: 'context' is declared but its value is never read.

21   async initialize(context: any): Promise<void> {
                      ~~~~~~~

src/services/themeManager.ts:107:12 - error TS2532: Object is possibly 'undefined'.

107     return themes[this.currentTheme].colors;
               ~~~~~~~~~~~~~~~~~~~~~~~~~

src/services/tree-sitter/index.ts:4:10 - error TS1484: 'LanguageParser' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.

4 import { LanguageParser, loadRequiredLanguageParsers } from "./languageParser.js"
           ~~~~~~~~~~~~~~

src/services/tree-sitter/index.ts:6:43 - error TS2307: Cannot find module '../../core/ignore/JarvisIdeIgnoreController.js' or its corresponding type declarations.

6 import { JarvisIdeIgnoreController } from "../../core/ignore/JarvisIdeIgnoreController.js"
                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/services/tree-sitter/index.ts:25:24 - error TS6133: 'remainingFiles' is declared but its value is never read.

25  const { filesToParse, remainingFiles } = separateFiles(allFiles)
                          ~~~~~~~~~~~~~~

src/services/tree-sitter/index.ts:27:60 - error TS2554: Expected 0 arguments, but got 1.

27  const languageParsers = await loadRequiredLanguageParsers(filesToParse)
                                                              ~~~~~~~~~~~~

src/services/tree-sitter/index.ts:36:49 - error TS2345: Argument of type 'LanguageParser[]' is not assignable to parameter of type 'LanguageParser'.
  Type 'LanguageParser[]' is missing the following properties from type 'LanguageParser': parser, language

36   const definitions = await parseFile(filePath, languageParsers, jarvisIdeIgnoreController)
                                                   ~~~~~~~~~~~~~~~

src/services/tree-sitter/index.ts:122:28 - error TS7053: Element implicitly has an 'any' type because expression of type 'string' can't be used to index type 'LanguageParser'.
  No index signature with a parameter of type 'string' was found on type 'LanguageParser'.

122  const { parser, query } = languageParsers[ext] || {}
                               ~~~~~~~~~~~~~~~~~~~~

src/services/tree-sitter/index.ts:138:18 - error TS7006: Parameter 'a' implicitly has an 'any' type.

138   captures.sort((a, b) => a.node.startPosition.row - b.node.startPosition.row)
                     ~

src/services/tree-sitter/index.ts:138:21 - error TS7006: Parameter 'b' implicitly has an 'any' type.

138   captures.sort((a, b) => a.node.startPosition.row - b.node.startPosition.row)
                        ~

src/services/tree-sitter/index.ts:146:21 - error TS7006: Parameter 'capture' implicitly has an 'any' type.

146   captures.forEach((capture) => {
                        ~~~~~~~

src/services/tree-sitter/languageParser.ts:3:1 - error TS6192: All imports in import declaration are unused.

  3 import {
    ~~~~~~~~
  4  javascriptQuery,
    ~~~~~~~~~~~~~~~~~
...
 16  kotlinQuery,
    ~~~~~~~~~~~~~
 17 } from "./queries.js"
    ~~~~~~~~~~~~~~~~~~~~~

src/services/tree-sitter/languageParser.ts:17:8 - error TS2307: Cannot find module './queries.js' or its corresponding type declarations.

17 } from "./queries.js"
          ~~~~~~~~~~~~~~

src/services/tree-sitter/languageParser.ts:20:10 - error TS2709: Cannot use namespace 'Parser' as a type.

20  parser: Parser
            ~~~~~~

src/services/tree-sitter/languageParser.ts:24:16 - error TS6133: 'loadLanguage' is declared but its value is never read.

24 async function loadLanguage(langName: string) {
                  ~~~~~~~~~~~~

src/services/tree-sitter/languageParser.ts:25:15 - error TS1361: 'Parser' cannot be used as a value because it was imported using 'import type'.

25  return await Parser.Language.load(join(__dirname, `tree-sitter-${langName}.wasm`))
                 ~~~~~~

  src/services/tree-sitter/languageParser.ts:1:8
    1 import type Parser from "web-tree-sitter"
             ~~~~~~~~~~~
    'Parser' was imported here.

src/services/tree-sitter/languageParser.ts:30:16 - error TS6133: 'initializeParser' is declared but its value is never read.

30 async function initializeParser() {
                  ~~~~~~~~~~~~~~~~

src/services/tree-sitter/languageParser.ts:32:9 - error TS1361: 'Parser' cannot be used as a value because it was imported using 'import type'.

32   await Parser.init()
           ~~~~~~

  src/services/tree-sitter/languageParser.ts:1:8
    1 import type Parser from "web-tree-sitter"
             ~~~~~~~~~~~
    'Parser' was imported here.

src/services/tree-sitter/languageParser.ts:79:22 - error TS1361: 'Parser' cannot be used as a value because it was imported using 'import type'.

79   const parser = new Parser()
                        ~~~~~~

  src/services/tree-sitter/languageParser.ts:1:8
    1 import type Parser from "web-tree-sitter"
             ~~~~~~~~~~~
    'Parser' was imported here.

src/services/tree-sitter/languageParser.ts:79:22 - error TS2351: This expression is not constructable.
  Type 'typeof import("web-tree-sitter", { with: { "resolution-mode": "import" } })' has no construct signatures.

79   const parser = new Parser()
                        ~~~~~~

src/services/tree-sitter/languageParser.ts:80:26 - error TS1361: 'Parser' cannot be used as a value because it was imported using 'import type'.

80   const language = await Parser.Language.load(join(__dirname, `tree-sitter-${langName}.wasm`))
                            ~~~~~~

  src/services/tree-sitter/languageParser.ts:1:8
    1 import type Parser from "web-tree-sitter"
             ~~~~~~~~~~~
    'Parser' was imported here.

src/shared/__tests__/__mocks__/vscode.ts:5:16 - error TS6133: 'value' is declared but its value is never read.

5     appendLine(value: string) {}
                 ~~~~~

src/shared/__tests__/__mocks__/vscode.ts:12:27 - error TS6133: 'name' is declared but its value is never read.

12     createOutputChannel: (name: string) => new vscode.OutputChannel(),
                             ~~~~

src/shared/__tests__/__mocks__/vscode.ts:46:1 - error TS1203: Export assignment cannot be used when targeting ECMAScript modules. Consider using 'export default' or another module format instead.

46 export = vscode;
   ~~~~~~~~~~~~~~~~

src/shared/__tests__/schema-coverage.spec.ts:1:36 - error TS6133: 'beforeEach' is declared but its value is never read.

1 import { describe, expect, it, vi, beforeEach } from 'vitest';
                                     ~~~~~~~~~~

src/shared/__tests__/schema-coverage.spec.ts:4:1 - error TS6133: 'glob' is declared but its value is never read.

4 import * as glob from 'glob';
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/shared/__tests__/schema-coverage.spec.ts:48:16 - error TS1361: 'isValidChatMessage' cannot be used as a value because it was imported using 'import type'.

48     validator: isValidChatMessage,
                  ~~~~~~~~~~~~~~~~~~

  src/shared/__tests__/schema-coverage.spec.ts:8:3
    8   isValidChatMessage,
        ~~~~~~~~~~~~~~~~~~
    'isValidChatMessage' was imported here.

src/shared/__tests__/schema-coverage.spec.ts:49:22 - error TS1361: 'validateChatMessageOrThrow' cannot be used as a value because it was imported using 'import type'.

49     strictValidator: validateChatMessageOrThrow,
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~

  src/shared/__tests__/schema-coverage.spec.ts:12:3
    12   validateChatMessageOrThrow,
         ~~~~~~~~~~~~~~~~~~~~~~~~~~
    'validateChatMessageOrThrow' was imported here.

src/shared/__tests__/schema-coverage.spec.ts:54:16 - error TS1361: 'isValidChatMessageArray' cannot be used as a value because it was imported using 'import type'.

54     validator: isValidChatMessageArray,
                  ~~~~~~~~~~~~~~~~~~~~~~~

  src/shared/__tests__/schema-coverage.spec.ts:9:3
    9   isValidChatMessageArray,
        ~~~~~~~~~~~~~~~~~~~~~~~
    'isValidChatMessageArray' was imported here.

src/shared/__tests__/schema-coverage.spec.ts:55:22 - error TS1361: 'validateChatMessageArrayOrThrow' cannot be used as a value because it was imported using 'import type'.

55     strictValidator: validateChatMessageArrayOrThrow,
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  src/shared/__tests__/schema-coverage.spec.ts:13:3
    13   validateChatMessageArrayOrThrow,
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    'validateChatMessageArrayOrThrow' was imported here.

src/shared/__tests__/schema-coverage.spec.ts:60:16 - error TS1361: 'isValidChatSettings' cannot be used as a value because it was imported using 'import type'.

60     validator: isValidChatSettings,
                  ~~~~~~~~~~~~~~~~~~~

  src/shared/__tests__/schema-coverage.spec.ts:10:3
    10   isValidChatSettings,
         ~~~~~~~~~~~~~~~~~~~
    'isValidChatSettings' was imported here.

src/shared/__tests__/schema-coverage.spec.ts:61:22 - error TS1361: 'validateChatSettingsOrThrow' cannot be used as a value because it was imported using 'import type'.

61     strictValidator: validateChatSettingsOrThrow,
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~

  src/shared/__tests__/schema-coverage.spec.ts:14:3
    14   validateChatSettingsOrThrow,
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
    'validateChatSettingsOrThrow' was imported here.

src/shared/__tests__/schema-coverage.spec.ts:66:16 - error TS1361: 'isValidApiConfiguration' cannot be used as a value because it was imported using 'import type'.

66     validator: isValidApiConfiguration,
                  ~~~~~~~~~~~~~~~~~~~~~~~

  src/shared/__tests__/schema-coverage.spec.ts:11:3
    11   isValidApiConfiguration,
         ~~~~~~~~~~~~~~~~~~~~~~~
    'isValidApiConfiguration' was imported here.

src/shared/__tests__/schema-coverage.spec.ts:67:22 - error TS1361: 'validateApiConfigurationOrThrow' cannot be used as a value because it was imported using 'import type'.

67     strictValidator: validateApiConfigurationOrThrow,
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  src/shared/__tests__/schema-coverage.spec.ts:15:3
    15   validateApiConfigurationOrThrow
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    'validateApiConfigurationOrThrow' was imported here.

src/shared/__tests__/setup.ts:5:4 - error TS2339: Property 'mock' does not exist on type 'typeof import("E:/cline-main/node_modules/vitest/dist/index", { with: { "resolution-mode": "import" } })'.

5 vi.mock('vscode', () => {
     ~~~~

src/shared/__tests__/validators.more.test.ts:4:48 - error TS6133: 'afterEach' is declared but its value is never read.

4 import { describe, it, expect, vi, beforeEach, afterEach } from 'vitest';
                                                 ~~~~~~~~~

src/shared/__tests__/validators.more.test.ts:7:15 - error TS2305: Module '"../../types/extension.js"' has no exported member 'ChatSettings'.

7 import type { ChatSettings, ApiConfiguration } from '../../types/extension.js';
                ~~~~~~~~~~~~

src/shared/__tests__/validators.more.test.ts:7:29 - error TS2459: Module '"../../types/extension.js"' declares 'ApiConfiguration' locally, but it is not exported.

7 import type { ChatSettings, ApiConfiguration } from '../../types/extension.js';
                              ~~~~~~~~~~~~~~~~

  src/types/extension.ts:2:15
    2 import type { ApiConfiguration } from "./global.js"
                    ~~~~~~~~~~~~~~~~
    'ApiConfiguration' is declared here.

src/shared/__tests__/validators.more.test.ts:19:70 - error TS2554: Expected 1-2 arguments, but got 3.

19 vi.mock('../../../docs/schemas/ChatMessage.schema.json', () => ({}), { virtual: true });
                                                                        ~~~~~~~~~~~~~~~~~

src/shared/__tests__/validators.more.test.ts:20:71 - error TS2554: Expected 1-2 arguments, but got 3.

20 vi.mock('../../../docs/schemas/ChatSettings.schema.json', () => ({}), { virtual: true });
                                                                         ~~~~~~~~~~~~~~~~~

src/shared/__tests__/validators.more.test.ts:21:75 - error TS2554: Expected 1-2 arguments, but got 3.

21 vi.mock('../../../docs/schemas/ApiConfiguration.schema.json', () => ({}), { virtual: true });
                                                                             ~~~~~~~~~~~~~~~~~

src/shared/__tests__/validators.more.test.ts:22:73 - error TS2554: Expected 1-2 arguments, but got 3.

22 vi.mock('../../../docs/schemas/WebviewMessage.schema.json', () => ({}), { virtual: true });
                                                                           ~~~~~~~~~~~~~~~~~

src/shared/__tests__/validators.more.test.ts:23:75 - error TS2554: Expected 1-2 arguments, but got 3.

23 vi.mock('../../../docs/schemas/ExtensionMessage.schema.json', () => ({}), { virtual: true });
                                                                             ~~~~~~~~~~~~~~~~~

src/shared/__tests__/validators.more.test.ts:24:70 - error TS2554: Expected 1-2 arguments, but got 3.

24 vi.mock('../../../docs/schemas/ChatSession.schema.json', () => ({}), { virtual: true });
                                                                        ~~~~~~~~~~~~~~~~~

src/shared/__tests__/validators.more.test.ts:34:11 - error TS2353: Object literal may only specify known properties, and 'id' does not exist in type 'ChatMessage'.

34         { id: 'msg1', role: 'user', content: 'Domanda?', timestamp: Date.now() },
             ~~

src/shared/__tests__/validators.more.test.ts:35:11 - error TS2353: Object literal may only specify known properties, and 'id' does not exist in type 'ChatMessage'.

35         { id: 'msg2', role: 'assistant', content: 'Risposta!', timestamp: Date.now() }
             ~~

src/shared/__tests__/validators.test.ts:4:15 - error TS2305: Module '"../../types/extension.js"' has no exported member 'ChatSettings'.

4 import type { ChatSettings, ApiConfiguration } from '../../types/extension.js';
                ~~~~~~~~~~~~

src/shared/__tests__/validators.test.ts:4:29 - error TS2459: Module '"../../types/extension.js"' declares 'ApiConfiguration' locally, but it is not exported.

4 import type { ChatSettings, ApiConfiguration } from '../../types/extension.js';
                              ~~~~~~~~~~~~~~~~

  src/types/extension.ts:2:15
    2 import type { ApiConfiguration } from "./global.js"
                    ~~~~~~~~~~~~~~~~
    'ApiConfiguration' is declared here.

src/shared/__tests__/validators.test.ts:7:70 - error TS2554: Expected 1-2 arguments, but got 3.

7 vi.mock('../../../docs/schemas/ChatMessage.schema.json', () => ({}), { virtual: true });
                                                                       ~~~~~~~~~~~~~~~~~

src/shared/__tests__/validators.test.ts:8:71 - error TS2554: Expected 1-2 arguments, but got 3.

8 vi.mock('../../../docs/schemas/ChatSettings.schema.json', () => ({}), { virtual: true });
                                                                        ~~~~~~~~~~~~~~~~~

src/shared/__tests__/validators.test.ts:9:75 - error TS2554: Expected 1-2 arguments, but got 3.

9 vi.mock('../../../docs/schemas/ApiConfiguration.schema.json', () => ({}), { virtual: true });
                                                                            ~~~~~~~~~~~~~~~~~

src/shared/__tests__/validators.test.ts:10:73 - error TS2554: Expected 1-2 arguments, but got 3.

10 vi.mock('../../../docs/schemas/WebviewMessage.schema.json', () => ({}), { virtual: true });
                                                                           ~~~~~~~~~~~~~~~~~

src/shared/__tests__/validators.test.ts:11:75 - error TS2554: Expected 1-2 arguments, but got 3.

11 vi.mock('../../../docs/schemas/ExtensionMessage.schema.json', () => ({}), { virtual: true });
                                                                             ~~~~~~~~~~~~~~~~~

src/shared/__tests__/validators.test.ts:78:13 - error TS2741: Property 'timestamp' is missing in type '{ role: "user"; content: string; }' but required in type 'ChatMessage'.

78       const validMessage: ChatMessage = {
               ~~~~~~~~~~~~

  src/shared/types/message.ts:17:5
    17     timestamp: number;
           ~~~~~~~~~
    'timestamp' is declared here.

src/shared/__tests__/validators.test.ts:107:13 - error TS2741: Property 'timestamp' is missing in type '{ role: "user"; content: string; }' but required in type 'ChatMessage'.

107       const validMessage: ChatMessage = {
                ~~~~~~~~~~~~

  src/shared/types/message.ts:17:5
    17     timestamp: number;
           ~~~~~~~~~
    'timestamp' is declared here.

src/shared/__tests__/validators.test.ts:134:9 - error TS2741: Property 'timestamp' is missing in type '{ role: "user"; content: string; }' but required in type 'ChatMessage'.

134         { role: 'user', content: 'Domanda?' },
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  src/shared/types/message.ts:17:5
    17     timestamp: number;
           ~~~~~~~~~
    'timestamp' is declared here.

src/shared/__tests__/validators.test.ts:135:9 - error TS2741: Property 'timestamp' is missing in type '{ role: "assistant"; content: string; }' but required in type 'ChatMessage'.

135         { role: 'assistant', content: 'Risposta!' },
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  src/shared/types/message.ts:17:5
    17     timestamp: number;
           ~~~~~~~~~
    'timestamp' is declared here.

src/shared/__tests__/validators.test.ts:196:13 - error TS2741: Property 'timestamp' is missing in type '{ role: "user"; content: string; }' but required in type 'ChatMessage'.

196       const validMessage: ChatMessage = {
                ~~~~~~~~~~~~

  src/shared/types/message.ts:17:5
    17     timestamp: number;
           ~~~~~~~~~
    'timestamp' is declared here.

src/shared/__tests__/validators.test.ts:237:13 - error TS2741: Property 'timestamp' is missing in type '{ role: "user"; content: string; }' but required in type 'ChatMessage'.

237       const validMessage: ChatMessage = {
                ~~~~~~~~~~~~

  src/shared/types/message.ts:17:5
    17     timestamp: number;
           ~~~~~~~~~
    'timestamp' is declared here.

src/shared/array.test.ts:4:1 - error TS6133: 'ChatMessage' is declared but its value is never read.

4 import type { ChatMessage } from "./types.js"
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/shared/array.test.ts:4:34 - error TS2307: Cannot find module './types.js' or its corresponding type declarations.

4 import type { ChatMessage } from "./types.js"
                                   ~~~~~~~~~~~~

src/shared/array.test.ts:54:100 - error TS2554: Expected 2 arguments, but got 3.

54    for (let i = findLastIndex(array, x => x === 2); i >= 0; i = findLastIndex(array, x => x === 2, i - 1)) {
                                                                                                      ~~~~~

src/shared/array.test.ts:133:50 - error TS2554: Expected 2 arguments, but got 3.

133    const element = findLast(array, x => x === 2, 1)
                                                     ~

src/shared/array.ts:1:1 - error TS6133: 'ChatMessage' is declared but its value is never read.

1 import type { ChatMessage } from "./types.js"
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/shared/array.ts:1:34 - error TS2307: Cannot find module './types.js' or its corresponding type declarations.

1 import type { ChatMessage } from "./types.js"
                                   ~~~~~~~~~~~~

src/shared/array.ts:14:17 - error TS2345: Argument of type 'T | undefined' is not assignable to parameter of type 'T'.
  'T' could be instantiated with an arbitrary type which could be unrelated to 'T | undefined'.

14   if (predicate(array[l], l, array)) {
                   ~~~~~~~~

src/shared/ChatContent.ts:36:38 - error TS1361: 'ContentType' cannot be used as a value because it was imported using 'import type'.

36     : [normalizeContentBlock({ type: ContentType.Text, text: message.content as string })]
                                        ~~~~~~~~~~~

  src/shared/ChatContent.ts:10:15
    10 import type { ContentType } from "./types/chat.types.js";
                     ~~~~~~~~~~~
    'ContentType' was imported here.

src/shared/ChatContentHelpers.ts:16:20 - error TS1361: 'ContentType' cannot be used as a value because it was imported using 'import type'.

16     return { type: ContentType.Text, text: '' };
                      ~~~~~~~~~~~

  src/shared/ChatContentHelpers.ts:7:15
    7 import type { ContentType } from "./types/chat.types.js";
                    ~~~~~~~~~~~
    'ContentType' was imported here.

src/shared/ChatContentHelpers.ts:21:24 - error TS1361: 'ContentType' cannot be used as a value because it was imported using 'import type'.

21     if (block.type === ContentType.Text) {
                          ~~~~~~~~~~~

  src/shared/ChatContentHelpers.ts:7:15
    7 import type { ContentType } from "./types/chat.types.js";
                    ~~~~~~~~~~~
    'ContentType' was imported here.

src/shared/ChatContentHelpers.ts:23:15 - error TS1361: 'ContentType' cannot be used as a value because it was imported using 'import type'.

23         type: ContentType.Text,
                 ~~~~~~~~~~~

  src/shared/ChatContentHelpers.ts:7:15
    7 import type { ContentType } from "./types/chat.types.js";
                    ~~~~~~~~~~~
    'ContentType' was imported here.

src/shared/ChatContentHelpers.ts:26:31 - error TS1361: 'ContentType' cannot be used as a value because it was imported using 'import type'.

26     } else if (block.type === ContentType.Image) {
                                 ~~~~~~~~~~~

  src/shared/ChatContentHelpers.ts:7:15
    7 import type { ContentType } from "./types/chat.types.js";
                    ~~~~~~~~~~~
    'ContentType' was imported here.

src/shared/ChatContentHelpers.ts:28:15 - error TS1361: 'ContentType' cannot be used as a value because it was imported using 'import type'.

28         type: ContentType.Image,
                 ~~~~~~~~~~~

  src/shared/ChatContentHelpers.ts:7:15
    7 import type { ContentType } from "./types/chat.types.js";
                    ~~~~~~~~~~~
    'ContentType' was imported here.

src/shared/ChatContentHelpers.ts:38:13 - error TS1361: 'ContentType' cannot be used as a value because it was imported using 'import type'.

38       type: ContentType.Text,
               ~~~~~~~~~~~

  src/shared/ChatContentHelpers.ts:7:15
    7 import type { ContentType } from "./types/chat.types.js";
                    ~~~~~~~~~~~
    'ContentType' was imported here.

src/shared/ChatContentHelpers.ts:44:18 - error TS1361: 'ContentType' cannot be used as a value because it was imported using 'import type'.

44   return { type: ContentType.Text, text: '' };
                    ~~~~~~~~~~~

  src/shared/ChatContentHelpers.ts:7:15
    7 import type { ContentType } from "./types/chat.types.js";
                    ~~~~~~~~~~~
    'ContentType' was imported here.

src/shared/combineApiRequests.ts:2:1 - error TS6133: 'ChatMessage' is declared but its value is never read.

2 import type { ChatMessage } from "./types.js"
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/shared/combineApiRequests.ts:2:34 - error TS2307: Cannot find module './types.js' or its corresponding type declarations.

2 import type { ChatMessage } from "./types.js"
                                   ~~~~~~~~~~~~

src/shared/combineApiRequests.ts:26:7 - error TS2532: Object is possibly 'undefined'.

26   if (messages[i].type === "say" && messages[i].say === "api_req_started") {
         ~~~~~~~~~~~

src/shared/combineApiRequests.ts:26:37 - error TS2532: Object is possibly 'undefined'.

26   if (messages[i].type === "say" && messages[i].say === "api_req_started") {
                                       ~~~~~~~~~~~

src/shared/combineApiRequests.ts:27:36 - error TS2532: Object is possibly 'undefined'.

27    let startedRequest = JSON.parse(messages[i].text || "{}")
                                      ~~~~~~~~~~~

src/shared/combineApiRequests.ts:31:9 - error TS2532: Object is possibly 'undefined'.

31     if (messages[j].type === "say" && messages[j].say === "api_req_finished") {
           ~~~~~~~~~~~

src/shared/combineApiRequests.ts:31:39 - error TS2532: Object is possibly 'undefined'.

31     if (messages[j].type === "say" && messages[j].say === "api_req_finished") {
                                         ~~~~~~~~~~~

src/shared/combineApiRequests.ts:32:39 - error TS2532: Object is possibly 'undefined'.

32      let finishedRequest = JSON.parse(messages[j].text || "{}")
                                         ~~~~~~~~~~~

src/shared/combineApiRequests.ts:38:31 - error TS2379: Argument of type '{ text: string; ts?: number; type?: "ask" | "say"; ask?: JarvisAsk; say?: JarvisSay; reasoning?: string; images?: string[]; partial?: boolean; lastCheckpointHash?: string; isCheckpointCheckedOut?: boolean; conversationHistoryIndex?: number; conversationHistoryDeletedRange?: [number, number]; }' is not assignable to parameter of type 'JarvisMessage' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Property 'ts' is optional in type '{ text: string; ts?: number; type?: "ask" | "say"; ask?: JarvisAsk; say?: JarvisSay; reasoning?: string; images?: string[]; partial?: boolean; lastCheckpointHash?: string; isCheckpointCheckedOut?: boolean; conversationHistoryIndex?: number; conversationHistoryDeletedRange?: [...]; }' but required in type 'JarvisMessage'.

38      combinedApiRequests.push({
                                 ~
39       ...messages[i],
   ~~~~~~~~~~~~~~~~~~~~~
40       text: JSON.stringify(combinedRequest),
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
41      })
   ~~~~~~

src/shared/combineApiRequests.ts:51:30 - error TS2345: Argument of type 'JarvisMessage | undefined' is not assignable to parameter of type 'JarvisMessage'.
  Type 'undefined' is not assignable to type 'JarvisMessage'.

51     combinedApiRequests.push(messages[i])
                                ~~~~~~~~~~~

src/shared/combineCommandSequences.ts:2:1 - error TS6133: 'ChatMessage' is declared but its value is never read.

2 import type { ChatMessage } from "./types.js"
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/shared/combineCommandSequences.ts:2:34 - error TS2307: Cannot find module './types.js' or its corresponding type declarations.

2 import type { ChatMessage } from "./types.js"
                                   ~~~~~~~~~~~~

src/shared/combineCommandSequences.ts:29:7 - error TS2532: Object is possibly 'undefined'.

29   if (messages[i].ask === "command" || messages[i].say === "command") {
         ~~~~~~~~~~~

src/shared/combineCommandSequences.ts:29:40 - error TS2532: Object is possibly 'undefined'.

29   if (messages[i].ask === "command" || messages[i].say === "command") {
                                          ~~~~~~~~~~~

src/shared/combineCommandSequences.ts:30:23 - error TS2532: Object is possibly 'undefined'.

30    let combinedText = messages[i].text || ""
                         ~~~~~~~~~~~

src/shared/combineCommandSequences.ts:35:9 - error TS2532: Object is possibly 'undefined'.

35     if (messages[j].ask === "command" || messages[j].say === "command") {
           ~~~~~~~~~~~

src/shared/combineCommandSequences.ts:35:42 - error TS2532: Object is possibly 'undefined'.

35     if (messages[j].ask === "command" || messages[j].say === "command") {
                                            ~~~~~~~~~~~

src/shared/combineCommandSequences.ts:39:9 - error TS2532: Object is possibly 'undefined'.

39     if (messages[j].ask === "command_output" || messages[j].say === "command_output") {
           ~~~~~~~~~~~

src/shared/combineCommandSequences.ts:39:49 - error TS2532: Object is possibly 'undefined'.

39     if (messages[j].ask === "command_output" || messages[j].say === "command_output") {
                                                   ~~~~~~~~~~~

src/shared/combineCommandSequences.ts:46:21 - error TS2532: Object is possibly 'undefined'.

46      const output = messages[j].text || ""
                       ~~~~~~~~~~~

src/shared/combineCommandSequences.ts:54:26 - error TS2379: Argument of type '{ text: string; ts?: number; type?: "ask" | "say"; ask?: JarvisAsk; say?: JarvisSay; reasoning?: string; images?: string[]; partial?: boolean; lastCheckpointHash?: string; isCheckpointCheckedOut?: boolean; conversationHistoryIndex?: number; conversationHistoryDeletedRange?: [number, number]; }' is not assignable to parameter of type 'JarvisMessage' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Property 'ts' is optional in type '{ text: string; ts?: number; type?: "ask" | "say"; ask?: JarvisAsk; say?: JarvisSay; reasoning?: string; images?: string[]; partial?: boolean; lastCheckpointHash?: string; isCheckpointCheckedOut?: boolean; conversationHistoryIndex?: number; conversationHistoryDeletedRange?: [...]; }' but required in type 'JarvisMessage'.

54    combinedCommands.push({
                            ~
55     ...messages[i],
   ~~~~~~~~~~~~~~~~~~~
56     text: combinedText,
   ~~~~~~~~~~~~~~~~~~~~~~~
57    })
   ~~~~

src/shared/ExtensionMessage.ts:14:2 - error TS2459: Module '"./types/webview.types.js"' declares 'BaseMessage' locally, but it is not exported.

14  BaseMessage,
    ~~~~~~~~~~~

  src/shared/types/webview.types.ts:15:10
    15 import { BaseMessage } from './common.js';
                ~~~~~~~~~~~
    'BaseMessage' is declared here.

src/shared/ExtensionMessage.ts:30:10 - error TS1448: 'WebviewMessageType' resolves to a type-only declaration and must be re-exported using a type-only re-export when 'verbatimModuleSyntax' is enabled.

30 export { WebviewMessageType };
            ~~~~~~~~~~~~~~~~~~

  src/shared/ExtensionMessage.ts:10:2
    10  WebviewMessageType,
        ~~~~~~~~~~~~~~~~~~
    'WebviewMessageType' was imported here.

src/shared/ExtensionMessage.ts:43:15 - error TS6196: 'ApiConfiguration' is declared but never used.

43 import type { ApiConfiguration, OpenAiCompatibleModelInfo, ModelInfo } from "./types/api.types.js";
                 ~~~~~~~~~~~~~~~~

src/shared/ExtensionMessage.ts:43:33 - error TS6196: 'OpenAiCompatibleModelInfo' is declared but never used.

43 import type { ApiConfiguration, OpenAiCompatibleModelInfo, ModelInfo } from "./types/api.types.js";
                                   ~~~~~~~~~~~~~~~~~~~~~~~~~

src/shared/ExtensionMessage.ts:44:1 - error TS6133: 'AutoApprovalSettings' is declared but its value is never read.

44 import type { AutoApprovalSettings } from "./AutoApprovalSettings.js";
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/shared/ExtensionMessage.ts:45:1 - error TS6133: 'BrowserSettings' is declared but its value is never read.

45 import type { BrowserSettings } from "./BrowserSettings.js";
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/shared/ExtensionMessage.ts:46:1 - error TS6133: 'ChatSettings' is declared but its value is never read.

46 import type { ChatSettings } from "./ChatSettings.js";
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/shared/ExtensionMessage.ts:47:1 - error TS6133: 'HistoryItem' is declared but its value is never read.

47 import type { HistoryItem } from "./HistoryItem.js";
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/shared/ExtensionMessage.ts:48:49 - error TS6196: 'McpMarketplaceItem' is declared but never used.

48 import type { McpServer, McpMarketplaceCatalog, McpMarketplaceItem, McpDownloadResponse } from "./mcp.js";
                                                   ~~~~~~~~~~~~~~~~~~

src/shared/ExtensionMessage.ts:49:1 - error TS6133: 'TelemetrySetting' is declared but its value is never read.

49 import type { TelemetrySetting } from "./types.js";
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/shared/ExtensionMessage.ts:49:39 - error TS2307: Cannot find module './types.js' or its corresponding type declarations.

49 import type { TelemetrySetting } from "./types.js";
                                         ~~~~~~~~~~~~

src/shared/ExtensionMessage.ts:50:76 - error TS2307: Cannot find module './JarvisAccount.js' or its corresponding type declarations.

50 import type { BalanceResponse, UsageTransaction, PaymentTransaction } from "./JarvisAccount.js";
                                                                              ~~~~~~~~~~~~~~~~~~~~

src/shared/ExtensionMessage.ts:51:34 - error TS2307: Cannot find module './types.js' or its corresponding type declarations.

51 import type { ChatMessage } from "./types.js";
                                    ~~~~~~~~~~~~

src/shared/ExtensionMessage.ts:52:15 - error TS2459: Module '"../utils/logger.js"' declares 'LogLevel' locally, but it is not exported.

52 import type { LogLevel } from "../utils/logger.js";
                 ~~~~~~~~

  src/utils/logger.ts:1:10
    1 import { LogLevel } from "../types/global.js"
               ~~~~~~~~
    'LogLevel' is declared here.

src/shared/ExtensionMessage.ts:58:18 - error TS2300: Duplicate identifier 'ExtensionMessage'.

58 export interface ExtensionMessage {
                    ~~~~~~~~~~~~~~~~

src/shared/ExtensionMessage.ts:455:13 - error TS2300: Duplicate identifier 'ExtensionMessage'.

455 export type ExtensionMessage =
                ~~~~~~~~~~~~~~~~

src/shared/getApiMetrics.ts:1:10 - error TS1484: 'JarvisMessage' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.

1 import { JarvisMessage } from "./ExtensionMessage.js"
           ~~~~~~~~~~~~~

src/shared/HistoryItem.ts:1:1 - error TS6133: 'ChatMessage' is declared but its value is never read.

1 import type { ChatMessage } from "./types/message.js"
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/shared/mcp.ts:1:1 - error TS6133: 'ApiConfiguration' is declared but its value is never read.

1 import type { ApiConfiguration } from "./types/api.types.js"
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/shared/mcp.ts:2:1 - error TS6133: 'ChatMessage' is declared but its value is never read.

2 import type { ChatMessage } from "./types/message.js"
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/shared/protocols/convertToWebviewMessage.ts:6:10 - error TS1484: 'WebviewMessage' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.

6 import { WebviewMessage, OutgoingWebviewMessage, LegacyWebviewMessage } from './webview.protocol.js';
           ~~~~~~~~~~~~~~

src/shared/protocols/convertToWebviewMessage.ts:6:26 - error TS1484: 'OutgoingWebviewMessage' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.

6 import { WebviewMessage, OutgoingWebviewMessage, LegacyWebviewMessage } from './webview.protocol.js';
                           ~~~~~~~~~~~~~~~~~~~~~~

src/shared/protocols/convertToWebviewMessage.ts:6:26 - error TS6133: 'OutgoingWebviewMessage' is declared but its value is never read.

6 import { WebviewMessage, OutgoingWebviewMessage, LegacyWebviewMessage } from './webview.protocol.js';
                           ~~~~~~~~~~~~~~~~~~~~~~

src/shared/protocols/convertToWebviewMessage.ts:6:50 - error TS1484: 'LegacyWebviewMessage' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.

6 import { WebviewMessage, OutgoingWebviewMessage, LegacyWebviewMessage } from './webview.protocol.js';
                                                   ~~~~~~~~~~~~~~~~~~~~

src/shared/protocols/convertToWebviewMessage.ts:6:50 - error TS6133: 'LegacyWebviewMessage' is declared but its value is never read.

6 import { WebviewMessage, OutgoingWebviewMessage, LegacyWebviewMessage } from './webview.protocol.js';
                                                   ~~~~~~~~~~~~~~~~~~~~

src/shared/protocols/convertToWebviewMessage.ts:7:1 - error TS6133: 'validateWebviewMessage' is declared but its value is never read.

7 import { validateWebviewMessage } from './validateWebviewMessage.test.js';
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/shared/protocols/convertToWebviewMessage.ts:81:29 - error TS4111: Property 'apiConfiguration' comes from an index signature, so it must be accessed with ['apiConfiguration'].

81     if (legacyMessage.state.apiConfiguration) {
                               ~~~~~~~~~~~~~~~~

src/shared/protocols/convertToWebviewMessage.ts:83:67 - error TS4111: Property 'apiConfiguration' comes from an index signature, so it must be accessed with ['apiConfiguration'].

83         newMessage.payload.apiConfiguration = legacyMessage.state.apiConfiguration;
                                                                     ~~~~~~~~~~~~~~~~

src/shared/protocols/convertToWebviewMessage.ts:106:34 - error TS4111: Property 'key' comes from an index signature, so it must be accessed with ['key'].

106   newMessage.key = legacyMessage.key;
                                     ~~~

src/shared/protocols/convertToWebviewMessage.ts:107:36 - error TS4111: Property 'value' comes from an index signature, so it must be accessed with ['value'].

107   newMessage.value = legacyMessage.value;
                                       ~~~~~

src/shared/protocols/convertToWebviewMessage.ts:108:38 - error TS4111: Property 'content' comes from an index signature, so it must be accessed with ['content'].

108   newMessage.content = legacyMessage.content;
                                         ~~~~~~~

src/shared/protocols/convertToWebviewMessage.ts:109:39 - error TS4111: Property 'settings' comes from an index signature, so it must be accessed with ['settings'].

109   newMessage.settings = legacyMessage.settings;
                                          ~~~~~~~~

src/shared/protocols/convertToWebviewMessage.ts:110:35 - error TS4111: Property 'text' comes from an index signature, so it must be accessed with ['text'].

110   newMessage.text = legacyMessage.text;
                                      ~~~~

src/shared/protocols/validateWebviewMessage.test.ts:7:3 - error TS1484: 'WebviewMessage' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.

7   WebviewMessage,
    ~~~~~~~~~~~~~~

src/shared/protocols/validateWebviewMessage.test.ts:8:3 - error TS1484: 'BaseWebviewMessage' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.

8   BaseWebviewMessage,
    ~~~~~~~~~~~~~~~~~~

src/shared/protocols/validateWebviewMessage.test.ts:9:3 - error TS1484: 'IncomingWebviewMessage' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.

9   IncomingWebviewMessage,
    ~~~~~~~~~~~~~~~~~~~~~~

src/shared/protocols/validateWebviewMessage.test.ts:10:3 - error TS1484: 'OutgoingWebviewMessage' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.

10   OutgoingWebviewMessage
     ~~~~~~~~~~~~~~~~~~~~~~

src/shared/protocols/validateWebviewMessage.test.ts:24:18 - error TS4111: Property 'type' comes from an index signature, so it must be accessed with ['type'].

24   if (typeof msg.type !== 'string' || msg.type.trim() === '') {
                    ~~~~

src/shared/protocols/validateWebviewMessage.test.ts:24:43 - error TS4111: Property 'type' comes from an index signature, so it must be accessed with ['type'].

24   if (typeof msg.type !== 'string' || msg.type.trim() === '') {
                                             ~~~~

src/shared/protocols/validateWebviewMessage.test.ts:29:11 - error TS4111: Property 'payload' comes from an index signature, so it must be accessed with ['payload'].

29   if (msg.payload !== undefined && typeof msg.payload !== 'object') {
             ~~~~~~~

src/shared/protocols/validateWebviewMessage.test.ts:29:47 - error TS4111: Property 'payload' comes from an index signature, so it must be accessed with ['payload'].

29   if (msg.payload !== undefined && typeof msg.payload !== 'object') {
                                                 ~~~~~~~

src/shared/protocols/validateWebviewMessage.test.ts:34:11 - error TS4111: Property 'source' comes from an index signature, so it must be accessed with ['source'].

34   if (msg.source !== undefined &&
             ~~~~~~

src/shared/protocols/validateWebviewMessage.test.ts:35:11 - error TS4111: Property 'source' comes from an index signature, so it must be accessed with ['source'].

35       msg.source !== 'extension' &&
             ~~~~~~

src/shared/protocols/validateWebviewMessage.test.ts:36:11 - error TS4111: Property 'source' comes from an index signature, so it must be accessed with ['source'].

36       msg.source !== 'webview') {
             ~~~~~~

src/shared/protocols/validateWebviewMessage.test.ts:41:11 - error TS4111: Property 'requestId' comes from an index signature, so it must be accessed with ['requestId'].

41   if (msg.requestId !== undefined && typeof msg.requestId !== 'string') {
             ~~~~~~~~~

src/shared/protocols/validateWebviewMessage.test.ts:41:49 - error TS4111: Property 'requestId' comes from an index signature, so it must be accessed with ['requestId'].

41   if (msg.requestId !== undefined && typeof msg.requestId !== 'string') {
                                                   ~~~~~~~~~

src/shared/protocols/validateWebviewMessage.test.ts:46:11 - error TS4111: Property 'error' comes from an index signature, so it must be accessed with ['error'].

46   if (msg.error !== undefined && typeof msg.error !== 'string') {
             ~~~~~

src/shared/protocols/validateWebviewMessage.test.ts:46:45 - error TS4111: Property 'error' comes from an index signature, so it must be accessed with ['error'].

46   if (msg.error !== undefined && typeof msg.error !== 'string') {
                                               ~~~~~

src/shared/settings.ts:1:1 - error TS6133: 'ApiConfiguration' is declared but its value is never read.

1 import type { ApiConfiguration } from "./types/api.types.js"
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/shared/settings.ts:2:1 - error TS6133: 'TelemetrySetting' is declared but its value is never read.

2 import type { TelemetrySetting } from './types.js';
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/shared/settings.ts:2:39 - error TS2307: Cannot find module './types.js' or its corresponding type declarations.

2 import type { TelemetrySetting } from './types.js';
                                        ~~~~~~~~~~~~

src/shared/settings.ts:6:1 - error TS6133: 'LLMProviderId' is declared but its value is never read.

6 import { LLMProviderId } from '../types/global.js';
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/shared/settings.ts:6:10 - error TS1484: 'LLMProviderId' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.

6 import { LLMProviderId } from '../types/global.js';
           ~~~~~~~~~~~~~

src/shared/settings.ts:15:33 - error TS2532: Object is possibly 'undefined'.

15     const configDir = path.join(vscode.workspace.workspaceFolders?.[0].uri.fsPath || '', 'config');
                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/shared/settings.ts:72:7 - error TS2353: Object literal may only specify known properties, and 'provider' does not exist in type 'Settings'.

72       provider: 'openai',
         ~~~~~~~~

src/shared/settings.ts:143:28 - error TS2532: Object is possibly 'undefined'.

143           return path.join(vscode.workspace.workspaceFolders?.[0].uri.fsPath || '', settings.systemPromptPath);
                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/shared/TelemetrySetting.ts:22:5 - error TS2375: Type '{ enabled: boolean; apiKey: undefined; }' is not assignable to type '{ enabled: boolean; apiKey?: string; }' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'apiKey' are incompatible.
    Type 'undefined' is not assignable to type 'string'.

22     return {
       ~~~~~~

src/shared/typeGuards.ts:5:10 - error TS1484: 'WebviewMessage' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.

5 import { WebviewMessage } from './WebviewMessage.js';
           ~~~~~~~~~~~~~~

src/shared/typeGuards.ts:6:10 - error TS1484: 'ExtensionMessage' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.

6 import { ExtensionMessage } from './ExtensionMessage.js';
           ~~~~~~~~~~~~~~~~

src/shared/typeGuards.ts:20:24 - error TS4111: Property 'type' comes from an index signature, so it must be accessed with ['type'].

20   if (typeof candidate.type !== 'string') {
                          ~~~~

src/shared/typeGuards.ts:32:40 - error TS4111: Property 'type' comes from an index signature, so it must be accessed with ['type'].

32   return validTypes.includes(candidate.type);
                                          ~~~~

src/shared/typeGuards.ts:47:24 - error TS4111: Property 'type' comes from an index signature, so it must be accessed with ['type'].

47   if (typeof candidate.type !== 'string') {
                          ~~~~

src/shared/typeGuards.ts:59:40 - error TS4111: Property 'type' comes from an index signature, so it must be accessed with ['type'].

59   return validTypes.includes(candidate.type);
                                          ~~~~

src/shared/types/api.types.ts:8:1 - error TS6133: 'LLMTypes' is declared but its value is never read.

8 import * as LLMTypes from './llm.types.js';
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/shared/types/api.types.ts:10:10 - error TS1484: 'ChatCompletionContentPart' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.

10 import { ChatCompletionContentPart, ChatCompletionContentPartText, ChatCompletionContentPartImage } from './llm.types.js';
            ~~~~~~~~~~~~~~~~~~~~~~~~~

src/shared/types/api.types.ts:10:10 - error TS6133: 'ChatCompletionContentPart' is declared but its value is never read.

10 import { ChatCompletionContentPart, ChatCompletionContentPartText, ChatCompletionContentPartImage } from './llm.types.js';
            ~~~~~~~~~~~~~~~~~~~~~~~~~

src/shared/types/api.types.ts:10:37 - error TS1484: 'ChatCompletionContentPartText' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.

10 import { ChatCompletionContentPart, ChatCompletionContentPartText, ChatCompletionContentPartImage } from './llm.types.js';
                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/shared/types/api.types.ts:10:68 - error TS1484: 'ChatCompletionContentPartImage' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.

10 import { ChatCompletionContentPart, ChatCompletionContentPartText, ChatCompletionContentPartImage } from './llm.types.js';
                                                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/shared/types/api.types.ts:14:10 - error TS1205: Re-exporting a type when 'verbatimModuleSyntax' is enabled requires using 'export type'.

14 export { TelemetrySetting };
            ~~~~~~~~~~~~~~~~

src/shared/types/convertToWebviewMessage.test.ts:6:35 - error TS1484: 'ExtensionMessage' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.

6 import { convertToWebviewMessage, ExtensionMessage, WebviewMessage } from './webview.types.js';
                                    ~~~~~~~~~~~~~~~~

src/shared/types/convertToWebviewMessage.test.ts:6:53 - error TS1484: 'WebviewMessage' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.

6 import { convertToWebviewMessage, ExtensionMessage, WebviewMessage } from './webview.types.js';
                                                      ~~~~~~~~~~~~~~

src/shared/types/convertToWebviewMessage.test.ts:6:53 - error TS6133: 'WebviewMessage' is declared but its value is never read.

6 import { convertToWebviewMessage, ExtensionMessage, WebviewMessage } from './webview.types.js';
                                                      ~~~~~~~~~~~~~~

src/shared/types/convertToWebviewMessage.test.ts:63:29 - error TS4111: Property 'error' comes from an index signature, so it must be accessed with ['error'].

63     expect(result?.payload?.error).toBe(msg.error);
                               ~~~~~

src/shared/types/global.ts:8:1 - error TS6133: 'ChatMessage' is declared but its value is never read.

8 import type { ChatMessage } from "./message.types.js"
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/shared/types/global.ts:9:15 - error TS2305: Module '"./message.types.js"' has no exported member 'BaseMessage'.

9 import type { BaseMessage } from "./message.types.js"
                ~~~~~~~~~~~

src/shared/types/index.ts:5:10 - error TS1205: Re-exporting a type when 'verbatimModuleSyntax' is enabled requires using 'export type'.

5 export { ChatMessage, BaseMessage, MessageRole, WebviewMessage } from './message.js';
           ~~~~~~~~~~~

src/shared/types/index.ts:5:23 - error TS1205: Re-exporting a type when 'verbatimModuleSyntax' is enabled requires using 'export type'.

5 export { ChatMessage, BaseMessage, MessageRole, WebviewMessage } from './message.js';
                        ~~~~~~~~~~~

src/shared/types/index.ts:5:36 - error TS1205: Re-exporting a type when 'verbatimModuleSyntax' is enabled requires using 'export type'.

5 export { ChatMessage, BaseMessage, MessageRole, WebviewMessage } from './message.js';
                                     ~~~~~~~~~~~

src/shared/types/index.ts:5:49 - error TS1205: Re-exporting a type when 'verbatimModuleSyntax' is enabled requires using 'export type'.

5 export { ChatMessage, BaseMessage, MessageRole, WebviewMessage } from './message.js';
                                                  ~~~~~~~~~~~~~~

src/shared/types/message.types.ts:70:23 - error TS1361: 'ContentType' cannot be used as a value because it was imported using 'import type'.

70                 type: ContentType.Text,
                         ~~~~~~~~~~~

  src/shared/types/message.types.ts:7:29
    7 import type { ContentBlock, ContentType } from './chat.types.js';
                                  ~~~~~~~~~~~
    'ContentType' was imported here.

src/shared/types/provider.types.ts:4:33 - error TS6196: 'OpenAiCompatibleModelInfo' is declared but never used.

4 import type { ApiConfiguration, OpenAiCompatibleModelInfo, LLMProviderId } from "./api.types.js";
                                  ~~~~~~~~~~~~~~~~~~~~~~~~~

src/shared/types/provider.types.ts:4:60 - error TS6196: 'LLMProviderId' is declared but never used.

4 import type { ApiConfiguration, OpenAiCompatibleModelInfo, LLMProviderId } from "./api.types.js";
                                                             ~~~~~~~~~~~~~

src/shared/types/provider.types.ts:5:43 - error TS6196: 'TaskQueueState' is declared but never used.

5 import type { AgentStatus, PriorityLevel, TaskQueueState } from "./mas.types.js";
                                            ~~~~~~~~~~~~~~

src/shared/types/provider.types.ts:6:1 - error TS6133: 'ChatContent' is declared but its value is never read.

6 import { ChatContent } from "../ChatContent.js";
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/shared/types/provider.types.ts:6:10 - error TS1484: 'ChatContent' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.

6 import { ChatContent } from "../ChatContent.js";
           ~~~~~~~~~~~

src/shared/types/provider.types.ts:7:10 - error TS1484: 'WebviewMessage' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.

7 import { WebviewMessage } from "./webview.types.js";
           ~~~~~~~~~~~~~~

src/shared/types/session.ts:6:10 - error TS1484: 'ChatMessage' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.

6 import { ChatMessage } from './index.js';
           ~~~~~~~~~~~

src/shared/types/session.ts:7:15 - error TS2724: '"./settings.types.js"' has no exported member named 'ChatSettings'. Did you mean 'Settings'?

7 import type { ChatSettings } from './settings.types.js';
                ~~~~~~~~~~~~

src/shared/types/session.ts:61:3 - error TS2375: Type '{ id: string; title: string; createdAt: number; messages: ChatMessage[]; settings: any; systemPrompt: string | undefined; contextFiles: string[] | undefined; modelId: string | undefined; updatedAt: number; }' is not assignable to type 'ChatSession' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'systemPrompt' are incompatible.
    Type 'string | undefined' is not assignable to type 'string'.
      Type 'undefined' is not assignable to type 'string'.

61   return {
     ~~~~~~

src/shared/types/telemetry.types.ts:23:5 - error TS2375: Type '{ enabled: boolean; apiKey: undefined; }' is not assignable to type '{ enabled: boolean; apiKey?: string; }' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'apiKey' are incompatible.
    Type 'undefined' is not assignable to type 'string'.

23     return {
       ~~~~~~

src/shared/types/webview.ts:6:10 - error TS1484: 'WebviewMessage' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.

6 import { WebviewMessage as GenericWebviewMessage } from '../types/webview.types.js';
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/shared/types/webview.ts:9:61 - error TS2344: Type 'T' does not satisfy the constraint 'Record<string, unknown>'.

9 export type WebviewMessage<T = any> = GenericWebviewMessage<T>;
                                                              ~

  src/shared/types/webview.ts:9:28
    9 export type WebviewMessage<T = any> = GenericWebviewMessage<T>;
                                 ~~~~~~~
    This type parameter might need an `extends Record<string, unknown>` constraint.

src/shared/types/webview.ts:11:38 - error TS2307: Cannot find module '../types/webview.types' or its corresponding type declarations.

11 export type WebviewSettings = import('../types/webview.types').WebviewSettings;
                                        ~~~~~~~~~~~~~~~~~~~~~~~~

src/shared/types/webview.types.test.ts:24:14 - error TS1361: 'isExtensionMessage' cannot be used as a value because it was imported using 'import type'.

24       expect(isExtensionMessage(message)).toBe(true);
                ~~~~~~~~~~~~~~~~~~

  src/shared/types/webview.types.test.ts:8:3
    8   isExtensionMessage,
        ~~~~~~~~~~~~~~~~~~
    'isExtensionMessage' was imported here.

src/shared/types/webview.types.test.ts:28:14 - error TS1361: 'isExtensionMessage' cannot be used as a value because it was imported using 'import type'.

28       expect(isExtensionMessage(null)).toBe(false);
                ~~~~~~~~~~~~~~~~~~

  src/shared/types/webview.types.test.ts:8:3
    8   isExtensionMessage,
        ~~~~~~~~~~~~~~~~~~
    'isExtensionMessage' was imported here.

src/shared/types/webview.types.test.ts:28:33 - error TS2345: Argument of type 'null' is not assignable to parameter of type 'Message'.

28       expect(isExtensionMessage(null)).toBe(false);
                                   ~~~~

src/shared/types/webview.types.test.ts:29:14 - error TS1361: 'isExtensionMessage' cannot be used as a value because it was imported using 'import type'.

29       expect(isExtensionMessage(undefined)).toBe(false);
                ~~~~~~~~~~~~~~~~~~

  src/shared/types/webview.types.test.ts:8:3
    8   isExtensionMessage,
        ~~~~~~~~~~~~~~~~~~
    'isExtensionMessage' was imported here.

src/shared/types/webview.types.test.ts:29:33 - error TS2345: Argument of type 'undefined' is not assignable to parameter of type 'Message'.

29       expect(isExtensionMessage(undefined)).toBe(false);
                                   ~~~~~~~~~

src/shared/types/webview.types.test.ts:30:14 - error TS1361: 'isExtensionMessage' cannot be used as a value because it was imported using 'import type'.

30       expect(isExtensionMessage(42)).toBe(false);
                ~~~~~~~~~~~~~~~~~~

  src/shared/types/webview.types.test.ts:8:3
    8   isExtensionMessage,
        ~~~~~~~~~~~~~~~~~~
    'isExtensionMessage' was imported here.

src/shared/types/webview.types.test.ts:30:33 - error TS2345: Argument of type 'number' is not assignable to parameter of type 'Message'.

30       expect(isExtensionMessage(42)).toBe(false);
                                   ~~

src/shared/types/webview.types.test.ts:31:14 - error TS1361: 'isExtensionMessage' cannot be used as a value because it was imported using 'import type'.

31       expect(isExtensionMessage('string')).toBe(false);
                ~~~~~~~~~~~~~~~~~~

  src/shared/types/webview.types.test.ts:8:3
    8   isExtensionMessage,
        ~~~~~~~~~~~~~~~~~~
    'isExtensionMessage' was imported here.

src/shared/types/webview.types.test.ts:31:33 - error TS2345: Argument of type 'string' is not assignable to parameter of type 'Message'.

31       expect(isExtensionMessage('string')).toBe(false);
                                   ~~~~~~~~

src/shared/types/webview.types.test.ts:32:14 - error TS1361: 'isExtensionMessage' cannot be used as a value because it was imported using 'import type'.

32       expect(isExtensionMessage({})).toBe(false);
                ~~~~~~~~~~~~~~~~~~

  src/shared/types/webview.types.test.ts:8:3
    8   isExtensionMessage,
        ~~~~~~~~~~~~~~~~~~
    'isExtensionMessage' was imported here.

src/shared/types/webview.types.test.ts:32:33 - error TS2345: Argument of type '{}' is not assignable to parameter of type 'Message'.

32       expect(isExtensionMessage({})).toBe(false);
                                   ~~

src/shared/types/webview.types.test.ts:33:14 - error TS1361: 'isExtensionMessage' cannot be used as a value because it was imported using 'import type'.

33       expect(isExtensionMessage({ payload: {} })).toBe(false);
                ~~~~~~~~~~~~~~~~~~

  src/shared/types/webview.types.test.ts:8:3
    8   isExtensionMessage,
        ~~~~~~~~~~~~~~~~~~
    'isExtensionMessage' was imported here.

src/shared/types/webview.types.test.ts:33:33 - error TS2345: Argument of type '{ payload: {}; }' is not assignable to parameter of type 'Message'.
  Property 'type' is missing in type '{ payload: {}; }' but required in type 'WebviewMessage<any>'.

33       expect(isExtensionMessage({ payload: {} })).toBe(false);
                                   ~~~~~~~~~~~~~~~

  src/shared/types/webview.types.ts:114:3
    114   type: WebviewMessageType | string;
          ~~~~
    'type' is declared here.

src/shared/types/webview.types.test.ts:44:14 - error TS1361: 'isWebviewMessage' cannot be used as a value because it was imported using 'import type'.

44       expect(isWebviewMessage(message)).toBe(true);
                ~~~~~~~~~~~~~~~~

  src/shared/types/webview.types.test.ts:9:3
    9   isWebviewMessage,
        ~~~~~~~~~~~~~~~~
    'isWebviewMessage' was imported here.

src/shared/types/webview.types.test.ts:49:15 - error TS1361: 'WebviewMessageType' cannot be used as a value because it was imported using 'import type'.

49         type: WebviewMessageType.ACTION,
                 ~~~~~~~~~~~~~~~~~~

  src/shared/types/webview.types.test.ts:11:3
    11   WebviewMessageType,
         ~~~~~~~~~~~~~~~~~~
    'WebviewMessageType' was imported here.

src/shared/types/webview.types.test.ts:53:14 - error TS1361: 'isWebviewMessage' cannot be used as a value because it was imported using 'import type'.

53       expect(isWebviewMessage(message)).toBe(true);
                ~~~~~~~~~~~~~~~~

  src/shared/types/webview.types.test.ts:9:3
    9   isWebviewMessage,
        ~~~~~~~~~~~~~~~~
    'isWebviewMessage' was imported here.

src/shared/types/webview.types.test.ts:57:14 - error TS1361: 'isWebviewMessage' cannot be used as a value because it was imported using 'import type'.

57       expect(isWebviewMessage(null)).toBe(false);
                ~~~~~~~~~~~~~~~~

  src/shared/types/webview.types.test.ts:9:3
    9   isWebviewMessage,
        ~~~~~~~~~~~~~~~~
    'isWebviewMessage' was imported here.

src/shared/types/webview.types.test.ts:57:31 - error TS2345: Argument of type 'null' is not assignable to parameter of type 'Message'.

57       expect(isWebviewMessage(null)).toBe(false);
                                 ~~~~

src/shared/types/webview.types.test.ts:58:14 - error TS1361: 'isWebviewMessage' cannot be used as a value because it was imported using 'import type'.

58       expect(isWebviewMessage(undefined)).toBe(false);
                ~~~~~~~~~~~~~~~~

  src/shared/types/webview.types.test.ts:9:3
    9   isWebviewMessage,
        ~~~~~~~~~~~~~~~~
    'isWebviewMessage' was imported here.

src/shared/types/webview.types.test.ts:58:31 - error TS2345: Argument of type 'undefined' is not assignable to parameter of type 'Message'.

58       expect(isWebviewMessage(undefined)).toBe(false);
                                 ~~~~~~~~~

src/shared/types/webview.types.test.ts:59:14 - error TS1361: 'isWebviewMessage' cannot be used as a value because it was imported using 'import type'.

59       expect(isWebviewMessage(42)).toBe(false);
                ~~~~~~~~~~~~~~~~

  src/shared/types/webview.types.test.ts:9:3
    9   isWebviewMessage,
        ~~~~~~~~~~~~~~~~
    'isWebviewMessage' was imported here.

src/shared/types/webview.types.test.ts:59:31 - error TS2345: Argument of type 'number' is not assignable to parameter of type 'Message'.

59       expect(isWebviewMessage(42)).toBe(false);
                                 ~~

src/shared/types/webview.types.test.ts:60:14 - error TS1361: 'isWebviewMessage' cannot be used as a value because it was imported using 'import type'.

60       expect(isWebviewMessage('string')).toBe(false);
                ~~~~~~~~~~~~~~~~

  src/shared/types/webview.types.test.ts:9:3
    9   isWebviewMessage,
        ~~~~~~~~~~~~~~~~
    'isWebviewMessage' was imported here.

src/shared/types/webview.types.test.ts:60:31 - error TS2345: Argument of type 'string' is not assignable to parameter of type 'Message'.

60       expect(isWebviewMessage('string')).toBe(false);
                                 ~~~~~~~~

src/shared/types/webview.types.test.ts:61:14 - error TS1361: 'isWebviewMessage' cannot be used as a value because it was imported using 'import type'.

61       expect(isWebviewMessage({})).toBe(false);
                ~~~~~~~~~~~~~~~~

  src/shared/types/webview.types.test.ts:9:3
    9   isWebviewMessage,
        ~~~~~~~~~~~~~~~~
    'isWebviewMessage' was imported here.

src/shared/types/webview.types.test.ts:61:31 - error TS2345: Argument of type '{}' is not assignable to parameter of type 'Message'.

61       expect(isWebviewMessage({})).toBe(false);
                                 ~~

src/shared/types/webview.types.test.ts:62:14 - error TS1361: 'isWebviewMessage' cannot be used as a value because it was imported using 'import type'.

62       expect(isWebviewMessage({ payload: {} })).toBe(false);
                ~~~~~~~~~~~~~~~~

  src/shared/types/webview.types.test.ts:9:3
    9   isWebviewMessage,
        ~~~~~~~~~~~~~~~~
    'isWebviewMessage' was imported here.

src/shared/types/webview.types.test.ts:62:31 - error TS2345: Argument of type '{ payload: {}; }' is not assignable to parameter of type 'Message'.
  Property 'type' is missing in type '{ payload: {}; }' but required in type 'WebviewMessage<any>'.

62       expect(isWebviewMessage({ payload: {} })).toBe(false);
                                 ~~~~~~~~~~~~~~~

  src/shared/types/webview.types.ts:114:3
    114   type: WebviewMessageType | string;
          ~~~~
    'type' is declared here.

src/shared/types/webview.types.test.ts:74:22 - error TS1361: 'convertToWebviewMessage' cannot be used as a value because it was imported using 'import type'.

74       const result = convertToWebviewMessage(input);
                        ~~~~~~~~~~~~~~~~~~~~~~~

  src/shared/types/webview.types.test.ts:10:3
    10   convertToWebviewMessage,
         ~~~~~~~~~~~~~~~~~~~~~~~
    'convertToWebviewMessage' was imported here.

src/shared/types/webview.types.test.ts:88:22 - error TS1361: 'convertToWebviewMessage' cannot be used as a value because it was imported using 'import type'.

88       const result = convertToWebviewMessage(input);
                        ~~~~~~~~~~~~~~~~~~~~~~~

  src/shared/types/webview.types.test.ts:10:3
    10   convertToWebviewMessage,
         ~~~~~~~~~~~~~~~~~~~~~~~
    'convertToWebviewMessage' was imported here.

src/shared/types/webview.types.test.ts:104:22 - error TS1361: 'convertToWebviewMessage' cannot be used as a value because it was imported using 'import type'.

104       const result = convertToWebviewMessage(input);
                         ~~~~~~~~~~~~~~~~~~~~~~~

  src/shared/types/webview.types.test.ts:10:3
    10   convertToWebviewMessage,
         ~~~~~~~~~~~~~~~~~~~~~~~
    'convertToWebviewMessage' was imported here.

src/shared/types/webview.types.test.ts:123:22 - error TS1361: 'convertToWebviewMessage' cannot be used as a value because it was imported using 'import type'.

123       const result = convertToWebviewMessage(input);
                         ~~~~~~~~~~~~~~~~~~~~~~~

  src/shared/types/webview.types.test.ts:10:3
    10   convertToWebviewMessage,
         ~~~~~~~~~~~~~~~~~~~~~~~
    'convertToWebviewMessage' was imported here.

src/shared/types/webview.types.test.ts:132:14 - error TS1361: 'convertToWebviewMessage' cannot be used as a value because it was imported using 'import type'.

132       expect(convertToWebviewMessage(null as any)).toBeNull();
                 ~~~~~~~~~~~~~~~~~~~~~~~

  src/shared/types/webview.types.test.ts:10:3
    10   convertToWebviewMessage,
         ~~~~~~~~~~~~~~~~~~~~~~~
    'convertToWebviewMessage' was imported here.

src/shared/types/webview.types.test.ts:133:14 - error TS1361: 'convertToWebviewMessage' cannot be used as a value because it was imported using 'import type'.

133       expect(convertToWebviewMessage(undefined as any)).toBeNull();
                 ~~~~~~~~~~~~~~~~~~~~~~~

  src/shared/types/webview.types.test.ts:10:3
    10   convertToWebviewMessage,
         ~~~~~~~~~~~~~~~~~~~~~~~
    'convertToWebviewMessage' was imported here.

src/shared/types/webview.types.test.ts:134:14 - error TS1361: 'convertToWebviewMessage' cannot be used as a value because it was imported using 'import type'.

134       expect(convertToWebviewMessage({} as any)).toBeNull();
                 ~~~~~~~~~~~~~~~~~~~~~~~

  src/shared/types/webview.types.test.ts:10:3
    10   convertToWebviewMessage,
         ~~~~~~~~~~~~~~~~~~~~~~~
    'convertToWebviewMessage' was imported here.

src/shared/types/webview.types.test.ts:135:14 - error TS1361: 'convertToWebviewMessage' cannot be used as a value because it was imported using 'import type'.

135       expect(convertToWebviewMessage({ payload: {} } as any)).toBeNull();
                 ~~~~~~~~~~~~~~~~~~~~~~~

  src/shared/types/webview.types.test.ts:10:3
    10   convertToWebviewMessage,
         ~~~~~~~~~~~~~~~~~~~~~~~
    'convertToWebviewMessage' was imported here.

src/shared/types/webview.types.ts:8:33 - error TS6196: 'OpenAiCompatibleModelInfo' is declared but never used.

8 import type { ApiConfiguration, OpenAiCompatibleModelInfo, ModelInfo } from './api.types.js';
                                  ~~~~~~~~~~~~~~~~~~~~~~~~~

src/shared/types/webview.types.ts:8:60 - error TS6196: 'ModelInfo' is declared but never used.

8 import type { ApiConfiguration, OpenAiCompatibleModelInfo, ModelInfo } from './api.types.js';
                                                             ~~~~~~~~~

src/shared/types/webview.types.ts:9:10 - error TS1484: 'TelemetrySetting' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.

9 import { TelemetrySetting } from './telemetry.types.js';
           ~~~~~~~~~~~~~~~~

src/shared/types/webview.types.ts:10:1 - error TS6192: All imports in import declaration are unused.

10 import type { BrowserSettings, ChatSettings, AutoApprovalSettings } from './user-settings.types.js';
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/shared/types/webview.types.ts:11:1 - error TS6192: All imports in import declaration are unused.

11 import type { Task, AgentStatus, TaskQueueState } from './mas.types.js';
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/shared/types/webview.types.ts:12:1 - error TS6133: 'ChatContent' is declared but its value is never read.

12 import { ChatContent } from '../ChatContent.js';
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/shared/types/webview.types.ts:12:10 - error TS1484: 'ChatContent' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.

12 import { ChatContent } from '../ChatContent.js';
            ~~~~~~~~~~~

src/shared/types/webview.types.ts:13:1 - error TS6133: 'Platform' is declared but its value is never read.

13 import { Platform } from '../Platform.js';
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/shared/types/webview.types.ts:13:10 - error TS1484: 'Platform' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.

13 import { Platform } from '../Platform.js';
            ~~~~~~~~

src/shared/types/webview.types.ts:14:1 - error TS6133: 'HistoryItem' is declared but its value is never read.

14 import { HistoryItem } from '../HistoryItem.js';
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/shared/types/webview.types.ts:14:10 - error TS1484: 'HistoryItem' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.

14 import { HistoryItem } from '../HistoryItem.js';
            ~~~~~~~~~~~

src/shared/types/webview.types.ts:15:10 - error TS1484: 'BaseMessage' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.

15 import { BaseMessage } from './common.js';
            ~~~~~~~~~~~

src/shared/types/webview.types.ts:320:11 - error TS2375: Type '{ type: string; payload: Record<string, unknown>; id: undefined; }' is not assignable to type 'Partial<WebviewMessage<Record<string, unknown>>>' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'id' are incompatible.
    Type 'undefined' is not assignable to type 'string'.

320     const baseMessage: Partial<WebviewMessage<Record<string, unknown>>> = {
              ~~~~~~~~~~~

src/shared/types/webviewMessageUnion.test.ts:24:15 - error TS1361: 'WebviewMessageType' cannot be used as a value because it was imported using 'import type'.

24         type: WebviewMessageType.SEND_PROMPT,
                 ~~~~~~~~~~~~~~~~~~

  src/shared/types/webviewMessageUnion.test.ts:7:15
    7 import type { WebviewMessageType, ActionType } from './webview.types.js';
                    ~~~~~~~~~~~~~~~~~~
    'WebviewMessageType' was imported here.

src/shared/types/webviewMessageUnion.test.ts:28:14 - error TS1361: 'isSendPromptMessage' cannot be used as a value because it was imported using 'import type'.

28       expect(isSendPromptMessage(message)).toBe(true);
                ~~~~~~~~~~~~~~~~~~~

  src/shared/types/webviewMessageUnion.test.ts:9:3
    9   isSendPromptMessage,
        ~~~~~~~~~~~~~~~~~~~
    'isSendPromptMessage' was imported here.

src/shared/types/webviewMessageUnion.test.ts:37:14 - error TS1361: 'isSendPromptMessage' cannot be used as a value because it was imported using 'import type'.

37       expect(isSendPromptMessage(message)).toBe(false);
                ~~~~~~~~~~~~~~~~~~~

  src/shared/types/webviewMessageUnion.test.ts:9:3
    9   isSendPromptMessage,
        ~~~~~~~~~~~~~~~~~~~
    'isSendPromptMessage' was imported here.

src/shared/types/webviewMessageUnion.test.ts:48:14 - error TS1361: 'isActionMessage' cannot be used as a value because it was imported using 'import type'.

48       expect(isActionMessage(message)).toBe(true);
                ~~~~~~~~~~~~~~~

  src/shared/types/webviewMessageUnion.test.ts:10:3
    10   isActionMessage,
         ~~~~~~~~~~~~~~~
    'isActionMessage' was imported here.

src/shared/types/webviewMessageUnion.test.ts:53:15 - error TS1361: 'WebviewMessageType' cannot be used as a value because it was imported using 'import type'.

53         type: WebviewMessageType.SEND_PROMPT
                 ~~~~~~~~~~~~~~~~~~

  src/shared/types/webviewMessageUnion.test.ts:7:15
    7 import type { WebviewMessageType, ActionType } from './webview.types.js';
                    ~~~~~~~~~~~~~~~~~~
    'WebviewMessageType' was imported here.

src/shared/types/webviewMessageUnion.test.ts:56:14 - error TS1361: 'isActionMessage' cannot be used as a value because it was imported using 'import type'.

56       expect(isActionMessage(message)).toBe(false);
                ~~~~~~~~~~~~~~~

  src/shared/types/webviewMessageUnion.test.ts:10:3
    10   isActionMessage,
         ~~~~~~~~~~~~~~~
    'isActionMessage' was imported here.

src/shared/types/webviewMessageUnion.test.ts:67:14 - error TS1361: 'isErrorMessage' cannot be used as a value because it was imported using 'import type'.

67       expect(isErrorMessage(message)).toBe(true);
                ~~~~~~~~~~~~~~

  src/shared/types/webviewMessageUnion.test.ts:11:3
    11   isErrorMessage,
         ~~~~~~~~~~~~~~
    'isErrorMessage' was imported here.

src/shared/types/webviewMessageUnion.test.ts:75:14 - error TS1361: 'isErrorMessage' cannot be used as a value because it was imported using 'import type'.

75       expect(isErrorMessage(message)).toBe(false);
                ~~~~~~~~~~~~~~

  src/shared/types/webviewMessageUnion.test.ts:11:3
    11   isErrorMessage,
         ~~~~~~~~~~~~~~
    'isErrorMessage' was imported here.

src/shared/types/webviewMessageUnion.test.ts:86:14 - error TS1361: 'isResponseMessage' cannot be used as a value because it was imported using 'import type'.

86       expect(isResponseMessage(message)).toBe(true);
                ~~~~~~~~~~~~~~~~~

  src/shared/types/webviewMessageUnion.test.ts:12:3
    12   isResponseMessage,
         ~~~~~~~~~~~~~~~~~
    'isResponseMessage' was imported here.

src/shared/types/webviewMessageUnion.test.ts:94:14 - error TS1361: 'isResponseMessage' cannot be used as a value because it was imported using 'import type'.

94       expect(isResponseMessage(message)).toBe(false);
                ~~~~~~~~~~~~~~~~~

  src/shared/types/webviewMessageUnion.test.ts:12:3
    12   isResponseMessage,
         ~~~~~~~~~~~~~~~~~
    'isResponseMessage' was imported here.

src/shared/types/webviewMessageUnion.test.ts:105:14 - error TS1361: 'isStateMessage' cannot be used as a value because it was imported using 'import type'.

105       expect(isStateMessage(message)).toBe(true);
                 ~~~~~~~~~~~~~~

  src/shared/types/webviewMessageUnion.test.ts:13:3
    13   isStateMessage,
         ~~~~~~~~~~~~~~
    'isStateMessage' was imported here.

src/shared/types/webviewMessageUnion.test.ts:113:14 - error TS1361: 'isStateMessage' cannot be used as a value because it was imported using 'import type'.

113       expect(isStateMessage(message)).toBe(false);
                 ~~~~~~~~~~~~~~

  src/shared/types/webviewMessageUnion.test.ts:13:3
    13   isStateMessage,
         ~~~~~~~~~~~~~~
    'isStateMessage' was imported here.

src/shared/types/webviewMessageUnion.test.ts:120:15 - error TS1361: 'WebviewMessageType' cannot be used as a value because it was imported using 'import type'.

120         type: WebviewMessageType.INSTRUCTION_RECEIVED,
                  ~~~~~~~~~~~~~~~~~~

  src/shared/types/webviewMessageUnion.test.ts:7:15
    7 import type { WebviewMessageType, ActionType } from './webview.types.js';
                    ~~~~~~~~~~~~~~~~~~
    'WebviewMessageType' was imported here.

src/shared/types/webviewMessageUnion.test.ts:125:14 - error TS1361: 'isInstructionMessage' cannot be used as a value because it was imported using 'import type'.

125       expect(isInstructionMessage(message)).toBe(true);
                 ~~~~~~~~~~~~~~~~~~~~

  src/shared/types/webviewMessageUnion.test.ts:14:3
    14   isInstructionMessage,
         ~~~~~~~~~~~~~~~~~~~~
    'isInstructionMessage' was imported here.

src/shared/types/webviewMessageUnion.test.ts:130:15 - error TS1361: 'WebviewMessageType' cannot be used as a value because it was imported using 'import type'.

130         type: WebviewMessageType.INSTRUCTION_COMPLETED,
                  ~~~~~~~~~~~~~~~~~~

  src/shared/types/webviewMessageUnion.test.ts:7:15
    7 import type { WebviewMessageType, ActionType } from './webview.types.js';
                    ~~~~~~~~~~~~~~~~~~
    'WebviewMessageType' was imported here.

src/shared/types/webviewMessageUnion.test.ts:135:14 - error TS1361: 'isInstructionMessage' cannot be used as a value because it was imported using 'import type'.

135       expect(isInstructionMessage(message)).toBe(true);
                 ~~~~~~~~~~~~~~~~~~~~

  src/shared/types/webviewMessageUnion.test.ts:14:3
    14   isInstructionMessage,
         ~~~~~~~~~~~~~~~~~~~~
    'isInstructionMessage' was imported here.

src/shared/types/webviewMessageUnion.test.ts:140:15 - error TS1361: 'WebviewMessageType' cannot be used as a value because it was imported using 'import type'.

140         type: WebviewMessageType.INSTRUCTION_FAILED,
                  ~~~~~~~~~~~~~~~~~~

  src/shared/types/webviewMessageUnion.test.ts:7:15
    7 import type { WebviewMessageType, ActionType } from './webview.types.js';
                    ~~~~~~~~~~~~~~~~~~
    'WebviewMessageType' was imported here.

src/shared/types/webviewMessageUnion.test.ts:145:14 - error TS1361: 'isInstructionMessage' cannot be used as a value because it was imported using 'import type'.

145       expect(isInstructionMessage(message)).toBe(true);
                 ~~~~~~~~~~~~~~~~~~~~

  src/shared/types/webviewMessageUnion.test.ts:14:3
    14   isInstructionMessage,
         ~~~~~~~~~~~~~~~~~~~~
    'isInstructionMessage' was imported here.

src/shared/types/webviewMessageUnion.test.ts:153:14 - error TS1361: 'isInstructionMessage' cannot be used as a value because it was imported using 'import type'.

153       expect(isInstructionMessage(message)).toBe(false);
                 ~~~~~~~~~~~~~~~~~~~~

  src/shared/types/webviewMessageUnion.test.ts:14:3
    14   isInstructionMessage,
         ~~~~~~~~~~~~~~~~~~~~
    'isInstructionMessage' was imported here.

src/shared/types/webviewMessageUnion.test.ts:167:14 - error TS1361: 'isInstructionCompletedMessage' cannot be used as a value because it was imported using 'import type'.

167       expect(isInstructionCompletedMessage(message)).toBe(true);
                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  src/shared/types/webviewMessageUnion.test.ts:15:3
    15   isInstructionCompletedMessage,
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    'isInstructionCompletedMessage' was imported here.

src/shared/types/webviewMessageUnion.test.ts:175:14 - error TS1361: 'isInstructionCompletedMessage' cannot be used as a value because it was imported using 'import type'.

175       expect(isInstructionCompletedMessage(message)).toBe(false);
                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  src/shared/types/webviewMessageUnion.test.ts:15:3
    15   isInstructionCompletedMessage,
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    'isInstructionCompletedMessage' was imported here.

src/shared/types/webviewMessageUnion.test.ts:183:20 - error TS1361: 'safeCastAs' cannot be used as a value because it was imported using 'import type'.

183     const result = safeCastAs<{ type: string, value: number }>(obj);
                       ~~~~~~~~~~

  src/shared/types/webviewMessageUnion.test.ts:16:3
    16   safeCastAs,
         ~~~~~~~~~~
    'safeCastAs' was imported here.

src/shared/types/webviewMessageUnion.test.ts:189:25 - error TS1361: 'WebviewMessageType' cannot be used as a value because it was imported using 'import type'.

189     const obj = { type: WebviewMessageType.SEND_PROMPT, payload: { prompt: 'test' } };
                            ~~~~~~~~~~~~~~~~~~

  src/shared/types/webviewMessageUnion.test.ts:7:15
    7 import type { WebviewMessageType, ActionType } from './webview.types.js';
                    ~~~~~~~~~~~~~~~~~~
    'WebviewMessageType' was imported here.

src/shared/types/webviewMessageUnion.test.ts:190:20 - error TS1361: 'safeCastAs' cannot be used as a value because it was imported using 'import type'.

190     const result = safeCastAs(obj, validators.isSendPrompt);
                       ~~~~~~~~~~

  src/shared/types/webviewMessageUnion.test.ts:16:3
    16   safeCastAs,
         ~~~~~~~~~~
    'safeCastAs' was imported here.

src/shared/types/webviewMessageUnion.test.ts:190:36 - error TS1361: 'validators' cannot be used as a value because it was imported using 'import type'.

190     const result = safeCastAs(obj, validators.isSendPrompt);
                                       ~~~~~~~~~~

  src/shared/types/webviewMessageUnion.test.ts:17:3
    17   validators
         ~~~~~~~~~~
    'validators' was imported here.

src/shared/types/webviewMessageUnion.test.ts:197:20 - error TS1361: 'safeCastAs' cannot be used as a value because it was imported using 'import type'.

197     const result = safeCastAs(obj, validators.isSendPrompt);
                       ~~~~~~~~~~

  src/shared/types/webviewMessageUnion.test.ts:16:3
    16   safeCastAs,
         ~~~~~~~~~~
    'safeCastAs' was imported here.

src/shared/types/webviewMessageUnion.test.ts:197:36 - error TS1361: 'validators' cannot be used as a value because it was imported using 'import type'.

197     const result = safeCastAs(obj, validators.isSendPrompt);
                                       ~~~~~~~~~~

  src/shared/types/webviewMessageUnion.test.ts:17:3
    17   validators
         ~~~~~~~~~~
    'validators' was imported here.

src/shared/types/webviewMessageUnion.test.ts:203:12 - error TS1361: 'safeCastAs' cannot be used as a value because it was imported using 'import type'.

203     expect(safeCastAs(null, validators.isSendPrompt)).toBeNull();
               ~~~~~~~~~~

  src/shared/types/webviewMessageUnion.test.ts:16:3
    16   safeCastAs,
         ~~~~~~~~~~
    'safeCastAs' was imported here.

src/shared/types/webviewMessageUnion.test.ts:203:29 - error TS1361: 'validators' cannot be used as a value because it was imported using 'import type'.

203     expect(safeCastAs(null, validators.isSendPrompt)).toBeNull();
                                ~~~~~~~~~~

  src/shared/types/webviewMessageUnion.test.ts:17:3
    17   validators
         ~~~~~~~~~~
    'validators' was imported here.

src/shared/types/webviewMessageUnion.test.ts:204:12 - error TS1361: 'safeCastAs' cannot be used as a value because it was imported using 'import type'.

204     expect(safeCastAs(undefined, validators.isSendPrompt)).toBeNull();
               ~~~~~~~~~~

  src/shared/types/webviewMessageUnion.test.ts:16:3
    16   safeCastAs,
         ~~~~~~~~~~
    'safeCastAs' was imported here.

src/shared/types/webviewMessageUnion.test.ts:204:34 - error TS1361: 'validators' cannot be used as a value because it was imported using 'import type'.

204     expect(safeCastAs(undefined, validators.isSendPrompt)).toBeNull();
                                     ~~~~~~~~~~

  src/shared/types/webviewMessageUnion.test.ts:17:3
    17   validators
         ~~~~~~~~~~
    'validators' was imported here.

src/shared/types/webviewMessageUnion.test.ts:211:13 - error TS1361: 'WebviewMessageType' cannot be used as a value because it was imported using 'import type'.

211       type: WebviewMessageType.SEND_PROMPT,
                ~~~~~~~~~~~~~~~~~~

  src/shared/types/webviewMessageUnion.test.ts:7:15
    7 import type { WebviewMessageType, ActionType } from './webview.types.js';
                    ~~~~~~~~~~~~~~~~~~
    'WebviewMessageType' was imported here.

src/shared/types/webviewMessageUnion.test.ts:215:12 - error TS1361: 'validators' cannot be used as a value because it was imported using 'import type'.

215     expect(validators.isSendPrompt(message)).toBe(true);
               ~~~~~~~~~~

  src/shared/types/webviewMessageUnion.test.ts:17:3
    17   validators
         ~~~~~~~~~~
    'validators' was imported here.

src/shared/types/webviewMessageUnion.test.ts:216:12 - error TS1361: 'validators' cannot be used as a value because it was imported using 'import type'.

216     expect(validators.isSendPrompt({ type: 'error' })).toBe(false);
               ~~~~~~~~~~

  src/shared/types/webviewMessageUnion.test.ts:17:3
    17   validators
         ~~~~~~~~~~
    'validators' was imported here.

src/shared/types/webviewMessageUnion.test.ts:225:12 - error TS1361: 'validators' cannot be used as a value because it was imported using 'import type'.

225     expect(validators.isAction(message)).toBe(true);
               ~~~~~~~~~~

  src/shared/types/webviewMessageUnion.test.ts:17:3
    17   validators
         ~~~~~~~~~~
    'validators' was imported here.

src/shared/types/webviewMessageUnion.test.ts:226:12 - error TS1361: 'validators' cannot be used as a value because it was imported using 'import type'.

226     expect(validators.isAction({ type: 'error' })).toBe(false);
               ~~~~~~~~~~

  src/shared/types/webviewMessageUnion.test.ts:17:3
    17   validators
         ~~~~~~~~~~
    'validators' was imported here.

src/shared/types/webviewMessageUnion.test.ts:235:12 - error TS1361: 'validators' cannot be used as a value because it was imported using 'import type'.

235     expect(validators.isError(message)).toBe(true);
               ~~~~~~~~~~

  src/shared/types/webviewMessageUnion.test.ts:17:3
    17   validators
         ~~~~~~~~~~
    'validators' was imported here.

src/shared/types/webviewMessageUnion.test.ts:236:12 - error TS1361: 'validators' cannot be used as a value because it was imported using 'import type'.

236     expect(validators.isError({ type: 'action' })).toBe(false);
               ~~~~~~~~~~

  src/shared/types/webviewMessageUnion.test.ts:17:3
    17   validators
         ~~~~~~~~~~
    'validators' was imported here.

src/shared/types/webviewMessageUnion.test.ts:245:12 - error TS1361: 'validators' cannot be used as a value because it was imported using 'import type'.

245     expect(validators.isResponse(message)).toBe(true);
               ~~~~~~~~~~

  src/shared/types/webviewMessageUnion.test.ts:17:3
    17   validators
         ~~~~~~~~~~
    'validators' was imported here.

src/shared/types/webviewMessageUnion.test.ts:246:12 - error TS1361: 'validators' cannot be used as a value because it was imported using 'import type'.

246     expect(validators.isResponse({ type: 'action' })).toBe(false);
               ~~~~~~~~~~

  src/shared/types/webviewMessageUnion.test.ts:17:3
    17   validators
         ~~~~~~~~~~
    'validators' was imported here.

src/shared/types/webviewMessageUnion.test.ts:255:12 - error TS1361: 'validators' cannot be used as a value because it was imported using 'import type'.

255     expect(validators.isState(message)).toBe(true);
               ~~~~~~~~~~

  src/shared/types/webviewMessageUnion.test.ts:17:3
    17   validators
         ~~~~~~~~~~
    'validators' was imported here.

src/shared/types/webviewMessageUnion.test.ts:256:12 - error TS1361: 'validators' cannot be used as a value because it was imported using 'import type'.

256     expect(validators.isState({ type: 'action' })).toBe(false);
               ~~~~~~~~~~

  src/shared/types/webviewMessageUnion.test.ts:17:3
    17   validators
         ~~~~~~~~~~
    'validators' was imported here.

src/shared/types/webviewMessageUnion.ts:39:28 - error TS1361: 'WebviewMessageType' cannot be used as a value because it was imported using 'import type'.

39   return message?.type === WebviewMessageType.SEND_PROMPT;
                              ~~~~~~~~~~~~~~~~~~

  src/shared/types/webviewMessageUnion.ts:9:3
    9   WebviewMessageType,
        ~~~~~~~~~~~~~~~~~~
    'WebviewMessageType' was imported here.

src/shared/types/webviewMessageUnion.ts:84:28 - error TS1361: 'WebviewMessageType' cannot be used as a value because it was imported using 'import type'.

84   return message?.type === WebviewMessageType.INSTRUCTION_RECEIVED ||
                              ~~~~~~~~~~~~~~~~~~

  src/shared/types/webviewMessageUnion.ts:9:3
    9   WebviewMessageType,
        ~~~~~~~~~~~~~~~~~~
    'WebviewMessageType' was imported here.

src/shared/types/webviewMessageUnion.ts:85:28 - error TS1361: 'WebviewMessageType' cannot be used as a value because it was imported using 'import type'.

85          message?.type === WebviewMessageType.INSTRUCTION_COMPLETED ||
                              ~~~~~~~~~~~~~~~~~~

  src/shared/types/webviewMessageUnion.ts:9:3
    9   WebviewMessageType,
        ~~~~~~~~~~~~~~~~~~
    'WebviewMessageType' was imported here.

src/shared/types/webviewMessageUnion.ts:86:28 - error TS1361: 'WebviewMessageType' cannot be used as a value because it was imported using 'import type'.

86          message?.type === WebviewMessageType.INSTRUCTION_FAILED;
                              ~~~~~~~~~~~~~~~~~~

  src/shared/types/webviewMessageUnion.ts:9:3
    9   WebviewMessageType,
        ~~~~~~~~~~~~~~~~~~
    'WebviewMessageType' was imported here.

src/shared/types/webviewMessageUnion.ts:116:65 - error TS1361: 'WebviewMessageType' cannot be used as a value because it was imported using 'import type'.

116   isSendPrompt: (d: any): d is SendPromptMessage => d?.type === WebviewMessageType.SEND_PROMPT,
                                                                    ~~~~~~~~~~~~~~~~~~

  src/shared/types/webviewMessageUnion.ts:9:3
    9   WebviewMessageType,
        ~~~~~~~~~~~~~~~~~~
    'WebviewMessageType' was imported here.

src/shared/validators.ts:10:15 - error TS2305: Module '"../types/extension.js"' has no exported member 'ChatSettings'.

10 import type { ChatSettings, ApiConfiguration } from '../types/extension.js';
                 ~~~~~~~~~~~~

src/shared/validators.ts:10:29 - error TS2459: Module '"../types/extension.js"' declares 'ApiConfiguration' locally, but it is not exported.

10 import type { ChatSettings, ApiConfiguration } from '../types/extension.js';
                               ~~~~~~~~~~~~~~~~

  src/types/extension.ts:2:15
    2 import type { ApiConfiguration } from "./global.js"
                    ~~~~~~~~~~~~~~~~
    'ApiConfiguration' is declared here.

src/shared/validators.ts:37:10 - error TS2709: Cannot use namespace 'Ajv' as a type.

37 let ajv: Ajv | null = null;
            ~~~

src/shared/validators.ts:106:33 - error TS2339: Property 'errors' does not exist on type '(data: unknown) => boolean'.

106   return validateWebviewMessage.errors ?
                                    ~~~~~~

src/shared/validators.ts:107:28 - error TS2339: Property 'errors' does not exist on type '(data: unknown) => boolean'.

107     validateWebviewMessage.errors.map(e => `${e.instancePath} ${e.message}`) :
                               ~~~~~~

src/shared/validators.ts:107:39 - error TS7006: Parameter 'e' implicitly has an 'any' type.

107     validateWebviewMessage.errors.map(e => `${e.instancePath} ${e.message}`) :
                                          ~

src/shared/validators.ts:122:35 - error TS2339: Property 'errors' does not exist on type '(data: unknown) => boolean'.

122   return validateExtensionMessage.errors ?
                                      ~~~~~~

src/shared/validators.ts:123:30 - error TS2339: Property 'errors' does not exist on type '(data: unknown) => boolean'.

123     validateExtensionMessage.errors.map(e => `${e.instancePath} ${e.message}`) :
                                 ~~~~~~

src/shared/validators.ts:123:41 - error TS7006: Parameter 'e' implicitly has an 'any' type.

123     validateExtensionMessage.errors.map(e => `${e.instancePath} ${e.message}`) :
                                            ~

src/shared/validators.ts:175:23 - error TS4111: Property 'role' comes from an index signature, so it must be accessed with ['role'].

175     return typeof msg.role === 'string' && typeof msg.content === 'string';
                          ~~~~

src/shared/validators.ts:175:55 - error TS4111: Property 'content' comes from an index signature, so it must be accessed with ['content'].

175     return typeof msg.role === 'string' && typeof msg.content === 'string';
                                                          ~~~~~~~

src/shared/validators.ts:206:21 - error TS4111: Property 'modelId' comes from an index signature, so it must be accessed with ['modelId'].

206     return typeof s.modelId === 'string'; // verifica campo minimo obbligatorio
                        ~~~~~~~

src/shared/validators.ts:222:21 - error TS4111: Property 'apiKey' comes from an index signature, so it must be accessed with ['apiKey'].

222     return typeof c.apiKey === 'string' && typeof c.baseUrl === 'string';
                        ~~~~~~

src/shared/validators.ts:222:53 - error TS4111: Property 'baseUrl' comes from an index signature, so it must be accessed with ['baseUrl'].

222     return typeof c.apiKey === 'string' && typeof c.baseUrl === 'string';
                                                        ~~~~~~~

src/shared/validators.ts:239:30 - error TS2339: Property 'errors' does not exist on type '(data: unknown) => boolean'.

239   return validateChatMessage.errors ?
                                 ~~~~~~

src/shared/validators.ts:240:25 - error TS2339: Property 'errors' does not exist on type '(data: unknown) => boolean'.

240     validateChatMessage.errors.map(e => `${e.instancePath} ${e.message}`) :
                            ~~~~~~

src/shared/validators.ts:240:36 - error TS7006: Parameter 'e' implicitly has an 'any' type.

240     validateChatMessage.errors.map(e => `${e.instancePath} ${e.message}`) :
                                       ~

src/shared/validators.ts:255:35 - error TS2339: Property 'errors' does not exist on type '(data: unknown) => boolean'.

255   return validateChatMessageArray.errors ?
                                      ~~~~~~

src/shared/validators.ts:256:30 - error TS2339: Property 'errors' does not exist on type '(data: unknown) => boolean'.

256     validateChatMessageArray.errors.map(e => `${e.instancePath} ${e.message}`) :
                                 ~~~~~~

src/shared/validators.ts:256:41 - error TS7006: Parameter 'e' implicitly has an 'any' type.

256     validateChatMessageArray.errors.map(e => `${e.instancePath} ${e.message}`) :
                                            ~

src/shared/validators.ts:271:31 - error TS2339: Property 'errors' does not exist on type '(data: unknown) => boolean'.

271   return validateChatSettings.errors ?
                                  ~~~~~~

src/shared/validators.ts:272:26 - error TS2339: Property 'errors' does not exist on type '(data: unknown) => boolean'.

272     validateChatSettings.errors.map(e => `${e.instancePath} ${e.message}`) :
                             ~~~~~~

src/shared/validators.ts:272:37 - error TS7006: Parameter 'e' implicitly has an 'any' type.

272     validateChatSettings.errors.map(e => `${e.instancePath} ${e.message}`) :
                                        ~

src/shared/validators.ts:287:35 - error TS2339: Property 'errors' does not exist on type '(data: unknown) => boolean'.

287   return validateApiConfiguration.errors ?
                                      ~~~~~~

src/shared/validators.ts:288:30 - error TS2339: Property 'errors' does not exist on type '(data: unknown) => boolean'.

288     validateApiConfiguration.errors.map(e => `${e.instancePath} ${e.message}`) :
                                 ~~~~~~

src/shared/validators.ts:288:41 - error TS7006: Parameter 'e' implicitly has an 'any' type.

288     validateApiConfiguration.errors.map(e => `${e.instancePath} ${e.message}`) :
                                            ~

src/shared/validators.ts:388:29 - error TS2339: Property 'errors' does not exist on type '(data: unknown) => boolean'.

388     if (validateChatSession.errors) {
                                ~~~~~~

src/shared/validators.ts:389:34 - error TS2339: Property 'errors' does not exist on type '(data: unknown) => boolean'.

389       return validateChatSession.errors.map(err => {
                                     ~~~~~~

src/shared/validators.ts:389:45 - error TS7006: Parameter 'err' implicitly has an 'any' type.

389       return validateChatSession.errors.map(err => {
                                                ~~~

src/storage/benchmark/BenchmarkStorage.ts:5:10 - error TS2305: Module '"../../shared/WebviewMessage.js"' has no exported member 'BenchmarkSession'.

5 import { BenchmarkSession, BenchmarkSessionDetail, ProviderStats, TimelineStats } from '../../shared/WebviewMessage.js';
           ~~~~~~~~~~~~~~~~

src/storage/benchmark/BenchmarkStorage.ts:5:28 - error TS2305: Module '"../../shared/WebviewMessage.js"' has no exported member 'BenchmarkSessionDetail'.

5 import { BenchmarkSession, BenchmarkSessionDetail, ProviderStats, TimelineStats } from '../../shared/WebviewMessage.js';
                             ~~~~~~~~~~~~~~~~~~~~~~

src/storage/benchmark/BenchmarkStorage.ts:5:52 - error TS2305: Module '"../../shared/WebviewMessage.js"' has no exported member 'ProviderStats'.

5 import { BenchmarkSession, BenchmarkSessionDetail, ProviderStats, TimelineStats } from '../../shared/WebviewMessage.js';
                                                     ~~~~~~~~~~~~~

src/storage/benchmark/BenchmarkStorage.ts:5:67 - error TS2305: Module '"../../shared/WebviewMessage.js"' has no exported member 'TimelineStats'.

5 import { BenchmarkSession, BenchmarkSessionDetail, ProviderStats, TimelineStats } from '../../shared/WebviewMessage.js';
                                                                    ~~~~~~~~~~~~~

src/storage/benchmark/BenchmarkStorage.ts:69:66 - error TS18046: 'error' is of type 'unknown'.

69       throw new Error(`Errore durante l'importazione del file: ${error.message}`);
                                                                    ~~~~~

src/storage/benchmark/BenchmarkStorage.ts:161:60 - error TS4111: Property 'HOME' comes from an index signature, so it must be accessed with ['HOME'].

161       const filePath = exportPath || path.join(process.env.HOME || process.env.USERPROFILE || '', 'Downloads', fileName);
                                                               ~~~~

src/storage/benchmark/BenchmarkStorage.ts:161:80 - error TS4111: Property 'USERPROFILE' comes from an index signature, so it must be accessed with ['USERPROFILE'].

161       const filePath = exportPath || path.join(process.env.HOME || process.env.USERPROFILE || '', 'Downloads', fileName);
                                                                                   ~~~~~~~~~~~

src/storage/benchmark/BenchmarkStorage.ts:192:9 - error TS2532: Object is possibly 'undefined'.

192         providers[session.provider].push(session);
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/storage/benchmark/BenchmarkStorage.ts:268:59 - error TS7006: Parameter 'result' implicitly has an 'any' type.

268         const responseTimes = detailedSession.results.map(result => result.responseTime);
                                                              ~~~~~~

src/storage/benchmark/BenchmarkStorage.ts:269:55 - error TS7006: Parameter 'sum' implicitly has an 'any' type.

269         const avgResponseTime = responseTimes.reduce((sum, time) => sum + time, 0) / responseTimes.length;
                                                          ~~~

src/storage/benchmark/BenchmarkStorage.ts:269:60 - error TS7006: Parameter 'time' implicitly has an 'any' type.

269         const avgResponseTime = responseTimes.reduce((sum, time) => sum + time, 0) / responseTimes.length;
                                                               ~~~~

src/storage/benchmark/BenchmarkStorage.ts:271:57 - error TS7006: Parameter 'result' implicitly has an 'any' type.

271         const inputTokens = detailedSession.results.map(result => result.tokens.inputTokens);
                                                            ~~~~~~

src/storage/benchmark/BenchmarkStorage.ts:272:58 - error TS7006: Parameter 'result' implicitly has an 'any' type.

272         const outputTokens = detailedSession.results.map(result => result.tokens.outputTokens);
                                                             ~~~~~~

src/storage/benchmark/BenchmarkStorage.ts:274:52 - error TS7006: Parameter 'sum' implicitly has an 'any' type.

274         const avgInputTokens = inputTokens.reduce((sum, tokens) => sum + tokens, 0) / inputTokens.length;
                                                       ~~~

src/storage/benchmark/BenchmarkStorage.ts:274:57 - error TS7006: Parameter 'tokens' implicitly has an 'any' type.

274         const avgInputTokens = inputTokens.reduce((sum, tokens) => sum + tokens, 0) / inputTokens.length;
                                                            ~~~~~~

src/storage/benchmark/BenchmarkStorage.ts:275:54 - error TS7006: Parameter 'sum' implicitly has an 'any' type.

275         const avgOutputTokens = outputTokens.reduce((sum, tokens) => sum + tokens, 0) / outputTokens.length;
                                                         ~~~

src/storage/benchmark/BenchmarkStorage.ts:275:59 - error TS7006: Parameter 'tokens' implicitly has an 'any' type.

275         const avgOutputTokens = outputTokens.reduce((sum, tokens) => sum + tokens, 0) / outputTokens.length;
                                                              ~~~~~~

src/test/extension.test.ts:8:1 - error TS6133: 'JarvisProvider' is declared but its value is never read.

8 import { JarvisProvider } from "../core/webview/JarvisProvider.js"
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/test/extension.test.ts:9:1 - error TS6133: 'TelemetryService' is declared but its value is never read.

9 import { TelemetryService } from "../services/TelemetryService.js"
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/test/extension.test.ts:10:1 - error TS6133: 'ApiConfiguration' is declared but its value is never read.

10 import type { ApiConfiguration } from "../types/global.js"
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/test/extension.test.ts:24:26 - error TS2339: Property 'should' does not exist on type 'string'.

24   jarvisExtensionApi?.id.should.equal(id)
                            ~~~~~~

src/test/extension.test.ts:55:31 - error TS2554: Expected 1-2 arguments, but got 0.

55   expect(panel.visible).to.be.true()
                                 ~~~~

  node_modules/@vitest/expect/dist/chai.d.cts:283:10
    283         (type: string, message?: string): Assertion;
                 ~~~~~~~~~~~~
    An argument for 'type' was not provided.

src/test/extension.test.ts:91:11 - error TS2339: Property 'should' does not exist on type 'string'.

91   message.should.equal("test-message")
             ~~~~~~

src/test/extension.test.ts:122:21 - error TS2339: Property 'toBeDefined' does not exist on type 'Assertion'.

122   expect(extension).toBeDefined();
                        ~~~~~~~~~~~

src/test/extension.test.ts:127:43 - error TS2339: Property 'toHaveBeenCalled' does not exist on type 'Assertion'.

127   expect(vscode.commands.registerCommand).toHaveBeenCalled();
                                              ~~~~~~~~~~~~~~~~

src/test/extension.test.ts:132:36 - error TS2554: Expected 1 arguments, but got 0.

132   const jarvisExtensionApi = await activate()
                                       ~~~~~~~~

  src/extension.ts:74:32
    74 export async function activate(context: vscode.ExtensionContext) {
                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    An argument for 'context' was not provided.

src/test/extension.test.ts:133:34 - error TS2339: Property 'toBe' does not exist on type 'Assertion'.

133   expect(jarvisExtensionApi?.id).toBe(id)
                                     ~~~~

src/test/extension.test.ts:138:20 - error TS2554: Expected 0 arguments, but got 1.

138   await deactivate(message)
                       ~~~~~~~

src/test/extension.test.ts:139:19 - error TS2339: Property 'toBe' does not exist on type 'Assertion'.

139   expect(message).toBe("test-message")
                      ~~~~

src/test/fileOperations.test.ts:21:19 - error TS2673: Constructor of class 'FileManager' is private and only accessible within the class declaration.

21     fileManager = new FileManager(context);
                     ~~~~~~~~~~~~~~~~~~~~~~~~

src/test/JarvisAgentTest.ts:8:23 - error TS1484: 'AgentResponse' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.

8 import { JarvisAgent, AgentResponse } from '../agent/JarvisAgent.js';
                        ~~~~~~~~~~~~~

src/test/JarvisAgentTest.ts:8:23 - error TS6133: 'AgentResponse' is declared but its value is never read.

8 import { JarvisAgent, AgentResponse } from '../agent/JarvisAgent.js';
                        ~~~~~~~~~~~~~

src/test/JarvisAgentTest.ts:112:46 - error TS2835: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Did you mean '../agent/sendPromptToLLM.js'?

112     const sendPromptToLLMMock = await import('../agent/sendPromptToLLM');
                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~

src/test/shell.test.ts:37:22 - error TS4111: Property 'SHELL' comes from an index signature, so it must be accessed with ['SHELL'].

37   delete process.env.SHELL
                        ~~~~~

src/test/shell.test.ts:38:22 - error TS4111: Property 'COMSPEC' comes from an index signature, so it must be accessed with ['COMSPEC'].

38   delete process.env.COMSPEC
                        ~~~~~~~

src/test/shell.test.ts:116:16 - error TS4111: Property 'COMSPEC' comes from an index signature, so it must be accessed with ['COMSPEC'].

116    process.env.COMSPEC = "D:\\CustomCmd\\cmd.exe"
                   ~~~~~~~

src/test/shell.test.ts:146:16 - error TS4111: Property 'SHELL' comes from an index signature, so it must be accessed with ['SHELL'].

146    process.env.SHELL = "/usr/local/bin/zsh"
                   ~~~~~

src/test/shell.test.ts:182:16 - error TS4111: Property 'SHELL' comes from an index signature, so it must be accessed with ['SHELL'].

182    process.env.SHELL = "/usr/bin/fish"
                   ~~~~~

src/test/shell.test.ts:221:16 - error TS4111: Property 'SHELL' comes from an index signature, so it must be accessed with ['SHELL'].

221    process.env.SHELL = "/bin/zsh"
                   ~~~~~

src/test/shell.test.ts:235:23 - error TS4111: Property 'SHELL' comes from an index signature, so it must be accessed with ['SHELL'].

235    delete process.env.SHELL
                          ~~~~~

src/test/suite/fileOperations.test.ts:21:19 - error TS2673: Constructor of class 'FileManager' is private and only accessible within the class declaration.

21     fileManager = new FileManager(context);
                     ~~~~~~~~~~~~~~~~~~~~~~~~

src/test/suite/index.ts:7:23 - error TS2351: This expression is not constructable.
  Type 'typeof Mocha' has no construct signatures.

7     const mocha = new Mocha({
                        ~~~~~

  src/test/suite/index.ts:2:1
    2 import * as Mocha from 'mocha';
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.

src/test/suite/index.ts:15:9 - error TS2349: This expression is not callable.
  Type 'typeof import("E:/cline-main/node_modules/glob/dist/esm/index", { with: { "resolution-mode": "import" } })' has no call signatures.

15         glob('**/**.test.ts', { cwd: testsRoot }, (err, files) => {
           ~~~~

src/test/suite/index.ts:15:52 - error TS7006: Parameter 'err' implicitly has an 'any' type.

15         glob('**/**.test.ts', { cwd: testsRoot }, (err, files) => {
                                                      ~~~

src/test/suite/index.ts:15:57 - error TS7006: Parameter 'files' implicitly has an 'any' type.

15         glob('**/**.test.ts', { cwd: testsRoot }, (err, files) => {
                                                           ~~~~~

src/test/suite/index.ts:21:27 - error TS7006: Parameter 'f' implicitly has an 'any' type.

21             files.forEach(f => mocha.addFile(path.resolve(testsRoot, f)));
                             ~

src/test/suite/index.ts:25:28 - error TS7006: Parameter 'failures' implicitly has an 'any' type.

25                 mocha.run((failures) => {
                              ~~~~~~~~

src/test/suite/modelLoader.test.ts:1:46 - error TS6133: 'afterEach' is declared but its value is never read.

1 import { describe, expect, test, beforeEach, afterEach, vi } from "vitest";
                                               ~~~~~~~~~

src/test/suite/modelLoader.test.ts:2:22 - error TS2459: Module '"../../data/modelLoader.js"' declares 'fetchModelsFromOpenRouter' locally, but it is not exported.

2 import { loadModels, fetchModelsFromOpenRouter } from '../../data/modelLoader.js'
                       ~~~~~~~~~~~~~~~~~~~~~~~~~

  src/data/modelLoader.ts:43:7
    43 const fetchModelsFromOpenRouter = async (apiKey?: string): Promise<OpenAiCompatibleModelInfo[]> => {
             ~~~~~~~~~~~~~~~~~~~~~~~~~
    'fetchModelsFromOpenRouter' is declared here.

src/test/suite/modelLoader.test.ts:24:45 - error TS2345: Argument of type '{ id: string; name: string; provider: string; contextLength: number; maxTokens: number; }[]' is not assignable to parameter of type 'OpenAiCompatibleModelInfo[]'.
  Type '{ id: string; name: string; provider: string; contextLength: number; maxTokens: number; }' is not assignable to type 'OpenAiCompatibleModelInfo'.
    Types of property 'provider' are incompatible.
      Type 'string' is not assignable to type 'LLMProviderId'.

24     vi.mocked(loadModels).mockResolvedValue(defaultModels);
                                               ~~~~~~~~~~~~~

src/test/suite/modelLoader.test.ts:35:32 - error TS4111: Property 'OPENROUTER_API_KEY' comes from an index signature, so it must be accessed with ['OPENROUTER_API_KEY'].

35     const apiKey = process.env.OPENROUTER_API_KEY
                                  ~~~~~~~~~~~~~~~~~~

src/test/suite/modelLoader.test.ts:46:45 - error TS2345: Argument of type '{ id: string; name: string; provider: string; contextLength: number; maxTokens: number; }[]' is not assignable to parameter of type 'OpenAiCompatibleModelInfo[]'.
  Type '{ id: string; name: string; provider: string; contextLength: number; maxTokens: number; }' is not assignable to type 'OpenAiCompatibleModelInfo'.
    Types of property 'provider' are incompatible.
      Type 'string' is not assignable to type 'LLMProviderId'.

46     vi.mocked(loadModels).mockResolvedValue(openRouterModels);
                                               ~~~~~~~~~~~~~~~~

src/test/suite/modelLoader.test.ts:62:14 - error TS18046: 'error' is of type 'unknown'.

62       expect(error.message).to.equal('Invalid API key')
                ~~~~~

src/test/suite/modelLoader.test.ts:77:45 - error TS2345: Argument of type '{ id: string; name: string; provider: string; contextLength: number; maxTokens: number; }[]' is not assignable to parameter of type 'OpenAiCompatibleModelInfo[]'.
  Type '{ id: string; name: string; provider: string; contextLength: number; maxTokens: number; }' is not assignable to type 'OpenAiCompatibleModelInfo'.
    Types of property 'provider' are incompatible.
      Type 'string' is not assignable to type 'LLMProviderId'.

77     vi.mocked(loadModels).mockResolvedValue(refreshedModels);
                                               ~~~~~~~~~~~~~~~

src/test/suite/modelLoader.test.ts:89:12 - error TS18048: 'model' is possibly 'undefined'.

89     expect(model.id).to.exist
              ~~~~~

src/test/suite/modelLoader.test.ts:90:12 - error TS18048: 'model' is possibly 'undefined'.

90     expect(model.name).to.exist
              ~~~~~

src/test/suite/modelLoader.test.ts:91:12 - error TS18048: 'model' is possibly 'undefined'.

91     expect(model.provider).to.exist
              ~~~~~

src/test/suite/modelLoader.test.ts:92:12 - error TS18048: 'model' is possibly 'undefined'.

92     expect(model.contextLength).to.exist
              ~~~~~

src/test/suite/modelLoader.test.ts:93:12 - error TS18048: 'model' is possibly 'undefined'.

93     expect(model.maxTokens).to.exist
              ~~~~~

src/test/vitest.setup.ts:2:1 - error TS6133: 'expect' is declared but its value is never read.

2 import { expect } from 'vitest';
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/test/webview/chat-native.test.ts:4:1 - error TS6133: 'join' is declared but its value is never read.

4 import { join } from "path"
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/types/api.types.ts:11:3 - error TS2484: Export declaration conflicts with exported declaration of 'OpenAiCompatibleModelInfo'.

11   OpenAiCompatibleModelInfo,
     ~~~~~~~~~~~~~~~~~~~~~~~~~

src/types/api.types.ts:24:3 - error TS2484: Export declaration conflicts with exported declaration of 'LLMProvider'.

24   LLMProvider,
     ~~~~~~~~~~~

src/types/chat.types.ts:186:3 - error TS2375: Type '{ role: "function" | "system" | "user" | "assistant" | "tool"; content: string | ContentBlock[]; name: string | undefined; timestamp: string; providerFields: Record<string, any> | undefined; }' is not assignable to type 'ChatMessage' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'name' are incompatible.
    Type 'string | undefined' is not assignable to type 'string'.
      Type 'undefined' is not assignable to type 'string'.

186   return {
      ~~~~~~

src/types/ChatMessage.ts:16:38 - error TS1361: 'normalizeMessages' cannot be used as a value because it was imported using 'import type'.

16 export const normalizeChatMessages = normalizeMessages;
                                        ~~~~~~~~~~~~~~~~~

  src/types/ChatMessage.ts:10:3
    10   normalizeChatMessages as normalizeMessages,
         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    'normalizeMessages' was imported here.

src/types/ChatMessage.ts:19:10 - error TS1448: 'toChatMessage' resolves to a type-only declaration and must be re-exported using a type-only re-export when 'verbatimModuleSyntax' is enabled.

19 export { toChatMessage };
            ~~~~~~~~~~~~~

  src/types/ChatMessage.ts:11:3
    11   toChatMessage
         ~~~~~~~~~~~~~
    'toChatMessage' was imported here.

src/types/extension.test.ts:3:3 - error TS2724: '"./extension.js"' has no exported member named 'ExtensionMessage'. Did you mean 'BasicExtensionMessage'?

3   ExtensionMessage,
    ~~~~~~~~~~~~~~~~

src/types/extension.test.ts:72:7 - error TS2353: Object literal may only specify known properties, and 'messages' does not exist in type 'ExtensionState'.

72       messages: [],
         ~~~~~~~~

src/types/extension.test.ts:101:9 - error TS2353: Object literal may only specify known properties, and 'messages' does not exist in type 'ExtensionState'.

101         messages: [],
            ~~~~~~~~

  src/types/extension.ts:139:3
    139   workspaceState: ExtensionState;
          ~~~~~~~~~~~~~~
    The expected type comes from property 'workspaceState' which is declared here on type 'ExtensionContext'

src/types/extension.test.ts:119:9 - error TS2353: Object literal may only specify known properties, and 'messages' does not exist in type 'ExtensionState'.

119         messages: [],
            ~~~~~~~~

  src/types/extension.ts:140:3
    140   globalState: ExtensionState;
          ~~~~~~~~~~~
    The expected type comes from property 'globalState' which is declared here on type 'ExtensionContext'

src/types/extension.ts:1:1 - error TS6133: 'ChatCompletionMessageParam' is declared but its value is never read.

1 import type { ChatCompletionMessageParam } from "../types/provider-types/openai-types.js"
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/types/extension.ts:7:3 - error TS6196: 'AnthropicToolUseBlock' is declared but never used.

7   AnthropicToolUseBlock,
    ~~~~~~~~~~~~~~~~~~~~~

src/types/extension.types.ts:3:15 - error TS2305: Module '"../shared/types/provider.types.js"' has no exported member 'AIProvider'.

3 import type { AIProvider } from '../shared/types/provider.types.js';
                ~~~~~~~~~~

src/types/global.test.ts:49:10 - error TS2532: Object is possibly 'undefined'.

49   expect(parts[0].type).toBe('text')
            ~~~~~~~~

src/types/global.test.ts:50:10 - error TS2532: Object is possibly 'undefined'.

50   expect(parts[1].type).toBe('image_url')
            ~~~~~~~~

src/types/messages.ts:7:1 - error TS6133: 'ApiConfiguration' is declared but its value is never read.

7 import type { ApiConfiguration } from '../shared/types/api.types.js'
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/utils/chatExport.ts:1:34 - error TS2307: Cannot find module '../shared/types.js' or its corresponding type declarations.

1 import type { ChatMessage } from '../shared/types.js';
                                   ~~~~~~~~~~~~~~~~~~~~

src/utils/chatExport.ts:2:1 - error TS6133: 'ApiConfiguration' is declared but its value is never read.

2 import type { ApiConfiguration } from '../shared/types/api.types.js';
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/utils/chatExport.ts:3:1 - error TS6133: 'ExtensionMessage' is declared but its value is never read.

3 import type { ExtensionMessage } from '../shared/ExtensionMessage.js';
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/utils/cost.test.ts:11:5 - error TS2561: Object literal may only specify known properties, but 'context_length' does not exist in type 'ModelInfo'. Did you mean to write 'contextLength'?

11     context_length: 8192,
       ~~~~~~~~~~~~~~

src/utils/cost.test.ts:28:5 - error TS2561: Object literal may only specify known properties, but 'context_length' does not exist in type 'ModelInfo'. Did you mean to write 'contextLength'?

28     context_length: 8192,
       ~~~~~~~~~~~~~~

src/utils/cost.test.ts:41:5 - error TS2561: Object literal may only specify known properties, but 'context_length' does not exist in type 'ModelInfo'. Did you mean to write 'contextLength'?

41     context_length: 200000,
       ~~~~~~~~~~~~~~

src/utils/cost.test.ts:66:5 - error TS2561: Object literal may only specify known properties, but 'context_length' does not exist in type 'ModelInfo'. Did you mean to write 'contextLength'?

66     context_length: 8192,
       ~~~~~~~~~~~~~~

src/utils/cost.test.ts:84:5 - error TS2561: Object literal may only specify known properties, but 'context_length' does not exist in type 'ModelInfo'. Did you mean to write 'contextLength'?

84     context_length: 8192,
       ~~~~~~~~~~~~~~

src/utils/cost.test.ts:101:5 - error TS2561: Object literal may only specify known properties, but 'context_length' does not exist in type 'ModelInfo'. Did you mean to write 'contextLength'?

101     context_length: 8192,
        ~~~~~~~~~~~~~~

src/utils/cost.test.ts:114:5 - error TS2561: Object literal may only specify known properties, but 'context_length' does not exist in type 'ModelInfo'. Did you mean to write 'contextLength'?

114     context_length: 200000,
        ~~~~~~~~~~~~~~

src/utils/cost.test.ts:139:5 - error TS2561: Object literal may only specify known properties, but 'context_length' does not exist in type 'ModelInfo'. Did you mean to write 'contextLength'?

139     context_length: 8192,
        ~~~~~~~~~~~~~~

src/utils/exporters.ts:8:29 - error TS2307: Cannot find module '../shared/types.js' or its corresponding type declarations.

8 import { ChatMessage } from '../shared/types.js';
                              ~~~~~~~~~~~~~~~~~~~~

src/utils/exporters.ts:9:15 - error TS2724: '"../shared/types/settings.types.js"' has no exported member named 'ChatSettings'. Did you mean 'Settings'?

9 import type { ChatSettings } from '../shared/types/settings.types.js';
                ~~~~~~~~~~~~

src/utils/exporters.ts:10:1 - error TS6133: 'ApiConfiguration' is declared but its value is never read.

10 import type { ApiConfiguration } from '../shared/types/api.types.js';
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/utils/exporters.ts:13:23 - error TS2339: Property 'getInstance' does not exist on type 'typeof Logger'.

13 const logger = Logger.getInstance("Exporters");
                         ~~~~~~~~~~~

src/utils/exporters.ts:48:12 - error TS2769: No overload matches this call.
  Overload 1 of 2, '(value: any, options?: (DocumentOptions & SchemaOptions & ParseOptions & CreateNodeOptions & ToStringOptions) | undefined): string', gave the following error.
    Object literal may only specify known properties, and 'doubleQuotedStringStyle' does not exist in type 'DocumentOptions & SchemaOptions & ParseOptions & CreateNodeOptions & ToStringOptions'.
  Overload 2 of 2, '(value: any, replacer?: Replacer | null | undefined, options?: string | number | (DocumentOptions & SchemaOptions & ParseOptions & CreateNodeOptions & ToStringOptions) | undefined): string', gave the following error.
    Object literal may only specify known properties, and 'indent' does not exist in type 'Replacer'.

48     return stringify(yamlPayload, {
              ~~~~~~~~~


src/utils/exporters.ts:54:57 - error TS18046: 'error' is of type 'unknown'.

54     logger.error(`Errore durante l'esportazione YAML: ${error.message}`, error);
                                                           ~~~~~

src/utils/exporters.ts:55:60 - error TS18046: 'error' is of type 'unknown'.

55     throw new Error(`Errore durante l'esportazione YAML: ${error.message}`);
                                                              ~~~~~

src/utils/exporters.ts:78:66 - error TS18046: 'error' is of type 'unknown'.

78     logger.error(`Errore durante il salvataggio del file YAML: ${error.message}`, error);
                                                                    ~~~~~

src/utils/exporters.ts:79:70 - error TS18046: 'error' is of type 'unknown'.

79     vscode.window.showErrorMessage(`Errore durante il salvataggio: ${error.message}`);
                                                                        ~~~~~

src/utils/exporters.ts:93:71 - error TS18046: 'error' is of type 'unknown'.

93     logger.error(`Errore durante l'esportazione e salvataggio YAML: ${error.message}`, error);
                                                                         ~~~~~

src/utils/exporters.ts:94:70 - error TS18046: 'error' is of type 'unknown'.

94     vscode.window.showErrorMessage(`Errore durante l'esportazione: ${error.message}`);
                                                                        ~~~~~

src/utils/exporters/__tests__/index.test.ts:6:48 - error TS6133: 'afterEach' is declared but its value is never read.

6 import { describe, it, expect, vi, beforeEach, afterEach } from 'vitest';
                                                 ~~~~~~~~~

src/utils/exporters/__tests__/index.test.ts:7:90 - error TS2835: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Did you mean '../index.js'?

7 import { exportSession, exportSessionToFile, getFormatExtension, formatExtensions } from '../index';
                                                                                           ~~~~~~~~~~

src/utils/exporters/__tests__/index.test.ts:8:29 - error TS2835: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Did you mean '../types.js'?

8 import { ExportError } from '../types';
                              ~~~~~~~~~~

src/utils/exporters/__tests__/index.test.ts:9:40 - error TS2835: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Did you mean '../types.js'?

9 import type { ExportableSession } from '../types';
                                         ~~~~~~~~~~

src/utils/exporters/__tests__/index.test.ts:10:30 - error TS2835: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Did you mean '../serializers.js'?

10 import * as serializers from '../serializers';
                                ~~~~~~~~~~~~~~~~

src/utils/exporters/__tests__/index.test.ts:11:27 - error TS2835: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Did you mean '../sanitize.js'?

11 import * as sanitize from '../sanitize';
                             ~~~~~~~~~~~~~

src/utils/exporters/__tests__/integration.test.ts:2:38 - error TS2835: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Did you mean '../sanitize.js'?

2 import { sanitizeExportObject } from '../sanitize';
                                       ~~~~~~~~~~~~~

src/utils/exporters/__tests__/integration.test.ts:3:1 - error TS6133: 'fs' is declared but its value is never read.

3 import fs from 'fs';
  ~~~~~~~~~~~~~~~~~~~~

src/utils/exporters/__tests__/integration.test.ts:4:1 - error TS6133: 'path' is declared but its value is never read.

4 import path from 'path';
  ~~~~~~~~~~~~~~~~~~~~~~~~

src/utils/exporters/__tests__/integration.test.ts:5:31 - error TS2835: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Did you mean '../types.js'?

5 import { ExportOptions } from '../types';
                                ~~~~~~~~~~

src/utils/exporters/__tests__/sanitize.test.ts:2:62 - error TS2835: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Did you mean '../sanitize.js'?

2 import { sanitizeExportObject, extractSanitizeOptions } from '../sanitize';
                                                               ~~~~~~~~~~~~~

src/utils/exporters/__tests__/sanitize.test.ts:3:31 - error TS2835: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Did you mean '../types.js'?

3 import { ExportOptions } from '../types';
                                ~~~~~~~~~~

src/utils/exporters/__tests__/sanitize.test.ts:149:16 - error TS4111: Property 'self' comes from an index signature, so it must be accessed with ['self'].

149       circular.self = circular;
                   ~~~~

src/utils/exporters/csv.ts:6:34 - error TS2834: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Consider adding an extension to the import path.

6 import type { ChatMessage } from '../../shared/types';
                                   ~~~~~~~~~~~~~~~~~~~~

src/utils/exporters/csv.ts:7:40 - error TS2835: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Did you mean './types.js'?

7 import type { ExportableSession } from './types';
                                         ~~~~~~~~~

src/utils/exporters/csv.ts:8:24 - error TS2835: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Did you mean '../logger.js'?

8 import { Logger } from '../logger';
                         ~~~~~~~~~~~

src/utils/exporters/examples/usage.ts:6:52 - error TS2835: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Did you mean '../index.js'?

6 import { exportSession, exportSessionToFile } from '../index';
                                                     ~~~~~~~~~~

src/utils/exporters/examples/usage.ts:7:54 - error TS2835: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Did you mean '../types.js'?

7 import type { ExportableSession, ExportFormat } from '../types';
                                                       ~~~~~~~~~~

src/utils/exporters/html.ts:6:34 - error TS2834: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Consider adding an extension to the import path.

6 import type { ChatMessage } from '../../shared/types';
                                   ~~~~~~~~~~~~~~~~~~~~

src/utils/exporters/html.ts:7:35 - error TS2307: Cannot find module '../../shared/types/settings.types' or its corresponding type declarations.

7 import type { ChatSettings } from '../../shared/types/settings.types';
                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/utils/exporters/html.ts:8:40 - error TS2835: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Did you mean './types.js'?

8 import type { ExportableSession } from './types';
                                         ~~~~~~~~~

src/utils/exporters/html.ts:9:24 - error TS2835: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Did you mean '../logger.js'?

9 import { Logger } from '../logger';
                         ~~~~~~~~~~~

src/utils/exporters/html.ts:10:28 - error TS2835: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Did you mean './markdown.js'?

10 import { toMarkdown } from './markdown';
                              ~~~~~~~~~~~~

src/utils/exporters/html.ts:205:21 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ system: string; user: string; assistant: string; function: string; }'.

205   const roleEmoji = {
                        ~
206     'system': '🔧',
    ~~~~~~~~~~~~~~~~~~~
...
209     'function': '⚙️'
    ~~~~~~~~~~~~~~~~~~~~
210   }[message.role] || '❓';
    ~~~~~~~~~~~~~~~~~

src/utils/exporters/html.ts:212:21 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ system: string; user: string; assistant: string; function: string; }'.

212   const roleLabel = {
                        ~
213     'system': 'Sistema',
    ~~~~~~~~~~~~~~~~~~~~~~~~
...
216     'function': 'Funzione'
    ~~~~~~~~~~~~~~~~~~~~~~~~~~
217   }[message.role] || message.role;
    ~~~~~~~~~~~~~~~~~

src/utils/exporters/html.ts:387:14 - error TS7006: Parameter 'message' implicitly has an 'any' type.

387         .map(message => messageToHTML(message))
                 ~~~~~~~

src/utils/exporters/html.ts:438:3 - error TS6133: 'includeMetadata' is declared but its value is never read.

438   includeMetadata: boolean,
      ~~~~~~~~~~~~~~~

src/utils/exporters/html.ts:439:3 - error TS6133: 'session' is declared but its value is never read.

439   session: ExportableSession
      ~~~~~~~

src/utils/exporters/index.ts:6:32 - error TS2835: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Did you mean './serializers.js'?

6 import { toJSON, toYAML } from './serializers';
                                 ~~~~~~~~~~~~~~~

src/utils/exporters/index.ts:7:28 - error TS2835: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Did you mean './markdown.js'?

7 import { toMarkdown } from './markdown';
                             ~~~~~~~~~~~~

src/utils/exporters/index.ts:8:30 - error TS2835: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Did you mean './csv.js'?

8 import { sessionToCSV } from './csv';
                               ~~~~~~~

src/utils/exporters/index.ts:9:24 - error TS2835: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Did you mean './html.js'?

9 import { toHTML } from './html';
                         ~~~~~~~~

src/utils/exporters/index.ts:10:38 - error TS2835: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Did you mean './sanitize.js'?

10 import { sanitizeExportObject } from './sanitize';
                                        ~~~~~~~~~~~~

src/utils/exporters/index.ts:17:8 - error TS2835: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Did you mean './types.js'?

17 } from './types';
          ~~~~~~~~~

src/utils/exporters/index.ts:18:24 - error TS2835: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Did you mean '../logger.js'?

18 import { Logger } from '../logger';
                          ~~~~~~~~~~~

src/utils/exporters/index.ts:173:15 - error TS2835: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Did you mean './types.js'?

173 export * from './types';
                  ~~~~~~~~~

src/utils/exporters/index.ts:174:15 - error TS2835: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Did you mean './sanitize.js'?

174 export * from './sanitize';
                  ~~~~~~~~~~~~

src/utils/exporters/index.ts:175:15 - error TS2835: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Did you mean './serializers.js'?

175 export * from './serializers';
                  ~~~~~~~~~~~~~~~

src/utils/exporters/index.ts:176:15 - error TS2835: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Did you mean './markdown.js'?

176 export * from './markdown';
                  ~~~~~~~~~~~~

src/utils/exporters/index.ts:177:15 - error TS2835: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Did you mean './csv.js'?

177 export * from './csv';
                  ~~~~~~~

src/utils/exporters/index.ts:178:15 - error TS2835: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Did you mean './html.js'?

178 export * from './html';
                  ~~~~~~~~

src/utils/exporters/markdown.ts:6:34 - error TS2834: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Consider adding an extension to the import path.

6 import type { ChatMessage } from '../../shared/types';
                                   ~~~~~~~~~~~~~~~~~~~~

src/utils/exporters/markdown.ts:7:35 - error TS2307: Cannot find module '../../shared/types/settings.types' or its corresponding type declarations.

7 import type { ChatSettings } from '../../shared/types/settings.types';
                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/utils/exporters/markdown.ts:8:40 - error TS2835: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Did you mean './types.js'?

8 import type { ExportableSession } from './types';
                                         ~~~~~~~~~

src/utils/exporters/markdown.ts:9:24 - error TS2835: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Did you mean '../logger.js'?

9 import { Logger } from '../logger';
                         ~~~~~~~~~~~

src/utils/exporters/markdown.ts:20:21 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ system: string; user: string; assistant: string; function: string; }'.

 20   const roleEmoji = {
                        ~
 21     'system': '🔧',
    ~~~~~~~~~~~~~~~~~~~
...
 24     'function': '⚙️'
    ~~~~~~~~~~~~~~~~~~~~
 25   }[message.role] || '❓';
    ~~~~~~~~~~~~~~~~~

src/utils/exporters/markdown.ts:27:21 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ system: string; user: string; assistant: string; function: string; }'.

 27   const roleLabel = {
                        ~
 28     'system': 'Sistema',
    ~~~~~~~~~~~~~~~~~~~~~~~~
...
 31     'function': 'Funzione'
    ~~~~~~~~~~~~~~~~~~~~~~~~~~
 32   }[message.role] || message.role;
    ~~~~~~~~~~~~~~~~~

src/utils/exporters/markdown.ts:143:14 - error TS7006: Parameter 'message' implicitly has an 'any' type.

143         .map(message => formatMessage(message))
                 ~~~~~~~

src/utils/exporters/sanitize.ts:6:48 - error TS2835: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Did you mean './types.js'?

6 import { SanitizeOptions, ExportOptions } from './types';
                                                 ~~~~~~~~~

src/utils/exporters/sanitize.ts:127:39 - error TS18046: 'error' is of type 'unknown'.

127     return `[Oggetto non iterabile: ${error.message}]`;
                                          ~~~~~

src/utils/exporters/serializers.ts:6:18 - error TS7016: Could not find a declaration file for module 'js-yaml'. 'E:/cline-main/node_modules/js-yaml/dist/js-yaml.mjs' implicitly has an 'any' type.
  Try `npm i --save-dev @types/js-yaml` if it exists or add a new declaration (.d.ts) file containing `declare module 'js-yaml';`

6 import yaml from 'js-yaml';
                   ~~~~~~~~~

src/utils/exporters/serializers.ts:7:31 - error TS2835: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Did you mean './types.js'?

7 import { ExportOptions } from './types';
                                ~~~~~~~~~

src/utils/exporters/serializers.ts:52:34 - error TS6133: 'key' is declared but its value is never read.

52     return JSON.stringify(data, (key, value) => {
                                    ~~~

src/utils/exporters/tests/sanitize.test.ts:2:58 - error TS2835: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Did you mean '../sanitize.js'?

2 import { sanitizeExportObject, simplifyForLogging } from '../sanitize';
                                                           ~~~~~~~~~~~~~

src/utils/exporters/tests/sanitize.test.ts:99:15 - error TS2339: Property 'next' does not exist on type '{ level: number; }'.

99       current.next = { level: i };
                 ~~~~

src/utils/exporters/tests/sanitize.test.ts:100:25 - error TS2339: Property 'next' does not exist on type '{ level: number; }'.

100       current = current.next;
                            ~~~~

src/utils/exporters/types.ts:4:34 - error TS2834: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Consider adding an extension to the import path.

4 import type { ChatMessage } from '../../shared/types';
                                   ~~~~~~~~~~~~~~~~~~~~

src/utils/exporters/types.ts:5:35 - error TS2307: Cannot find module '../../shared/types/settings.types' or its corresponding type declarations.

5 import type { ChatSettings } from '../../shared/types/settings.types';
                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/utils/exporters/types.ts:6:34 - error TS2835: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Did you mean '../../shared/types/session.js'?

6 import type { ChatSession } from '../../shared/types/session';
                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/utils/exporters/types.ts:7:33 - error TS2835: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Did you mean './sanitize.js'?

7 import { SanitizeOptions } from './sanitize';
                                  ~~~~~~~~~~~~

src/utils/logger.ts:89:23 - error TS2345: Argument of type 'string' is not assignable to parameter of type '"DEBUG" | "INFO" | "WARN" | "ERROR"'.

89       appendLogToFile(formattedMessage + '\n', 'jarvis-ide.log')
                         ~~~~~~~~~~~~~~~~~~~~~~~

src/utils/mcp.ts:26:56 - error TS2769: No overload matches this call.
  Overload 1 of 2, '(predicate: (value: McpMarketplaceItem, index: number, obj: McpMarketplaceItem[]) => value is McpMarketplaceItem, thisArg?: any): McpMarketplaceItem | undefined', gave the following error.
    Argument of type '(item: McpMarketplaceItem) => boolean' is not assignable to parameter of type '(value: McpMarketplaceItem, index: number, obj: McpMarketplaceItem[]) => value is McpMarketplaceItem'.
      Types of parameters 'item' and 'value' are incompatible.
        Property 'mcpId' is missing in type 'import("E:/cline-main/src/shared/types/mcp.types", { with: { "resolution-mode": "import" } }).McpMarketplaceItem' but required in type 'McpMarketplaceItem'.
  Overload 2 of 2, '(predicate: (value: McpMarketplaceItem, index: number, obj: McpMarketplaceItem[]) => unknown, thisArg?: any): McpMarketplaceItem | undefined', gave the following error.
    Argument of type '(item: McpMarketplaceItem) => boolean' is not assignable to parameter of type '(value: McpMarketplaceItem, index: number, obj: McpMarketplaceItem[]) => unknown'.
      Types of parameters 'item' and 'value' are incompatible.
        Property 'mcpId' is missing in type 'import("E:/cline-main/src/shared/types/mcp.types", { with: { "resolution-mode": "import" } }).McpMarketplaceItem' but required in type 'McpMarketplaceItem'.

26   const catalogItem = mcpMarketplaceCatalog.items.find((item: McpMarketplaceItem) => item.mcpId === serverName)
                                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  src/utils/mcp.ts:12:3
    12   mcpId: string
         ~~~~~
    'mcpId' is declared here.
  src/utils/mcp.ts:12:3
    12   mcpId: string
         ~~~~~
    'mcpId' is declared here.

src/utils/mcp.ts:27:3 - error TS2322: Type 'import("E:/cline-main/src/shared/types/mcp.types", { with: { "resolution-mode": "import" } }).McpMarketplaceItem | undefined' is not assignable to type 'McpMarketplaceItem | undefined'.
  Property 'mcpId' is missing in type 'import("E:/cline-main/src/shared/types/mcp.types", { with: { "resolution-mode": "import" } }).McpMarketplaceItem' but required in type 'McpMarketplaceItem'.

27   return catalogItem
     ~~~~~~

  src/utils/mcp.ts:12:3
    12   mcpId: string
         ~~~~~
    'mcpId' is declared here.

src/webview-ui/providers/settingsProvider.test.tsx:13:39 - error TS1361: 'useSettings' cannot be used as a value because it was imported using 'import type'.

13   const { settings, updateSetting } = useSettings();
                                         ~~~~~~~~~~~

  src/webview-ui/providers/settingsProvider.test.tsx:3:33
    3 import type { SettingsProvider, useSettings } from './settingsProvider.js';
                                      ~~~~~~~~~~~
    'useSettings' was imported here.

src/webview-ui/providers/settingsProvider.test.tsx:31:8 - error TS1361: 'SettingsProvider' cannot be used as a value because it was imported using 'import type'.

31       <SettingsProvider>
          ~~~~~~~~~~~~~~~~

  src/webview-ui/providers/settingsProvider.test.tsx:3:15
    3 import type { SettingsProvider, useSettings } from './settingsProvider.js';
                    ~~~~~~~~~~~~~~~~
    'SettingsProvider' was imported here.

src/webview-ui/providers/settingsProvider.test.tsx:33:9 - error TS1361: 'SettingsProvider' cannot be used as a value because it was imported using 'import type'.

33       </SettingsProvider>
           ~~~~~~~~~~~~~~~~

  src/webview-ui/providers/settingsProvider.test.tsx:3:15
    3 import type { SettingsProvider, useSettings } from './settingsProvider.js';
                    ~~~~~~~~~~~~~~~~
    'SettingsProvider' was imported here.

src/webview-ui/providers/settingsProvider.test.tsx:40:8 - error TS1361: 'SettingsProvider' cannot be used as a value because it was imported using 'import type'.

40       <SettingsProvider>
          ~~~~~~~~~~~~~~~~

  src/webview-ui/providers/settingsProvider.test.tsx:3:15
    3 import type { SettingsProvider, useSettings } from './settingsProvider.js';
                    ~~~~~~~~~~~~~~~~
    'SettingsProvider' was imported here.

src/webview-ui/providers/settingsProvider.test.tsx:42:9 - error TS1361: 'SettingsProvider' cannot be used as a value because it was imported using 'import type'.

42       </SettingsProvider>
           ~~~~~~~~~~~~~~~~

  src/webview-ui/providers/settingsProvider.test.tsx:3:15
    3 import type { SettingsProvider, useSettings } from './settingsProvider.js';
                    ~~~~~~~~~~~~~~~~
    'SettingsProvider' was imported here.

src/webview-ui/providers/settingsProvider.test.tsx:68:8 - error TS1361: 'SettingsProvider' cannot be used as a value because it was imported using 'import type'.

68       <SettingsProvider>
          ~~~~~~~~~~~~~~~~

  src/webview-ui/providers/settingsProvider.test.tsx:3:15
    3 import type { SettingsProvider, useSettings } from './settingsProvider.js';
                    ~~~~~~~~~~~~~~~~
    'SettingsProvider' was imported here.

src/webview-ui/providers/settingsProvider.test.tsx:70:9 - error TS1361: 'SettingsProvider' cannot be used as a value because it was imported using 'import type'.

70       </SettingsProvider>
           ~~~~~~~~~~~~~~~~

  src/webview-ui/providers/settingsProvider.test.tsx:3:15
    3 import type { SettingsProvider, useSettings } from './settingsProvider.js';
                    ~~~~~~~~~~~~~~~~
    'SettingsProvider' was imported here.

src/webview/App.tsx:19:8 - error TS1361: 'SettingsPage' cannot be used as a value because it was imported using 'import type'.

19       <SettingsPage />
          ~~~~~~~~~~~~

  src/webview/App.tsx:2:15
    2 import type { SettingsPage } from './pages/SettingsPage.js';
                    ~~~~~~~~~~~~
    'SettingsPage' was imported here.

src/webview/components/PromptEditor.tsx:4:32 - error TS2339: Property 'div' does not exist on type 'typeof import("E:/cline-main/node_modules/styled-components/dist/index")'.

4 const EditorContainer = styled.div`
                                 ~~~

src/webview/components/PromptEditor.tsx:11:22 - error TS2339: Property 'label' does not exist on type 'typeof import("E:/cline-main/node_modules/styled-components/dist/index")'.

11 const Label = styled.label`
                        ~~~~~

src/webview/components/PromptEditor.tsx:17:25 - error TS2339: Property 'textarea' does not exist on type 'typeof import("E:/cline-main/node_modules/styled-components/dist/index")'.

17 const TextArea = styled.textarea`
                           ~~~~~~~~

src/webview/components/PromptEditor.tsx:45:28 - error TS2339: Property 'p' does not exist on type 'typeof import("E:/cline-main/node_modules/styled-components/dist/index")'.

45 const Description = styled.p`
                              ~

src/webview/components/SystemPromptEditor.tsx:5:1 - error TS6133: 'WebviewMessage' is declared but its value is never read.

5 import type { WebviewMessage } from '../../types/webview.types.js';
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/webview/components/SystemPromptEditor.tsx:22:11 - error TS2367: This comparison appears to be unintentional because the types '"error" | "log.export" | "log.openFolder" | "response" | "state" | "action" | "settings" | "theme" | "instructionReceived" | "instructionCompleted" | "instructionFailed" | ... 30 more ... | "chatHistoryCleared"' and '"systemPromptLoaded"' have no overlap.

22       if (message.type === 'systemPromptLoaded') {
             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/webview/components/SystemPromptEditor.tsx:23:34 - error TS2339: Property 'content' does not exist on type 'ExtensionMessage'.

23         setPromptContent(message.content);
                                    ~~~~~~~

src/webview/components/SystemPromptEditor.tsx:24:29 - error TS2551: Property 'filePath' does not exist on type 'ExtensionMessage'. Did you mean 'filePaths'?

24         setFilePath(message.filePath);
                               ~~~~~~~~

  src/shared/ExtensionMessage.ts:120:2
    120  filePaths?: string[];
         ~~~~~~~~~
    'filePaths' is declared here.

src/webview/components/SystemPromptEditor.tsx:115:28 - error TS2322: Type '{ children: string; className: string; }' is not assignable to type 'IntrinsicAttributes & Readonly<Options>'.
  Property 'className' does not exist on type 'IntrinsicAttributes & Readonly<Options>'.

115             <ReactMarkdown className="prose prose-invert">
                               ~~~~~~~~~

src/webview/components/ui/select.tsx:4:1 - error TS6133: 'cn' is declared but its value is never read.

4 import { cn } from "../../../utils/cn.js";
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/webview/components/ui/switch.tsx:3:1 - error TS6133: 'cn' is declared but its value is never read.

3 import { cn } from "../../../utils/cn.js";
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/webview/components/ui/tabs.tsx:3:1 - error TS6133: 'cn' is declared but its value is never read.

3 import { cn } from "../../../utils/cn.js";
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/webview/handlers/TaskQueueMessageHandler.ts:2:10 - error TS1484: 'WebviewMessageHandler' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.

2 import { WebviewMessageHandler } from './WebviewMessageHandler.js';
           ~~~~~~~~~~~~~~~~~~~~~

src/webview/handlers/TaskQueueMessageHandler.ts:4:31 - error TS6196: 'AgentStatus' is declared but never used.

4 import type { TaskQueueState, AgentStatus, Task } from '../../../webview-ui/shared/types.js';
                                ~~~~~~~~~~~

src/webview/handlers/TaskQueueMessageHandler.ts:4:44 - error TS6196: 'Task' is declared but never used.

4 import type { TaskQueueState, AgentStatus, Task } from '../../../webview-ui/shared/types.js';
                                             ~~~~

src/webview/index.test.tsx:1:1 - error TS6133: 'React' is declared but its value is never read.

1 import React from "react";
  ~~~~~~~~~~~~~~~~~~~~~~~~~~

src/webview/index.test.tsx:2:57 - error TS6133: 'vi' is declared but its value is never read.

2 import { describe, expect, test, beforeEach, afterEach, vi } from "vitest";
                                                          ~~

src/webview/index.test.tsx:3:10 - error TS6133: 'render' is declared but its value is never read.

3 import { render, screen } from "@testing-library/react";
           ~~~~~~

src/webview/index.test.tsx:20:12 - error TS2790: The operand of a 'delete' operator must be optional.

20     delete window.initialConfig;
              ~~~~~~~~~~~~~~~~~~~~

src/webview/index.test.tsx:25:18 - error TS2835: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Did you mean './index.js'?

25     await import("./index");
                    ~~~~~~~~~

src/webview/index.tsx:1:1 - error TS6133: 'React' is declared but its value is never read.

1 import React from "react";
  ~~~~~~~~~~~~~~~~~~~~~~~~~~

src/webview/index.tsx:5:1 - error TS6133: 'ChatMessage' is declared but its value is never read.

5 import type { ChatMessage } from "../shared/types.js";
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/webview/index.tsx:5:34 - error TS2307: Cannot find module '../shared/types.js' or its corresponding type declarations.

5 import type { ChatMessage } from "../shared/types.js";
                                   ~~~~~~~~~~~~~~~~~~~~

src/webview/index.tsx:6:1 - error TS6133: 'ExtensionMessage' is declared but its value is never read.

6 import type { ExtensionMessage } from "../shared/ExtensionMessage.js";
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/webview/McpView.test.tsx:35:13 - error TS7031: Binding element 'children' implicitly has an 'any' type.

35   Light: ({ children, style, customStyle, ...props }) => (
               ~~~~~~~~

src/webview/McpView.test.tsx:35:23 - error TS7031: Binding element 'style' implicitly has an 'any' type.

35   Light: ({ children, style, customStyle, ...props }) => (
                         ~~~~~

src/webview/McpView.test.tsx:35:30 - error TS7031: Binding element 'customStyle' implicitly has an 'any' type.

35   Light: ({ children, style, customStyle, ...props }) => (
                                ~~~~~~~~~~~

src/webview/McpView.tsx:1:1 - error TS6192: All imports in import declaration are unused.

1 import React, { useState, useEffect, useRef } from 'react';
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/webview/McpView.tsx:2:1 - error TS6133: 'ReactMarkdown' is declared but its value is never read.

2 import ReactMarkdown from 'react-markdown';
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/webview/McpView.tsx:5:1 - error TS6133: 'vscode' is declared but its value is never read.

5 import * as vscode from 'vscode-webview';
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/webview/McpView.tsx:6:15 - error TS2305: Module '"../types/messages.js"' has no exported member 'Message'.

6 import type { Message } from '../types/messages.js';
                ~~~~~~~

src/webview/McpView.tsx:7:1 - error TS6133: 'WebviewMessage' is declared but its value is never read.

7 import type { WebviewMessage } from '../types/webview.types.js';
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/webview/McpView.tsx:8:1 - error TS6133: 'ApiConfiguration' is declared but its value is never read.

8 import type { ApiConfiguration } from '../shared/types/api.types.js';
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/webview/McpView.tsx:9:1 - error TS6133: 'ExtensionMessage' is declared but its value is never read.

9 import type { ExtensionMessage } from '../shared/ExtensionMessage.js';
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/webview/McpView.tsx:10:1 - error TS6133: 'VSCodeButton' is declared but its value is never read.

10 import { VSCodeButton } from '@vscode/webview-ui-toolkit/react';
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/webview/McpView.tsx:10:30 - error TS2307: Cannot find module '@vscode/webview-ui-toolkit/react' or its corresponding type declarations.

10 import { VSCodeButton } from '@vscode/webview-ui-toolkit/react';
                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/webview/McpView.tsx:13:11 - error TS6196: 'Theme' is declared but never used.

13 interface Theme {
             ~~~~~

src/webview/McpView.tsx:20:11 - error TS6196: 'Session' is declared but never used.

20 interface Session {
             ~~~~~~~

src/webview/McpView.tsx:26:11 - error TS6196: 'Agent' is declared but never used.

26 interface Agent {
             ~~~~~

src/webview/McpView.tsx:37:26 - error TS2339: Property 'div' does not exist on type 'typeof import("E:/cline-main/node_modules/styled-components/dist/index")'.

37 const Container = styled.div`
                            ~~~

src/webview/McpView.tsx:41:22 - error TS2339: Property 'h2' does not exist on type 'typeof import("E:/cline-main/node_modules/styled-components/dist/index")'.

41 const Title = styled.h2`
                        ~~

src/webview/McpView.tsx:46:26 - error TS2339: Property 'div' does not exist on type 'typeof import("E:/cline-main/node_modules/styled-components/dist/index")'.

46 const CodeBlock = styled.div`
                            ~~~

src/webview/pages/SettingsPage.tsx:29:11 - error TS2367: This comparison appears to be unintentional because the types '"getSettings" | "saveSettings" | "clearChat" | "executeCommand" | "chatRequest" | "cancelRequest" | "resetApiKey" | "exportChat" | "selectFiles" | "loadContext" | "modelSwitch" | "progressUpdate" | "searchDocs"' and '"settingsLoaded"' have no overlap.

29       if (message.type === 'settingsLoaded') {
             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/webview/pages/SettingsPage.tsx:30:28 - error TS2339: Property 'settings' does not exist on type 'never'.

30         setUseDocs(message.settings.use_docs);
                              ~~~~~~~~

src/webview/pages/SettingsPage.tsx:31:30 - error TS2339: Property 'settings' does not exist on type 'never'.

31         setCoderMode(message.settings.coder_mode);
                                ~~~~~~~~

src/webview/pages/SettingsPage.tsx:32:34 - error TS2339: Property 'settings' does not exist on type 'never'.

32         setContextPrompt(message.settings.contextPrompt || '');
                                    ~~~~~~~~

src/webview/pages/SettingsPage.tsx:33:34 - error TS2339: Property 'settings' does not exist on type 'never'.

33         setSelectedModel(message.settings.selectedModel || '');
                                    ~~~~~~~~

src/webview/pages/SettingsPage.tsx:34:31 - error TS2339: Property 'settings' does not exist on type 'never'.

34         setMultiAgent(message.settings.multi_agent || false);
                                 ~~~~~~~~

src/webview/pages/SettingsPage.tsx:36:21 - error TS2339: Property 'settings' does not exist on type 'never'.

36         if (message.settings.availableModels) {
                       ~~~~~~~~

src/webview/pages/SettingsPage.tsx:37:38 - error TS2339: Property 'settings' does not exist on type 'never'.

37           setAvailableModels(message.settings.availableModels);
                                        ~~~~~~~~

src/webview/pages/SettingsPage.tsx:41:11 - error TS2367: This comparison appears to be unintentional because the types '"getSettings" | "saveSettings" | "clearChat" | "executeCommand" | "chatRequest" | "cancelRequest" | "resetApiKey" | "exportChat" | "selectFiles" | "loadContext" | "modelSwitch" | "progressUpdate" | "searchDocs"' and '"settingUpdated"' have no overlap.

41       if (message.type === 'settingUpdated') {
             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/webview/pages/SettingsPage.tsx:43:25 - error TS2339: Property 'key' does not exist on type 'never'.

43         switch (message.key) {
                           ~~~

src/webview/pages/SettingsPage.tsx:45:32 - error TS2339: Property 'value' does not exist on type 'never'.

45             setUseDocs(message.value as boolean);
                                  ~~~~~

src/webview/pages/SettingsPage.tsx:48:34 - error TS2339: Property 'value' does not exist on type 'never'.

48             setCoderMode(message.value as boolean);
                                    ~~~~~

src/webview/pages/SettingsPage.tsx:51:38 - error TS2339: Property 'value' does not exist on type 'never'.

51             setContextPrompt(message.value as string);
                                        ~~~~~

src/webview/pages/SettingsPage.tsx:54:38 - error TS2339: Property 'value' does not exist on type 'never'.

54             setSelectedModel(message.value as string);
                                        ~~~~~

src/webview/pages/SettingsPage.tsx:57:35 - error TS2339: Property 'value' does not exist on type 'never'.

57             setMultiAgent(message.value as boolean);
                                     ~~~~~

src/webview/SettingsView.test.tsx:4:15 - error TS6196: 'SettingsProvider' is declared but never used.

4 import type { SettingsProvider, useSettings } from '../webview-ui/providers/settingsProvider.js';
                ~~~~~~~~~~~~~~~~

src/webview/SettingsView.test.tsx:60:15 - error TS1361: 'useSettings' cannot be used as a value because it was imported using 'import type'.

60     vi.mocked(useSettings).mockReturnValue({
                 ~~~~~~~~~~~

  src/webview/SettingsView.test.tsx:4:33
    4 import type { SettingsProvider, useSettings } from '../webview-ui/providers/settingsProvider.js';
                                      ~~~~~~~~~~~
    'useSettings' was imported here.

src/webview/SettingsView.test.tsx:60:44 - error TS2345: Argument of type '{ settings: { provider: string; model: string; coder_mode: true; use_docs: false; contextPrompt: string; systemPrompt: string; }; updateSetting: any; saveSystemPrompt: any; }' is not assignable to parameter of type 'SettingsContextType'.
  Type '{ settings: { provider: string; model: string; coder_mode: true; use_docs: false; contextPrompt: string; systemPrompt: string; }; updateSetting: any; saveSystemPrompt: any; }' is missing the following properties from type 'SettingsContextType': selectModel, openSystemPromptFile, setSystemPromptPath

 60     vi.mocked(useSettings).mockReturnValue({
                                               ~
 61       settings: {
    ~~~~~~~~~~~~~~~~~
...
 70       saveSystemPrompt: mockSaveSystemPrompt
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 71     });
    ~~~~~

src/webview/SettingsView.test.tsx:75:13 - error TS1361: 'SettingsView' cannot be used as a value because it was imported using 'import type'.

75     render(<SettingsView />);
               ~~~~~~~~~~~~

  src/webview/SettingsView.test.tsx:3:15
    3 import type { SettingsView } from './SettingsView.js';
                    ~~~~~~~~~~~~
    'SettingsView' was imported here.

src/webview/SettingsView.test.tsx:84:13 - error TS1361: 'SettingsView' cannot be used as a value because it was imported using 'import type'.

84     render(<SettingsView />);
               ~~~~~~~~~~~~

  src/webview/SettingsView.test.tsx:3:15
    3 import type { SettingsView } from './SettingsView.js';
                    ~~~~~~~~~~~~
    'SettingsView' was imported here.

src/webview/SettingsView.test.tsx:92:13 - error TS1361: 'SettingsView' cannot be used as a value because it was imported using 'import type'.

92     render(<SettingsView />);
               ~~~~~~~~~~~~

  src/webview/SettingsView.test.tsx:3:15
    3 import type { SettingsView } from './SettingsView.js';
                    ~~~~~~~~~~~~
    'SettingsView' was imported here.

src/webview/SettingsView.test.tsx:100:13 - error TS1361: 'SettingsView' cannot be used as a value because it was imported using 'import type'.

100     render(<SettingsView />);
                ~~~~~~~~~~~~

  src/webview/SettingsView.test.tsx:3:15
    3 import type { SettingsView } from './SettingsView.js';
                    ~~~~~~~~~~~~
    'SettingsView' was imported here.

src/webview/SettingsView.test.tsx:103:21 - error TS2345: Argument of type 'HTMLElement | undefined' is not assignable to parameter of type 'Element | Node | Document | Window'.
  Type 'undefined' is not assignable to type 'Element | Node | Document | Window'.

103     fireEvent.click(toggle);
                        ~~~~~~

src/webview/SettingsView.test.tsx:108:13 - error TS1361: 'SettingsView' cannot be used as a value because it was imported using 'import type'.

108     render(<SettingsView />);
                ~~~~~~~~~~~~

  src/webview/SettingsView.test.tsx:3:15
    3 import type { SettingsView } from './SettingsView.js';
                    ~~~~~~~~~~~~
    'SettingsView' was imported here.

src/webview/SettingsView.test.tsx:111:21 - error TS2345: Argument of type 'HTMLElement | undefined' is not assignable to parameter of type 'Element | Node | Document | Window'.
  Type 'undefined' is not assignable to type 'Element | Node | Document | Window'.

111     fireEvent.click(toggle);
                        ~~~~~~

src/webview/SettingsView.test.tsx:116:13 - error TS1361: 'SettingsView' cannot be used as a value because it was imported using 'import type'.

116     render(<SettingsView />);
                ~~~~~~~~~~~~

  src/webview/SettingsView.test.tsx:3:15
    3 import type { SettingsView } from './SettingsView.js';
                    ~~~~~~~~~~~~
    'SettingsView' was imported here.

src/webview/SettingsView.test.tsx:124:13 - error TS1361: 'SettingsView' cannot be used as a value because it was imported using 'import type'.

124     render(<SettingsView />);
                ~~~~~~~~~~~~

  src/webview/SettingsView.test.tsx:3:15
    3 import type { SettingsView } from './SettingsView.js';
                    ~~~~~~~~~~~~
    'SettingsView' was imported here.

src/webview/SettingsView.tsx:5:3 - error TS6133: 'VSCodeTextArea' is declared but its value is never read.

5   VSCodeTextArea,
    ~~~~~~~~~~~~~~

src/webview/SettingsView.tsx:10:3 - error TS6133: 'VSCodeOption' is declared but its value is never read.

10   VSCodeOption,
     ~~~~~~~~~~~~

src/webview/SettingsView.tsx:13:8 - error TS2307: Cannot find module '@vscode/webview-ui-toolkit/react' or its corresponding type declarations.

13 } from '@vscode/webview-ui-toolkit/react';
          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/webview/SettingsView.tsx:21:34 - error TS2339: Property 'div' does not exist on type 'typeof import("E:/cline-main/node_modules/styled-components/dist/index")'.

21 const SettingsContainer = styled.div`
                                    ~~~

src/webview/SettingsView.tsx:28:24 - error TS2339: Property 'div' does not exist on type 'typeof import("E:/cline-main/node_modules/styled-components/dist/index")'.

28 const Section = styled.div`
                          ~~~

src/webview/SettingsView.tsx:34:24 - error TS2339: Property 'div' does not exist on type 'typeof import("E:/cline-main/node_modules/styled-components/dist/index")'.

34 const Warning = styled.div`
                          ~~~

src/webview/SettingsView.tsx:40:26 - error TS2339: Property 'span' does not exist on type 'typeof import("E:/cline-main/node_modules/styled-components/dist/index")'.

40 const InfoBadge = styled.span`
                            ~~~~

src/webview/SettingsView.tsx:47:7 - error TS6133: 'ModelOption' is declared but its value is never read.

47 const ModelOption = styled.div`
         ~~~~~~~~~~~

src/webview/SettingsView.tsx:47:28 - error TS2339: Property 'div' does not exist on type 'typeof import("E:/cline-main/node_modules/styled-components/dist/index")'.

47 const ModelOption = styled.div`
                              ~~~

src/webview/SettingsView.tsx:53:26 - error TS2339: Property 'div' does not exist on type 'typeof import("E:/cline-main/node_modules/styled-components/dist/index")'.

53 const FormGroup = styled.div`
                            ~~~

src/webview/SettingsView.tsx:58:89 - error TS6133: 'setSystemPromptPath' is declared but its value is never read.

58   const { settings, updateSetting, selectModel, saveSystemPrompt, openSystemPromptFile, setSystemPromptPath } = useSettings();
                                                                                           ~~~~~~~~~~~~~~~~~~~

src/webview/SettingsView.tsx:58:113 - error TS1361: 'useSettings' cannot be used as a value because it was imported using 'import type'.

58   const { settings, updateSetting, selectModel, saveSystemPrompt, openSystemPromptFile, setSystemPromptPath } = useSettings();
                                                                                                                   ~~~~~~~~~~~

  src/webview/SettingsView.tsx:14:15
    14 import type { useSettings } from '../webview-ui/providers/settingsProvider.js';
                     ~~~~~~~~~~~
    'useSettings' was imported here.

src/webview/SettingsView.tsx:116:32 - error TS2345: Argument of type '(model: string) => JSX.Element' is not assignable to parameter of type '(value: AvailableModel, index: number, array: AvailableModel[]) => Element'.
  Types of parameters 'model' and 'value' are incompatible.
    Type 'AvailableModel' is not assignable to type 'string'.

116           {availableModels.map((model: string) => (
                                   ~~~~~~~~~~~~~~~~~~~~
117             <option key={model} value={model}>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
...
119             </option>
    ~~~~~~~~~~~~~~~~~~~~~
120           ))}
    ~~~~~~~~~~~

src/webview/SettingsView.tsx:243:11 - error TS2322: Type '{ value: string; onChange: (value: any) => void; onSave: (content: string) => void; onOpenFile: () => void; filePath: string | undefined; description: string; }' is not assignable to type 'IntrinsicAttributes'.
  Property 'value' does not exist on type 'IntrinsicAttributes'.

243           value={settings.systemPrompt}
              ~~~~~

src/webview/SettingsView.tsx:244:22 - error TS7006: Parameter 'value' implicitly has an 'any' type.

244           onChange={(value) => updateSetting('systemPrompt', value)}
                         ~~~~~

src/webview/webview.test.tsx:1:1 - error TS6133: 'React' is declared but its value is never read.

1 import React from "react";
  ~~~~~~~~~~~~~~~~~~~~~~~~~~

src/webview/webview.test.tsx:7:1 - error TS6133: 'ChatMessage' is declared but its value is never read.

7 import type { ChatMessage } from "../shared/types.js";
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/webview/webview.test.tsx:7:34 - error TS2307: Cannot find module '../shared/types.js' or its corresponding type declarations.

7 import type { ChatMessage } from "../shared/types.js";
                                   ~~~~~~~~~~~~~~~~~~~~

src/webview/webview.test.tsx:8:1 - error TS6133: 'ExtensionMessage' is declared but its value is never read.

8 import type { ExtensionMessage } from "../shared/ExtensionMessage.js";
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/webview/webview.test.tsx:9:10 - error TS2724: '"./webview.js"' has no exported member named 'WebView'. Did you mean 'Webview'?

9 import { WebView } from "./WebView.js";
           ~~~~~~~

  src/webview/webview.tsx:96:17
    96 export function Webview({ config }: WebviewProps) {
                       ~~~~~~~
    'Webview' is declared here.

src/webview/webview.test.tsx:9:25 - error TS1149: File name 'E:/cline-main/src/webview/WebView.tsx' differs from already included file name 'E:/cline-main/src/webview/webview.tsx' only in casing.
  The file is in the program because:
    Imported via "./webview.js" from file 'E:/cline-main/src/webview/index.tsx'
    Imported via "./webview.js" from file 'E:/cline-main/src/webview/webview.test.tsx'
    Imported via "./WebView.js" from file 'E:/cline-main/src/webview/webview.test.tsx'
    Matched by include pattern 'src/**/*' in 'E:/cline-main/tsconfig.json'
  File is ECMAScript module because 'E:/cline-main/package.json' has field "type" with value "module"

9 import { WebView } from "./WebView.js";
                          ~~~~~~~~~~~~~~

  src/webview/index.tsx:3:25
    3 import { Webview } from "./webview.js";
                              ~~~~~~~~~~~~~~
    File is included via import here.
  src/webview/webview.test.tsx:5:25
    5 import { Webview } from "./webview.js";
                              ~~~~~~~~~~~~~~
    File is included via import here.
  tsconfig.json:58:14
    58  "include": ["src/**/*", "src/**/*.json"],
                    ~~~~~~~~~~
    File is matched by include pattern specified here.

src/webview/webview.test.tsx:36:7 - error TS2741: Property 'provider' is missing in type '{ apiKey: string; temperature: number; }' but required in type 'ApiConfiguration'.

36 const mockConfig: ApiConfiguration = {
         ~~~~~~~~~~

  src/shared/types/api.types.ts:173:3
    173   provider: LLMProviderId | string;
          ~~~~~~~~
    'provider' is declared here.

src/webview/webview.test.tsx:229:18 - error TS2835: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Did you mean './index.js'?

229     await import("./index");
                     ~~~~~~~~~

src/webview/webview.tsx:1:38 - error TS6133: 'useRef' is declared but its value is never read.

1 import React, { useEffect, useState, useRef } from "react";
                                       ~~~~~~

src/webview/webview.tsx:2:1 - error TS6133: 'ReactMarkdown' is declared but its value is never read.

2 import ReactMarkdown from 'react-markdown';
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/webview/webview.tsx:4:1 - error TS6133: 'vscode' is declared but its value is never read.

4 import * as vscode from 'vscode-webview';
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

src/webview/webview.tsx:9:26 - error TS2339: Property 'div' does not exist on type 'typeof import("E:/cline-main/node_modules/styled-components/dist/index")'.

9 const Container = styled.div`
                           ~~~

src/webview/webview.tsx:17:23 - error TS2339: Property 'header' does not exist on type 'typeof import("E:/cline-main/node_modules/styled-components/dist/index")'.

17 const Header = styled.header`
                         ~~~~~~

src/webview/webview.tsx:22:22 - error TS2339: Property 'h1' does not exist on type 'typeof import("E:/cline-main/node_modules/styled-components/dist/index")'.

22 const Title = styled.h1`
                        ~~

src/webview/webview.tsx:29:24 - error TS2339: Property 'main' does not exist on type 'typeof import("E:/cline-main/node_modules/styled-components/dist/index")'.

29 const Content = styled.main`
                          ~~~~

src/webview/webview.tsx:35:28 - error TS2339: Property 'div' does not exist on type 'typeof import("E:/cline-main/node_modules/styled-components/dist/index")'.

35 const MessageList = styled.div`
                              ~~~

src/webview/webview.tsx:41:28 - error TS2339: Property 'div' does not exist on type 'typeof import("E:/cline-main/node_modules/styled-components/dist/index")'.

41 const MessageItem = styled.div<{ role: MessageRole }>`
                              ~~~

src/webview/webview.tsx:44:18 - error TS7006: Parameter 'props' implicitly has an 'any' type.

44   background: ${(props) =>
                    ~~~~~

src/webview/webview.tsx:55:23 - error TS2339: Property 'footer' does not exist on type 'typeof import("E:/cline-main/node_modules/styled-components/dist/index")'.

55 const Footer = styled.footer`
                         ~~~~~~

src/webview/webview.tsx:60:22 - error TS2339: Property 'textarea' does not exist on type 'typeof import("E:/cline-main/node_modules/styled-components/dist/index")'.

60 const Input = styled.textarea`
                        ~~~~~~~~

src/webview/webview.tsx:75:23 - error TS2339: Property 'button' does not exist on type 'typeof import("E:/cline-main/node_modules/styled-components/dist/index")'.

75 const Button = styled.button`
                         ~~~~~~

src/webview/webview.tsx:96:25 - error TS6133: 'config' is declared but its value is never read.

96 export function Webview({ config }: WebviewProps) {
                           ~~~~~~~~~~

src/webview/webview.tsx:199:22 - error TS7006: Parameter 'e' implicitly has an 'any' type.

199           onChange={(e) => setInput(e.target.value)}
                         ~

src/webview/WebviewManager.ts:3:10 - error TS1484: 'WebviewMessageHandler' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.

3 import { WebviewMessageHandler } from './handlers/WebviewMessageHandler.js';
           ~~~~~~~~~~~~~~~~~~~~~

src/webview/WebviewManager.ts:124:39 - error TS4111: Property 'NODE_ENV' comes from an index signature, so it must be accessed with ['NODE_ENV'].

124     const isDevelopment = process.env.NODE_ENV === 'development';
                                          ~~~~~~~~

webview-ui/src/utils/vscode.ts:1:37 - error TS2307: Cannot find module '@/shared/types' or its corresponding type declarations.

1 import type { WebviewMessage } from "@/shared/types"
                                      ~~~~~~~~~~~~~~~~

webview-ui/src/utils/vscode.ts:2:1 - error TS6133: 'ApiConfiguration' is declared but its value is never read.

2 import type { ApiConfiguration } from "@/shared/types/api.types"
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

webview-ui/src/utils/vscode.ts:2:39 - error TS2307: Cannot find module '@/shared/types/api.types' or its corresponding type declarations.

2 import type { ApiConfiguration } from "@/shared/types/api.types"
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~

webview-ui/src/utils/vscode.ts:3:1 - error TS6133: 'WebviewApi' is declared but its value is never read.

3 import type { WebviewApi } from "vscode-webview"
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


Found 2660 errors in 318 files.

Errors  Files
     3  src/__mocks__/vscode-webview.ts:3
     1  src/__tests__/mcp/searchDocsHandler.test.ts:2
     1  src/agent/api/ApiProvider.ts:1
    10  src/agent/api/getApiProvider.ts:10
    41  src/agent/api/providers/__tests__/AnthropicProvider.test.ts:12
    37  src/agent/api/providers/AnthropicProvider.ts:1
    11  src/agent/api/providers/GeminiProvider.ts:1
    19  src/agent/api/providers/LLMStudioProvider.ts:1
    14  src/agent/api/providers/MistralProvider.ts:1
    25  src/agent/api/providers/OllamaProvider.ts:1
    24  src/agent/api/providers/OpenAIProvider.ts:7
     6  src/agent/api/providers/OpenRouterProvider.ts:1
     6  src/agent/api/providers/TogetherProvider.ts:1
     6  src/agent/api/providers/VertexProvider.ts:1
     1  src/agent/FileManager.ts:3
     9  src/agent/JarvisAgent.ts:1
     2  src/agent/runAgent.ts:3
     8  src/agent/sendPromptToLLM.ts:2
    27  src/api/cache/StreamCache.test.ts:8
     3  src/api/cache/StreamCache.ts:41
     3  src/api/handlers/BaseStreamHandler.ts:2
    15  src/api/index.ts:12
     7  src/api/provider/base.ts:1
    21  src/api/provider/getApiProvider.ts:1
     6  src/api/provider/lmstudio.ts:1
     7  src/api/provider/sambanova.ts:1
    10  src/api/provider/together.ts:1
    16  src/api/providers/anthropic.ts:3
    10  src/api/providers/asksage.ts:2
    47  src/api/providers/bedrock.ts:2
    16  src/api/providers/config/deepseek-config.test.ts:7
     1  src/api/providers/config/deepseek-config.ts:36
    10  src/api/providers/config/openai-config.test.ts:7
     3  src/api/providers/config/openai-config.ts:11
    13  src/api/providers/deepseek.test.ts:1
    20  src/api/providers/deepseek.ts:8
    14  src/api/providers/gemini.ts:2
    20  src/api/providers/groq.ts:1
    17  src/api/providers/litellm.ts:5
     8  src/api/providers/lmstudio.ts:2
    20  src/api/providers/mistral.ts:2
    10  src/api/providers/ollama.ts:1
    16  src/api/providers/openai-native.ts:2
    27  src/api/providers/openai.ts:4
    25  src/api/providers/openrouter.ts:2
    11  src/api/providers/perplexity.ts:1
    18  src/api/providers/qwen.ts:2
    12  src/api/providers/requesty.ts:2
    12  src/api/providers/sambanova.ts:3
    16  src/api/providers/together.ts:2
    14  src/api/providers/transform/deepseek-format.ts:1
     5  src/api/providers/types.ts:4
    18  src/api/providers/vertex.ts:3
    20  src/api/providers/vscode-lm.ts:2
     9  src/api/providers/xai.ts:3
    11  src/api/providers/zero.ts:1
     1  src/api/retry.ts:1
    29  src/api/transform/anthropic-format.ts:6
     6  src/api/transform/BaseTransformer.ts:6
    18  src/api/transform/gemini-format.ts:1
     5  src/api/transform/link-preview.ts:1
     4  src/api/transform/llmstudio-format.ts:45
     4  src/api/transform/mistral-format.ts:45
    13  src/api/transform/o1-format.ts:2
     9  src/api/transform/ollama-format.ts:21
    28  src/api/transform/openai-format.ts:16
     9  src/api/transform/openrouter-stream.ts:1
    14  src/api/transform/r1-format.ts:2
    15  src/api/transform/stream.ts:5
     3  src/api/transform/vertex-format.ts:1
     3  src/api/transform/vertex-stream.ts:1
    16  src/api/transform/vscode-lm-format.ts:1
     5  src/api/types/index.ts:1
     1  src/api/utils/cost.ts:1
     1  src/api/utils/logger.mock.ts:1
     1  src/api/utils/logger.ts:1
     1  src/api/utils/stream.ts:1
     1  src/api/utils/test.ts:1
    17  src/benchmark/BenchmarkStorage.ts:67
    13  src/commands/agentCommands.ts:2
     2  src/commands/systemPrompt.ts:3
    10  src/components/OpenRouterModelPicker.test.tsx:1
     7  src/components/OpenRouterModelPicker.tsx:1
     8  src/components/settings/OpenRouterModelPicker.tsx:2
     2  src/components/settings/SettingsPanel.tsx:2
     1  src/components/settings/SettingsView.tsx:2
     1  src/components/settings/TabNavbarExample.tsx:29
     3  src/components/settings/ThinkingBudgetSlider.tsx:2
     2  src/components/settings/utils.ts:1
     3  src/components/TaskQueueView.tsx:2
     2  src/context/ExtensionStateContext.tsx:4
     6  src/core/ai/AIFileManager.ts:2
    15  src/core/assistant-message/diff.ts:23
     3  src/core/assistant-message/parse-assistant-message.ts:1
     4  src/core/context-management/ContextManager.ts:2
     1  src/core/file-operations/FileManager.ts:1
     4  src/core/ignore/JarvisIdeIgnoreController.test.ts:1
     2  src/core/JarvisIde.test.ts:1
     7  src/core/mas/CoderAgent.ts:1
    12  src/core/mas/SupervisorAgent.ts:2
     2  src/core/mentions/index.ts:9
     7  src/core/prompts/responses.ts:1
     9  src/core/prompts/system.ts:1
     3  src/core/webview/ExtensionMessageExtensions.ts:6
   119  src/core/webview/JarvisProvider.ts:6
     1  src/data/modelLoader.ts:1
     2  src/data/modelProviders.ts:1
     4  src/data/openrouterModels.ts:1
     5  src/dev/commands/tasks.ts:5
     6  src/exports/index.ts:3
     3  src/extension.test.ts:6
    97  src/extension.ts:5
     3  src/hooks/useConfigModel.ts:6
     3  src/hooks/useJarvisIdeApiKey.ts:9
     3  src/hooks/useJarvisIdeBaseUrl.ts:9
     3  src/hooks/useJarvisIdeCapabilities.ts:9
     9  src/hooks/useJarvisIdeChat.ts:2
     3  src/hooks/useJarvisIdeContext.ts:3
     5  src/hooks/useJarvisIdeCustomInstructions.ts:4
     5  src/hooks/useJarvisIdeMaxTokens.ts:4
     7  src/hooks/useJarvisIdeModel.ts:2
     5  src/hooks/useJarvisIdePricePer1kTokens.ts:4
     4  src/hooks/useJarvisIdePrompt.ts:3
     3  src/hooks/useJarvisIdeSettings.ts:10
     5  src/hooks/useJarvisIdeStream.ts:4
     3  src/hooks/useJarvisIdeSystemPrompt.ts:9
     3  src/hooks/useJarvisIdeTelemetry.ts:2
     5  src/hooks/useJarvisIdeTemperature.ts:4
     5  src/hooks/useJarvisIdeThinkingBudget.ts:4
     5  src/hooks/useJarvisIdeUsage.ts:4
     1  src/integrations/checkpoints/CheckpointExclusions.ts:319
     4  src/integrations/checkpoints/CheckpointGitOperations.ts:4
     1  src/integrations/checkpoints/CheckpointMigration.ts:45
     6  src/integrations/checkpoints/CheckpointTracker.ts:101
     1  src/integrations/checkpoints/CheckpointUtils.ts:21
     1  src/integrations/diagnostics/index.ts:14
     9  src/integrations/editor/DiffViewProvider.ts:6
     5  src/integrations/misc/export-markdown.ts:4
     1  src/integrations/misc/link-preview.ts:3
     1  src/integrations/misc/open-file.ts:13
     1  src/integrations/terminal/get-latest-output.ts:34
     5  src/integrations/terminal/TerminalManager.ts:5
     4  src/integrations/terminal/TerminalProcess.test.ts:7
     9  src/integrations/terminal/TerminalProcess.ts:77
     2  src/integrations/terminal/TerminalRegistry.ts:17
     5  src/integrations/theme/getTheme.ts:4
     7  src/mas/MasManager.ts:29
     2  src/mas/MasStateManager.ts:10
     5  src/mas/services/MasPersistenceService.ts:5
     7  src/mas/services/TaskQueueMessageHandler.ts:2
     6  src/mas/services/TaskQueueService.ts:2
     4  src/mas/TaskQueueManager.ts:2
    12  src/providers/BaseLLMProvider.ts:6
     1  src/providers/LLMRouter.ts:110
     3  src/providers/local/GGUFProvider.ts:22
    10  src/providers/local/LMDeployProvider.ts:8
    14  src/providers/local/LMStudioProvider.ts:59
    10  src/providers/local/OllamaProvider.ts:8
     9  src/providers/remote/AnthropicProvider.ts:66
    11  src/providers/remote/GoogleAIProvider.ts:79
    14  src/providers/remote/GroqProvider.ts:66
    12  src/providers/remote/MistralProvider.ts:67
    14  src/providers/remote/OpenAIProvider.ts:78
    13  src/scripts/__tests__/fix-imports.test.ts:3
     5  src/scripts/benchmark-import.ts:19
     6  src/scripts/fix-imports-integration.test.ts:9
    17  src/scripts/fix-imports.test.ts:2
     4  src/services/AgentManager.ts:234
     8  src/services/browser/BrowserSession.ts:4
     2  src/services/browser/UrlContentFetcher.ts:60
     3  src/services/glob/list-files.ts:40
     2  src/services/lmstudio/LMStudioService.ts:1
     2  src/services/mcp/__tests__/mcpDispatcher.test.ts:2
     5  src/services/mcp/core/navigation/exploratory.test.ts:2
    11  src/services/mcp/core/navigation/exploratory.ts:1
     8  src/services/mcp/core/navigation/hybrid.test.ts:2
     4  src/services/mcp/core/navigation/hybrid.ts:3
     7  src/services/mcp/core/navigation/semantic.test.ts:2
    10  src/services/mcp/core/navigation/semantic.ts:1
    21  src/services/mcp/handlers/askDocsHandler.ts:15
     1  src/services/mcp/handlers/codeGenerateHandler.ts:9
    13  src/services/mcp/handlers/configLinter.test.ts:37
    12  src/services/mcp/handlers/configLinter.ts:1
    19  src/services/mcp/handlers/contextClearHandler.ts:2
     4  src/services/mcp/handlers/contextEditHandler.ts:1
     5  src/services/mcp/handlers/contextExportHandler.ts:1
     5  src/services/mcp/handlers/contextGraphExportHandler.ts:1
     5  src/services/mcp/handlers/contextGraphHandler.ts:1
    11  src/services/mcp/handlers/contextImportHandler.ts:1
     7  src/services/mcp/handlers/contextInjectHandler.ts:15
     5  src/services/mcp/handlers/contextLinkHandler.ts:1
     4  src/services/mcp/handlers/contextLinksOfHandler.ts:1
    14  src/services/mcp/handlers/contextListHandler.ts:20
    12  src/services/mcp/handlers/contextNavigateHandler.test.ts:1
    29  src/services/mcp/handlers/contextNavigateHandler.ts:1
    22  src/services/mcp/handlers/contextSearchByTagsHandler.ts:3
     6  src/services/mcp/handlers/contextTagHandler.ts:2
     4  src/services/mcp/handlers/contextUnlinkHandler.ts:1
    12  src/services/mcp/handlers/directoryScanner.test.ts:3
     3  src/services/mcp/handlers/directoryScanner.ts:1
     6  src/services/mcp/handlers/errorResolver.ts:1
     3  src/services/mcp/handlers/fileSummarizer.ts:2
     6  src/services/mcp/handlers/fsFormatHandler.ts:19
     7  src/services/mcp/handlers/fsWriteHandler.ts:14
     7  src/services/mcp/handlers/projectDepGraphHandler.ts:19
     6  src/services/mcp/handlers/projectLintHandler.ts:25
     2  src/services/mcp/handlers/projectSummaryHandler.ts:23
    10  src/services/mcp/handlers/readFileHandler.test.ts:57
     2  src/services/mcp/handlers/readFileHandler.ts:43
     5  src/services/mcp/handlers/refactorSnippetHandler.ts:75
     4  src/services/mcp/handlers/searchDocsHandler.test.ts:11
     8  src/services/mcp/handlers/searchDocsHandler.ts:5
     8  src/services/mcp/handlers/testRunHandler.ts:16
     2  src/services/mcp/mcp.types.ts:95
     1  src/services/mcp/McpDispatcher.ts:189
     6  src/services/mcp/McpHub.ts:49
     2  src/services/mcp/run-server.ts:11
     3  src/services/mcp/test-script.ts:14
    14  src/services/mcp/toolsListServer.ts:15
    18  src/services/mcp/utils/navigationGraph.test.ts:7
     1  src/services/mcp/utils/navigationGraph.ts:1
     1  src/services/ripgrep/index.ts:6
     7  src/services/settings/SettingsManager.test.ts:5
     2  src/services/settings/SettingsManager.ts:4
     1  src/services/TaskQueueService.ts:3
     3  src/services/telemetry/TelemetryService.ts:3
     2  src/services/TelemetryService.ts:2
     1  src/services/themeManager.ts:107
     9  src/services/tree-sitter/index.ts:4
    10  src/services/tree-sitter/languageParser.ts:3
     3  src/shared/__tests__/__mocks__/vscode.ts:5
    10  src/shared/__tests__/schema-coverage.spec.ts:1
     1  src/shared/__tests__/setup.ts:5
    11  src/shared/__tests__/validators.more.test.ts:4
    13  src/shared/__tests__/validators.test.ts:4
     4  src/shared/array.test.ts:4
     3  src/shared/array.ts:1
     1  src/shared/ChatContent.ts:36
     7  src/shared/ChatContentHelpers.ts:16
    10  src/shared/combineApiRequests.ts:2
    11  src/shared/combineCommandSequences.ts:2
    16  src/shared/ExtensionMessage.ts:14
     1  src/shared/getApiMetrics.ts:1
     1  src/shared/HistoryItem.ts:1
     2  src/shared/mcp.ts:1
    13  src/shared/protocols/convertToWebviewMessage.ts:6
    15  src/shared/protocols/validateWebviewMessage.test.ts:7
     8  src/shared/settings.ts:1
     1  src/shared/TelemetrySetting.ts:22
     6  src/shared/typeGuards.ts:5
     6  src/shared/types/api.types.ts:8
     4  src/shared/types/convertToWebviewMessage.test.ts:6
     2  src/shared/types/global.ts:8
     4  src/shared/types/index.ts:5
     1  src/shared/types/message.types.ts:70
     6  src/shared/types/provider.types.ts:4
     3  src/shared/types/session.ts:6
     1  src/shared/types/telemetry.types.ts:23
     3  src/shared/types/webview.ts:6
    36  src/shared/types/webview.types.test.ts:24
    13  src/shared/types/webview.types.ts:8
    42  src/shared/types/webviewMessageUnion.test.ts:24
     5  src/shared/types/webviewMessageUnion.ts:39
    29  src/shared/validators.ts:10
    17  src/storage/benchmark/BenchmarkStorage.ts:5
    12  src/test/extension.test.ts:8
     1  src/test/fileOperations.test.ts:21
     3  src/test/JarvisAgentTest.ts:8
     7  src/test/shell.test.ts:37
     1  src/test/suite/fileOperations.test.ts:21
     6  src/test/suite/index.ts:7
    12  src/test/suite/modelLoader.test.ts:1
     1  src/test/vitest.setup.ts:2
     1  src/test/webview/chat-native.test.ts:4
     2  src/types/api.types.ts:11
     1  src/types/chat.types.ts:186
     2  src/types/ChatMessage.ts:16
     4  src/types/extension.test.ts:3
     2  src/types/extension.ts:1
     1  src/types/extension.types.ts:3
     2  src/types/global.test.ts:49
     1  src/types/messages.ts:7
     3  src/utils/chatExport.ts:1
     8  src/utils/cost.test.ts:11
    11  src/utils/exporters.ts:8
     6  src/utils/exporters/__tests__/index.test.ts:6
     4  src/utils/exporters/__tests__/integration.test.ts:2
     3  src/utils/exporters/__tests__/sanitize.test.ts:2
     3  src/utils/exporters/csv.ts:6
     2  src/utils/exporters/examples/usage.ts:6
    10  src/utils/exporters/html.ts:6
    13  src/utils/exporters/index.ts:6
     7  src/utils/exporters/markdown.ts:6
     2  src/utils/exporters/sanitize.ts:6
     3  src/utils/exporters/serializers.ts:6
     3  src/utils/exporters/tests/sanitize.test.ts:2
     4  src/utils/exporters/types.ts:4
     1  src/utils/logger.ts:89
     2  src/utils/mcp.ts:26
     7  src/webview-ui/providers/settingsProvider.test.tsx:13
     1  src/webview/App.tsx:19
     4  src/webview/components/PromptEditor.tsx:4
     5  src/webview/components/SystemPromptEditor.tsx:5
     1  src/webview/components/ui/select.tsx:4
     1  src/webview/components/ui/switch.tsx:3
     1  src/webview/components/ui/tabs.tsx:3
     3  src/webview/handlers/TaskQueueMessageHandler.ts:2
     5  src/webview/index.test.tsx:1
     4  src/webview/index.tsx:1
     3  src/webview/McpView.test.tsx:35
    15  src/webview/McpView.tsx:1
    15  src/webview/pages/SettingsPage.tsx:29
    12  src/webview/SettingsView.test.tsx:4
    15  src/webview/SettingsView.tsx:5
     8  src/webview/webview.test.tsx:1
    15  src/webview/webview.tsx:1
     2  src/webview/WebviewManager.ts:3
     4  webview-ui/src/utils/vscode.ts:1

E:\cline-main>